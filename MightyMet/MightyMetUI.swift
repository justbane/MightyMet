//
//  MightyMetUI.swift
//  MightyMetUI
//
//  Created by Justin Bane on 4/16/17.
//  Copyright Â© 2017 . All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class MightyMetUI : NSObject {

    //// Cache

    private struct Cache {
        static let red: UIColor = UIColor(red: 0.676, green: 0.073, blue: 0.073, alpha: 1.000)
        static let yellow: UIColor = UIColor(red: 0.987, green: 1.000, blue: 0.000, alpha: 1.000)
        static let fuscia: UIColor = UIColor(red: 1.000, green: 0.000, blue: 0.413, alpha: 1.000)
        static let transparent: UIColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.458)
        static let lime: UIColor = UIColor(red: 0.000, green: 1.000, blue: 0.108, alpha: 1.000)
        static let electricBlue: UIColor = UIColor(red: 0.000, green: 0.974, blue: 1.000, alpha: 1.000)
        static let blue: UIColor = UIColor(red: 0.000, green: 0.070, blue: 1.000, alpha: 1.000)
        static let darkBlue: UIColor = MightyMetUI.blue.withBrightness(0.3)
        static let darkRed: UIColor = MightyMetUI.red.withBrightness(0.3)
        static let yellowOrange: UIColor = MightyMetUI.yellow.withHue(0.1)
        static let darkFuscia: UIColor = MightyMetUI.fuscia.withBrightness(0.4)
        static let darkRedWhiteColor: UIColor = UIColor(red: 0.972, green: 0.000, blue: 0.000, alpha: 1.000)
        static let darkRedWhiteOnColor: UIColor = UIColor(red: 0.882, green: 0.000, blue: 0.000, alpha: 1.000)
        static let redYellow: CGGradient = CGGradient(colorsSpace: nil, colors: [MightyMetUI.red.cgColor, MightyMetUI.yellow.cgColor] as CFArray, locations: [0.26, 1])!
    }

    //// Colors

    public dynamic class var red: UIColor { return Cache.red }
    public dynamic class var yellow: UIColor { return Cache.yellow }
    public dynamic class var fuscia: UIColor { return Cache.fuscia }
    public dynamic class var transparent: UIColor { return Cache.transparent }
    public dynamic class var lime: UIColor { return Cache.lime }
    public dynamic class var electricBlue: UIColor { return Cache.electricBlue }
    public dynamic class var blue: UIColor { return Cache.blue }
    public dynamic class var darkBlue: UIColor { return Cache.darkBlue }
    public dynamic class var darkRed: UIColor { return Cache.darkRed }
    public dynamic class var yellowOrange: UIColor { return Cache.yellowOrange }
    public dynamic class var darkFuscia: UIColor { return Cache.darkFuscia }
    public dynamic class var darkRedWhiteColor: UIColor { return Cache.darkRedWhiteColor }
    public dynamic class var darkRedWhiteOnColor: UIColor { return Cache.darkRedWhiteOnColor }

    //// Gradients

    public dynamic class var redYellow: CGGradient { return Cache.redYellow }

    //// Drawing Methods

    public dynamic class func drawMultiSelector(frame: CGRect = CGRect(x: 0, y: 0, width: 345, height: 345), bPMAngle: CGFloat = 0, pitchAngle: CGFloat = 0) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Group
        //// Track
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 173.5, y: frame.minY + 55.3))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 116, y: frame.minY + 70.65), controlPoint1: CGPoint(x: frame.minX + 152.56, y: frame.minY + 55.3), controlPoint2: CGPoint(x: frame.minX + 132.92, y: frame.minY + 60.89))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 58.3, y: frame.minY + 170.5), controlPoint1: CGPoint(x: frame.minX + 81.51, y: frame.minY + 90.56), controlPoint2: CGPoint(x: frame.minX + 58.3, y: frame.minY + 127.82))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 173.5, y: frame.minY + 285.7), controlPoint1: CGPoint(x: frame.minX + 58.3, y: frame.minY + 234.12), controlPoint2: CGPoint(x: frame.minX + 109.88, y: frame.minY + 285.7))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 288.7, y: frame.minY + 170.5), controlPoint1: CGPoint(x: frame.minX + 237.12, y: frame.minY + 285.7), controlPoint2: CGPoint(x: frame.minX + 288.7, y: frame.minY + 234.12))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 173.5, y: frame.minY + 55.3), controlPoint1: CGPoint(x: frame.minX + 288.7, y: frame.minY + 106.88), controlPoint2: CGPoint(x: frame.minX + 237.12, y: frame.minY + 55.3))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: frame.minX + 333.5, y: frame.minY + 170.5))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 173.5, y: frame.minY + 330.5), controlPoint1: CGPoint(x: frame.minX + 333.5, y: frame.minY + 258.87), controlPoint2: CGPoint(x: frame.minX + 261.87, y: frame.minY + 330.5))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 13.5, y: frame.minY + 170.5), controlPoint1: CGPoint(x: frame.minX + 85.13, y: frame.minY + 330.5), controlPoint2: CGPoint(x: frame.minX + 13.5, y: frame.minY + 258.87))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 77.16, y: frame.minY + 42.74), controlPoint1: CGPoint(x: frame.minX + 13.5, y: frame.minY + 118.31), controlPoint2: CGPoint(x: frame.minX + 38.49, y: frame.minY + 71.95))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 173.5, y: frame.minY + 10.5), controlPoint1: CGPoint(x: frame.minX + 103.96, y: frame.minY + 22.5), controlPoint2: CGPoint(x: frame.minX + 137.33, y: frame.minY + 10.5))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 333.5, y: frame.minY + 170.5), controlPoint1: CGPoint(x: frame.minX + 261.87, y: frame.minY + 10.5), controlPoint2: CGPoint(x: frame.minX + 333.5, y: frame.minY + 82.13))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        let bezierBounds = bezierPath.cgPath.boundingBoxOfPath
        context.drawLinearGradient(MightyMetUI.redYellow,
            start: CGPoint(x: bezierBounds.midX, y: bezierBounds.minY),
            end: CGPoint(x: bezierBounds.midX, y: bezierBounds.maxY),
            options: [])
        context.restoreGState()




        //// PitchHandle Drawing
        context.saveGState()
        context.translateBy(x: frame.minX + 173.49, y: frame.minY + 170.13)
        context.rotate(by: -pitchAngle * CGFloat.pi/180)

        let pitchHandlePath = UIBezierPath(ovalIn: CGRect(x: -22.17, y: -158.4, width: 44.54, height: 42.62))
        MightyMetUI.transparent.setFill()
        pitchHandlePath.fill()
        MightyMetUI.lime.setStroke()
        pitchHandlePath.lineWidth = 3.5
        pitchHandlePath.stroke()

        context.restoreGState()


        //// BPMHandle Drawing
        context.saveGState()
        context.translateBy(x: frame.minX + 173.5, y: frame.minY + 170.86)
        context.rotate(by: -bPMAngle * CGFloat.pi/180)

        let bPMHandlePath = UIBezierPath(ovalIn: CGRect(x: -19.72, y: 115.27, width: 44.8, height: 44.79))
        MightyMetUI.transparent.setFill()
        bPMHandlePath.fill()
        MightyMetUI.electricBlue.setStroke()
        bPMHandlePath.lineWidth = 3.5
        bPMHandlePath.stroke()

        context.restoreGState()
    }

    public dynamic class func drawBPMSelector(frame: CGRect = CGRect(x: 0, y: 0, width: 310, height: 310), bPMAngle: CGFloat = 0, bPMText: String = "160") {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!


        //// Shadow Declarations
        let shadow = NSShadow()
        shadow.shadowColor = UIColor.darkGray.withAlphaComponent(0.8)
        shadow.shadowOffset = CGSize(width: 2, height: 2)
        shadow.shadowBlurRadius = 3


        //// Subframes
        let group: CGRect = CGRect(x: frame.minX + 11, y: frame.minY + frame.height - 299, width: 288, height: 288)


        //// Group
        //// Track
        context.saveGState()
        context.translateBy(x: group.minX + 144, y: group.minY + 144)



        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 20, y: -124))
        bezier2Path.addCurve(to: CGPoint(x: 19.13, y: -118.15), controlPoint1: CGPoint(x: 20, y: -121.96), controlPoint2: CGPoint(x: 19.7, y: -120))
        bezier2Path.addCurve(to: CGPoint(x: 0.37, y: -104), controlPoint1: CGPoint(x: 16.66, y: -110.07), controlPoint2: CGPoint(x: 9.22, y: -104.17))
        bezier2Path.addLine(to: CGPoint(x: 0, y: -104))
        bezier2Path.addLine(to: CGPoint(x: 0, y: -103.68))
        bezier2Path.addCurve(to: CGPoint(x: -51.75, y: -89.86), controlPoint1: CGPoint(x: -18.85, y: -103.68), controlPoint2: CGPoint(x: -36.52, y: -98.65))
        bezier2Path.addCurve(to: CGPoint(x: -103.68, y: -0), controlPoint1: CGPoint(x: -82.79, y: -71.95), controlPoint2: CGPoint(x: -103.68, y: -38.41))
        bezier2Path.addCurve(to: CGPoint(x: -0, y: 103.68), controlPoint1: CGPoint(x: -103.68, y: 57.26), controlPoint2: CGPoint(x: -57.26, y: 103.68))
        bezier2Path.addCurve(to: CGPoint(x: 103.68, y: 0), controlPoint1: CGPoint(x: 57.26, y: 103.68), controlPoint2: CGPoint(x: 103.68, y: 57.26))
        bezier2Path.addCurve(to: CGPoint(x: 104, y: 0), controlPoint1: CGPoint(x: 103.68, y: 0), controlPoint2: CGPoint(x: 103.79, y: 0))
        bezier2Path.addCurve(to: CGPoint(x: 124, y: -20), controlPoint1: CGPoint(x: 104, y: -11.05), controlPoint2: CGPoint(x: 112.95, y: -20))
        bezier2Path.addCurve(to: CGPoint(x: 144, y: 0), controlPoint1: CGPoint(x: 135.05, y: -20), controlPoint2: CGPoint(x: 144, y: -11.05))
        bezier2Path.addCurve(to: CGPoint(x: -0, y: 144), controlPoint1: CGPoint(x: 144, y: 79.53), controlPoint2: CGPoint(x: 79.53, y: 144))
        bezier2Path.addCurve(to: CGPoint(x: -144, y: -0), controlPoint1: CGPoint(x: -79.53, y: 144), controlPoint2: CGPoint(x: -144, y: 79.53))
        bezier2Path.addCurve(to: CGPoint(x: -86.7, y: -114.98), controlPoint1: CGPoint(x: -144, y: -46.97), controlPoint2: CGPoint(x: -121.51, y: -88.7))
        bezier2Path.addCurve(to: CGPoint(x: 0, y: -144), controlPoint1: CGPoint(x: -62.59, y: -133.2), controlPoint2: CGPoint(x: -32.55, y: -144))
        bezier2Path.addCurve(to: CGPoint(x: 20, y: -124), controlPoint1: CGPoint(x: 11.05, y: -144), controlPoint2: CGPoint(x: 20, y: -135.05))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(MightyMetUI.redYellow, start: CGPoint(x: -114.66, y: -88.98), end: CGPoint(x: 88.98, y: 114.66), options: [])
        context.restoreGState()
        MightyMetUI.darkRed.setStroke()
        bezier2Path.lineWidth = 1
        bezier2Path.stroke()



        context.restoreGState()


        //// Handle
        context.saveGState()
        context.translateBy(x: group.minX + 144, y: group.minY + 144)

        context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// BPMHandle Drawing
        context.saveGState()
        context.rotate(by: -(bPMAngle + 90) * CGFloat.pi/180)

        let bPMHandlePath = UIBezierPath(ovalIn: CGRect(x: -19.84, y: 105.64, width: 38.72, height: 38.17))
        MightyMetUI.transparent.setFill()
        bPMHandlePath.fill()
        UIColor.white.setStroke()
        bPMHandlePath.lineWidth = 3.5
        bPMHandlePath.stroke()

        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// TextLabel
        //// BPM Drawing
        let bPMRect = CGRect(x: group.minX + 53, y: group.minY + 113, width: 110, height: 61)
        context.saveGState()
        context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
        let bPMStyle = NSMutableParagraphStyle()
        bPMStyle.alignment = .right
        let bPMFontAttributes = [NSFontAttributeName: UIFont(name: "Avenir-Roman", size: 60)!, NSForegroundColorAttributeName: UIColor.white, NSParagraphStyleAttributeName: bPMStyle]

        let bPMTextHeight: CGFloat = bPMText.boundingRect(with: CGSize(width: bPMRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: bPMFontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: bPMRect)
        bPMText.draw(in: CGRect(x: bPMRect.minX, y: bPMRect.minY + (bPMRect.height - bPMTextHeight) / 2, width: bPMRect.width, height: bPMTextHeight), withAttributes: bPMFontAttributes)
        context.restoreGState()
        context.restoreGState()



        //// BPM Label Drawing
        let bPMLabelRect = CGRect(x: group.minX + 168, y: group.minY + 119, width: 43, height: 21)
        let bPMLabelTextContent = "BPM"
        let bPMLabelStyle = NSMutableParagraphStyle()
        bPMLabelStyle.alignment = .left
        let bPMLabelFontAttributes = [NSFontAttributeName: UIFont(name: "Avenir-Light", size: UIFont.labelFontSize)!, NSForegroundColorAttributeName: UIColor.white, NSParagraphStyleAttributeName: bPMLabelStyle]

        let bPMLabelTextHeight: CGFloat = bPMLabelTextContent.boundingRect(with: CGSize(width: bPMLabelRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: bPMLabelFontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: bPMLabelRect)
        bPMLabelTextContent.draw(in: CGRect(x: bPMLabelRect.minX, y: bPMLabelRect.minY + (bPMLabelRect.height - bPMLabelTextHeight) / 2, width: bPMLabelRect.width, height: bPMLabelTextHeight), withAttributes: bPMLabelFontAttributes)
        context.restoreGState()
    }

    public dynamic class func drawHertzSelector(frame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), pitchAngle: CGFloat = 0, hertzText: String = "Name") {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Color Declarations
        let purple = UIColor(red: 0.462, green: 0.000, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let bluePink = CGGradient(colorsSpace: nil, colors: [purple.cgColor, MightyMetUI.fuscia.cgColor] as CFArray, locations: [0, 1])!

        //// Shadow Declarations
        let shadow = NSShadow()
        shadow.shadowColor = UIColor.darkGray.withAlphaComponent(0.8)
        shadow.shadowOffset = CGSize(width: 2, height: 2)
        shadow.shadowBlurRadius = 3

        //// Track
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 188.99, y: frame.minY + 98.5))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 160.99, y: frame.minY + 98.5))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 101, y: frame.minY + 39), controlPoint1: CGPoint(x: frame.minX + 160.46, y: frame.minY + 65.71), controlPoint2: CGPoint(x: frame.minX + 133.85, y: frame.minY + 39.27))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 101, y: frame.minY + 11.01), controlPoint1: CGPoint(x: frame.minX + 101, y: frame.minY + 25.98), controlPoint2: CGPoint(x: frame.minX + 101, y: frame.minY + 11.34))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 188.99, y: frame.minY + 98.5), controlPoint1: CGPoint(x: frame.minX + 149.19, y: frame.minY + 11.54), controlPoint2: CGPoint(x: frame.minX + 188.19, y: frame.minY + 50.37))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: frame.minX + 100, y: frame.minY + 11))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 100, y: frame.minY + 39), controlPoint1: CGPoint(x: frame.minX + 100, y: frame.minY + 11), controlPoint2: CGPoint(x: frame.minX + 100, y: frame.minY + 25.83))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 73.41, y: frame.minY + 45.39), controlPoint1: CGPoint(x: frame.minX + 90.45, y: frame.minY + 39.08), controlPoint2: CGPoint(x: frame.minX + 81.42, y: frame.minY + 41.37))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 71.72, y: frame.minY + 46.27), controlPoint1: CGPoint(x: frame.minX + 72.84, y: frame.minY + 45.67), controlPoint2: CGPoint(x: frame.minX + 72.28, y: frame.minY + 45.97))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 40, y: frame.minY + 99.5), controlPoint1: CGPoint(x: frame.minX + 52.83, y: frame.minY + 56.5), controlPoint2: CGPoint(x: frame.minX + 40, y: frame.minY + 76.5))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 11.5, y: frame.minY + 99.5))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 11.5, y: frame.minY + 100.5))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 40.01, y: frame.minY + 100.5))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 100.5, y: frame.minY + 160), controlPoint1: CGPoint(x: frame.minX + 40.54, y: frame.minY + 133.45), controlPoint2: CGPoint(x: frame.minX + 67.42, y: frame.minY + 160))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 101.5, y: frame.minY + 159.99), controlPoint1: CGPoint(x: frame.minX + 100.83, y: frame.minY + 160), controlPoint2: CGPoint(x: frame.minX + 101.17, y: frame.minY + 160))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 101.5, y: frame.minY + 188.5), controlPoint1: CGPoint(x: frame.minX + 101.5, y: frame.minY + 173.98), controlPoint2: CGPoint(x: frame.minX + 101.5, y: frame.minY + 188.5))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 102.5, y: frame.minY + 188.5))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 102.5, y: frame.minY + 159.97), controlPoint1: CGPoint(x: frame.minX + 102.5, y: frame.minY + 188.5), controlPoint2: CGPoint(x: frame.minX + 102.5, y: frame.minY + 173.96))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 161, y: frame.minY + 99.5), controlPoint1: CGPoint(x: frame.minX + 134.99, y: frame.minY + 158.91), controlPoint2: CGPoint(x: frame.minX + 161, y: frame.minY + 132.24))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 189, y: frame.minY + 99.5))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 189, y: frame.minY + 100))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 100, y: frame.minY + 189), controlPoint1: CGPoint(x: frame.minX + 189, y: frame.minY + 149.15), controlPoint2: CGPoint(x: frame.minX + 149.15, y: frame.minY + 189))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 11, y: frame.minY + 100), controlPoint1: CGPoint(x: frame.minX + 50.85, y: frame.minY + 189), controlPoint2: CGPoint(x: frame.minX + 11, y: frame.minY + 149.15))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 44.47, y: frame.minY + 30.44), controlPoint1: CGPoint(x: frame.minX + 11, y: frame.minY + 71.85), controlPoint2: CGPoint(x: frame.minX + 24.07, y: frame.minY + 46.75))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 50, y: frame.minY + 26.36), controlPoint1: CGPoint(x: frame.minX + 46.26, y: frame.minY + 29.01), controlPoint2: CGPoint(x: frame.minX + 48.1, y: frame.minY + 27.65))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 53.14, y: frame.minY + 24.32), controlPoint1: CGPoint(x: frame.minX + 51.03, y: frame.minY + 25.66), controlPoint2: CGPoint(x: frame.minX + 52.08, y: frame.minY + 24.98))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 98.47, y: frame.minY + 11.01), controlPoint1: CGPoint(x: frame.minX + 66.35, y: frame.minY + 16.13), controlPoint2: CGPoint(x: frame.minX + 81.85, y: frame.minY + 11.29))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 100, y: frame.minY + 11), controlPoint1: CGPoint(x: frame.minX + 99.03, y: frame.minY + 11), controlPoint2: CGPoint(x: frame.minX + 99.51, y: frame.minY + 11))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 100, y: frame.minY + 11))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        let bezierBounds = bezierPath.cgPath.boundingBoxOfPath
        context.drawLinearGradient(bluePink,
            start: CGPoint(x: bezierBounds.midX, y: bezierBounds.maxY),
            end: CGPoint(x: bezierBounds.midX, y: bezierBounds.minY),
            options: [])
        context.restoreGState()
        MightyMetUI.darkRed.setStroke()
        bezierPath.lineWidth = 1
        bezierPath.stroke()




        //// Handle
        context.saveGState()
        context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// BPMHandle Drawing
        context.saveGState()
        context.translateBy(x: frame.minX + 100, y: frame.minY + 100)
        context.rotate(by: -(pitchAngle + 90) * CGFloat.pi/180)

        let bPMHandlePath = UIBezierPath(ovalIn: CGRect(x: -13.84, y: 61, width: 27.84, height: 27.82))
        MightyMetUI.transparent.setFill()
        bPMHandlePath.fill()
        UIColor.white.setStroke()
        bPMHandlePath.lineWidth = 3.5
        bPMHandlePath.stroke()

        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Labels
        //// Hertz Value Drawing
        let hertzValueRect = CGRect(x: frame.minX + 40, y: frame.minY + 65, width: 120, height: 49)
        context.saveGState()
        context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
        let hertzValueStyle = NSMutableParagraphStyle()
        hertzValueStyle.alignment = .center
        let hertzValueFontAttributes = [NSFontAttributeName: UIFont(name: "Avenir-Roman", size: 28)!, NSForegroundColorAttributeName: UIColor.white, NSParagraphStyleAttributeName: hertzValueStyle]

        let hertzValueTextHeight: CGFloat = hertzText.boundingRect(with: CGSize(width: hertzValueRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: hertzValueFontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: hertzValueRect)
        hertzText.draw(in: CGRect(x: hertzValueRect.minX, y: hertzValueRect.minY + (hertzValueRect.height - hertzValueTextHeight) / 2, width: hertzValueRect.width, height: hertzValueTextHeight), withAttributes: hertzValueFontAttributes)
        context.restoreGState()
        context.restoreGState()



        //// Herts Label Drawing
        let hertsLabelRect = CGRect(x: frame.minX + 72, y: frame.minY + 114, width: 56, height: 21)
        let hertsLabelTextContent = "sound"
        let hertsLabelStyle = NSMutableParagraphStyle()
        hertsLabelStyle.alignment = .center
        let hertsLabelFontAttributes = [NSFontAttributeName: UIFont(name: "Avenir-Light", size: 20)!, NSForegroundColorAttributeName: UIColor.white, NSParagraphStyleAttributeName: hertsLabelStyle]

        let hertsLabelTextHeight: CGFloat = hertsLabelTextContent.boundingRect(with: CGSize(width: hertsLabelRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: hertsLabelFontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: hertsLabelRect)
        hertsLabelTextContent.draw(in: CGRect(x: hertsLabelRect.minX, y: hertsLabelRect.minY + (hertsLabelRect.height - hertsLabelTextHeight) / 2, width: hertsLabelRect.width, height: hertsLabelTextHeight), withAttributes: hertsLabelFontAttributes)
        context.restoreGState()
    }

    public dynamic class func drawPlayButton(frame: CGRect = CGRect(x: 7, y: 7, width: 86, height: 86), isRunning: Bool = false, isNotRunning: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }


        //// Shadow Declarations
        let shadow = NSShadow()
        shadow.shadowColor = UIColor.darkGray.withAlphaComponent(0.8)
        shadow.shadowOffset = CGSize(width: 2, height: 2)
        shadow.shadowBlurRadius = 3


        //// Subframes
        let playGroup: CGRect = CGRect(x: frame.minX + fastFloor((frame.width - 69) * 0.52941 + 0.5), y: frame.minY + fastFloor((frame.height - 69) * 0.47059 + 0.5), width: 69, height: 69)


        //// Play Group
        context.saveGState()
        context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: playGroup.minX + 34.5, y: playGroup.minY + 6))
        bezierPath.addCurve(to: CGPoint(x: playGroup.minX + 18.96, y: playGroup.minY + 10.61), controlPoint1: CGPoint(x: playGroup.minX + 28.77, y: playGroup.minY + 6), controlPoint2: CGPoint(x: playGroup.minX + 23.43, y: playGroup.minY + 7.69))
        bezierPath.addCurve(to: CGPoint(x: playGroup.minX + 6, y: playGroup.minY + 34.5), controlPoint1: CGPoint(x: playGroup.minX + 11.16, y: playGroup.minY + 15.69), controlPoint2: CGPoint(x: playGroup.minX + 6, y: playGroup.minY + 24.49))
        bezierPath.addCurve(to: CGPoint(x: playGroup.minX + 34.5, y: playGroup.minY + 63), controlPoint1: CGPoint(x: playGroup.minX + 6, y: playGroup.minY + 50.24), controlPoint2: CGPoint(x: playGroup.minX + 18.76, y: playGroup.minY + 63))
        bezierPath.addCurve(to: CGPoint(x: playGroup.minX + 63, y: playGroup.minY + 34.5), controlPoint1: CGPoint(x: playGroup.minX + 50.24, y: playGroup.minY + 63), controlPoint2: CGPoint(x: playGroup.minX + 63, y: playGroup.minY + 50.24))
        bezierPath.addCurve(to: CGPoint(x: playGroup.minX + 34.5, y: playGroup.minY + 6), controlPoint1: CGPoint(x: playGroup.minX + 63, y: playGroup.minY + 18.76), controlPoint2: CGPoint(x: playGroup.minX + 50.24, y: playGroup.minY + 6))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: playGroup.minX + 69, y: playGroup.minY + 34.5))
        bezierPath.addCurve(to: CGPoint(x: playGroup.minX + 34.5, y: playGroup.minY + 69), controlPoint1: CGPoint(x: playGroup.minX + 69, y: playGroup.minY + 53.55), controlPoint2: CGPoint(x: playGroup.minX + 53.55, y: playGroup.minY + 69))
        bezierPath.addCurve(to: CGPoint(x: playGroup.minX, y: playGroup.minY + 34.5), controlPoint1: CGPoint(x: playGroup.minX + 15.45, y: playGroup.minY + 69), controlPoint2: CGPoint(x: playGroup.minX, y: playGroup.minY + 53.55))
        bezierPath.addCurve(to: CGPoint(x: playGroup.minX + 13.66, y: playGroup.minY + 7.01), controlPoint1: CGPoint(x: playGroup.minX, y: playGroup.minY + 23.28), controlPoint2: CGPoint(x: playGroup.minX + 5.36, y: playGroup.minY + 13.31))
        bezierPath.addCurve(to: CGPoint(x: playGroup.minX + 34.5, y: playGroup.minY), controlPoint1: CGPoint(x: playGroup.minX + 19.45, y: playGroup.minY + 2.61), controlPoint2: CGPoint(x: playGroup.minX + 26.67, y: playGroup.minY))
        bezierPath.addCurve(to: CGPoint(x: playGroup.minX + 69, y: playGroup.minY + 34.5), controlPoint1: CGPoint(x: playGroup.minX + 53.55, y: playGroup.minY), controlPoint2: CGPoint(x: playGroup.minX + 69, y: playGroup.minY + 15.45))
        bezierPath.close()
        MightyMetUI.transparent.setFill()
        bezierPath.fill()


        if (isNotRunning) {
            //// Play Drawing
            let playPath = UIBezierPath()
            playPath.move(to: CGPoint(x: playGroup.minX + 25, y: playGroup.minY + 15))
            playPath.addLine(to: CGPoint(x: playGroup.minX + 53, y: playGroup.minY + 33))
            playPath.addLine(to: CGPoint(x: playGroup.minX + 25, y: playGroup.minY + 54))
            playPath.addLine(to: CGPoint(x: playGroup.minX + 25, y: playGroup.minY + 15))
            playPath.close()
            MightyMetUI.transparent.setFill()
            playPath.fill()
        }


        if (isRunning) {
            //// Pause
            //// Rectangle Drawing
            let rectanglePath = UIBezierPath(rect: CGRect(x: playGroup.minX + 23, y: playGroup.minY + 19, width: 8, height: 31))
            MightyMetUI.yellowOrange.setFill()
            rectanglePath.fill()


            //// Rectangle 2 Drawing
            let rectangle2Path = UIBezierPath(rect: CGRect(x: playGroup.minX + 37, y: playGroup.minY + 19, width: 8, height: 31))
            MightyMetUI.yellowOrange.setFill()
            rectangle2Path.fill()




            //// Bezier 2 Drawing
            let bezier2Path = UIBezierPath()
            bezier2Path.move(to: CGPoint(x: playGroup.minX + 34.5, y: playGroup.minY + 6))
            bezier2Path.addCurve(to: CGPoint(x: playGroup.minX + 18.96, y: playGroup.minY + 10.61), controlPoint1: CGPoint(x: playGroup.minX + 28.77, y: playGroup.minY + 6), controlPoint2: CGPoint(x: playGroup.minX + 23.43, y: playGroup.minY + 7.69))
            bezier2Path.addCurve(to: CGPoint(x: playGroup.minX + 6, y: playGroup.minY + 34.5), controlPoint1: CGPoint(x: playGroup.minX + 11.16, y: playGroup.minY + 15.69), controlPoint2: CGPoint(x: playGroup.minX + 6, y: playGroup.minY + 24.49))
            bezier2Path.addCurve(to: CGPoint(x: playGroup.minX + 34.5, y: playGroup.minY + 63), controlPoint1: CGPoint(x: playGroup.minX + 6, y: playGroup.minY + 50.24), controlPoint2: CGPoint(x: playGroup.minX + 18.76, y: playGroup.minY + 63))
            bezier2Path.addCurve(to: CGPoint(x: playGroup.minX + 63, y: playGroup.minY + 34.5), controlPoint1: CGPoint(x: playGroup.minX + 50.24, y: playGroup.minY + 63), controlPoint2: CGPoint(x: playGroup.minX + 63, y: playGroup.minY + 50.24))
            bezier2Path.addCurve(to: CGPoint(x: playGroup.minX + 34.5, y: playGroup.minY + 6), controlPoint1: CGPoint(x: playGroup.minX + 63, y: playGroup.minY + 18.76), controlPoint2: CGPoint(x: playGroup.minX + 50.24, y: playGroup.minY + 6))
            bezier2Path.close()
            bezier2Path.move(to: CGPoint(x: playGroup.minX + 69, y: playGroup.minY + 34.5))
            bezier2Path.addCurve(to: CGPoint(x: playGroup.minX + 34.5, y: playGroup.minY + 69), controlPoint1: CGPoint(x: playGroup.minX + 69, y: playGroup.minY + 53.55), controlPoint2: CGPoint(x: playGroup.minX + 53.55, y: playGroup.minY + 69))
            bezier2Path.addCurve(to: CGPoint(x: playGroup.minX, y: playGroup.minY + 34.5), controlPoint1: CGPoint(x: playGroup.minX + 15.45, y: playGroup.minY + 69), controlPoint2: CGPoint(x: playGroup.minX, y: playGroup.minY + 53.55))
            bezier2Path.addCurve(to: CGPoint(x: playGroup.minX + 13.66, y: playGroup.minY + 7.01), controlPoint1: CGPoint(x: playGroup.minX, y: playGroup.minY + 23.28), controlPoint2: CGPoint(x: playGroup.minX + 5.36, y: playGroup.minY + 13.31))
            bezier2Path.addCurve(to: CGPoint(x: playGroup.minX + 34.5, y: playGroup.minY), controlPoint1: CGPoint(x: playGroup.minX + 19.45, y: playGroup.minY + 2.61), controlPoint2: CGPoint(x: playGroup.minX + 26.67, y: playGroup.minY))
            bezier2Path.addCurve(to: CGPoint(x: playGroup.minX + 69, y: playGroup.minY + 34.5), controlPoint1: CGPoint(x: playGroup.minX + 53.55, y: playGroup.minY), controlPoint2: CGPoint(x: playGroup.minX + 69, y: playGroup.minY + 15.45))
            bezier2Path.close()
            MightyMetUI.yellowOrange.setFill()
            bezier2Path.fill()
        }


        context.endTransparencyLayer()
        context.restoreGState()
    }

    public dynamic class func drawPlaylistButton(frame: CGRect = CGRect(x: 7, y: 6, width: 87, height: 88)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }


        //// Shadow Declarations
        let shadow = NSShadow()
        shadow.shadowColor = UIColor.darkGray.withAlphaComponent(0.8)
        shadow.shadowOffset = CGSize(width: 2, height: 2)
        shadow.shadowBlurRadius = 3


        //// Subframes
        let playlist: CGRect = CGRect(x: frame.minX + fastFloor((frame.width - 69) * 0.50000 + 0.5), y: frame.minY + fastFloor((frame.height - 69) * 0.47368 + 0.5), width: 69, height: 69)


        //// Playlist
        context.saveGState()
        context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: playlist.minX + 34.5, y: playlist.minY + 6))
        bezierPath.addCurve(to: CGPoint(x: playlist.minX + 18.96, y: playlist.minY + 10.61), controlPoint1: CGPoint(x: playlist.minX + 28.77, y: playlist.minY + 6), controlPoint2: CGPoint(x: playlist.minX + 23.43, y: playlist.minY + 7.69))
        bezierPath.addCurve(to: CGPoint(x: playlist.minX + 6, y: playlist.minY + 34.5), controlPoint1: CGPoint(x: playlist.minX + 11.16, y: playlist.minY + 15.69), controlPoint2: CGPoint(x: playlist.minX + 6, y: playlist.minY + 24.49))
        bezierPath.addCurve(to: CGPoint(x: playlist.minX + 34.5, y: playlist.minY + 63), controlPoint1: CGPoint(x: playlist.minX + 6, y: playlist.minY + 50.24), controlPoint2: CGPoint(x: playlist.minX + 18.76, y: playlist.minY + 63))
        bezierPath.addCurve(to: CGPoint(x: playlist.minX + 63, y: playlist.minY + 34.5), controlPoint1: CGPoint(x: playlist.minX + 50.24, y: playlist.minY + 63), controlPoint2: CGPoint(x: playlist.minX + 63, y: playlist.minY + 50.24))
        bezierPath.addCurve(to: CGPoint(x: playlist.minX + 34.5, y: playlist.minY + 6), controlPoint1: CGPoint(x: playlist.minX + 63, y: playlist.minY + 18.76), controlPoint2: CGPoint(x: playlist.minX + 50.24, y: playlist.minY + 6))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: playlist.minX + 69, y: playlist.minY + 34.5))
        bezierPath.addCurve(to: CGPoint(x: playlist.minX + 34.5, y: playlist.minY + 69), controlPoint1: CGPoint(x: playlist.minX + 69, y: playlist.minY + 53.55), controlPoint2: CGPoint(x: playlist.minX + 53.55, y: playlist.minY + 69))
        bezierPath.addCurve(to: CGPoint(x: playlist.minX, y: playlist.minY + 34.5), controlPoint1: CGPoint(x: playlist.minX + 15.45, y: playlist.minY + 69), controlPoint2: CGPoint(x: playlist.minX, y: playlist.minY + 53.55))
        bezierPath.addCurve(to: CGPoint(x: playlist.minX + 13.66, y: playlist.minY + 7.01), controlPoint1: CGPoint(x: playlist.minX, y: playlist.minY + 23.28), controlPoint2: CGPoint(x: playlist.minX + 5.36, y: playlist.minY + 13.31))
        bezierPath.addCurve(to: CGPoint(x: playlist.minX + 34.5, y: playlist.minY), controlPoint1: CGPoint(x: playlist.minX + 19.45, y: playlist.minY + 2.61), controlPoint2: CGPoint(x: playlist.minX + 26.67, y: playlist.minY))
        bezierPath.addCurve(to: CGPoint(x: playlist.minX + 69, y: playlist.minY + 34.5), controlPoint1: CGPoint(x: playlist.minX + 53.55, y: playlist.minY), controlPoint2: CGPoint(x: playlist.minX + 69, y: playlist.minY + 15.45))
        bezierPath.close()
        MightyMetUI.transparent.setFill()
        bezierPath.fill()


        //// Lines
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: playlist.minX + 19, y: playlist.minY + 23, width: 31, height: 3))
        MightyMetUI.transparent.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: playlist.minX + 19, y: playlist.minY + 30, width: 31, height: 3))
        MightyMetUI.transparent.setFill()
        rectangle2Path.fill()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(rect: CGRect(x: playlist.minX + 19, y: playlist.minY + 37, width: 31, height: 3))
        MightyMetUI.transparent.setFill()
        rectangle3Path.fill()


        //// Rectangle 4 Drawing
        let rectangle4Path = UIBezierPath(rect: CGRect(x: playlist.minX + 19, y: playlist.minY + 44, width: 31, height: 3))
        MightyMetUI.transparent.setFill()
        rectangle4Path.fill()




        context.endTransparencyLayer()
        context.restoreGState()
    }

    public dynamic class func drawTempoLight(frame: CGRect = CGRect(x: 0, y: 0, width: 100, height: 100), flash: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }


        //// Gradient Declarations
        let darkRedWhite = CGGradient(colorsSpace: nil, colors: [MightyMetUI.darkRed.cgColor, MightyMetUI.darkRed.blended(withFraction: 0.5, of: MightyMetUI.darkRedWhiteColor).cgColor, MightyMetUI.darkRedWhiteColor.cgColor, MightyMetUI.darkRedWhiteColor.blended(withFraction: 0.5, of: UIColor.white).cgColor, UIColor.white.cgColor] as CFArray, locations: [0, 0.31, 0.84, 0.99, 1])!
        let darkRedWhiteOn = CGGradient(colorsSpace: nil, colors: [MightyMetUI.darkRedWhiteOnColor.cgColor, MightyMetUI.darkRedWhiteOnColor.blended(withFraction: 0.5, of: MightyMetUI.darkRedWhiteColor).cgColor, MightyMetUI.darkRedWhiteColor.cgColor, MightyMetUI.darkRedWhiteColor.blended(withFraction: 0.5, of: UIColor.white).cgColor, UIColor.white.cgColor] as CFArray, locations: [0, 0.42, 0.62, 0.98, 1])!


        //// Subframes
        let group: CGRect = CGRect(x: frame.minX + 8, y: frame.minY + 7, width: frame.width - 15, height: frame.height - 15)


        //// Group
        //// Off
        //// Oval Drawing
        let ovalRect = CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.00000 + 0.5), width: fastFloor(group.width * 1.00000 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 1.00000 + 0.5) - fastFloor(group.height * 0.00000 + 0.5))
        let ovalPath = UIBezierPath(ovalIn: ovalRect)
        context.saveGState()
        ovalPath.addClip()
        let ovalResizeRatio: CGFloat = min(ovalRect.width / 85, ovalRect.height / 85)
        context.drawRadialGradient(darkRedWhite,
            startCenter: CGPoint(x: ovalRect.midX + 0 * ovalResizeRatio, y: ovalRect.midY + 0 * ovalResizeRatio), startRadius: 43.92 * ovalResizeRatio,
            endCenter: CGPoint(x: ovalRect.midX + -19.88 * ovalResizeRatio, y: ovalRect.midY + -16.17 * ovalResizeRatio), endRadius: 0.33 * ovalResizeRatio,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()
        UIColor.black.setStroke()
        ovalPath.lineWidth = 1
        ovalPath.stroke()




        if (flash) {
            //// On
            //// Oval 2 Drawing
            let oval2Rect = CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.00000 + 0.5), width: fastFloor(group.width * 1.00000 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 1.00000 + 0.5) - fastFloor(group.height * 0.00000 + 0.5))
            let oval2Path = UIBezierPath(ovalIn: oval2Rect)
            context.saveGState()
            oval2Path.addClip()
            let oval2ResizeRatio: CGFloat = min(oval2Rect.width / 85, oval2Rect.height / 85)
            context.drawRadialGradient(darkRedWhiteOn,
                startCenter: CGPoint(x: oval2Rect.midX + 0 * oval2ResizeRatio, y: oval2Rect.midY + 0 * oval2ResizeRatio), startRadius: 43.92 * oval2ResizeRatio,
                endCenter: CGPoint(x: oval2Rect.midX + -19.88 * oval2ResizeRatio, y: oval2Rect.midY + -16.17 * oval2ResizeRatio), endRadius: 0.33 * oval2ResizeRatio,
                options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
            context.restoreGState()
            UIColor.black.setStroke()
            oval2Path.lineWidth = 1
            oval2Path.stroke()


        }
    }

    public dynamic class func drawDivisionButton(frame: CGRect = CGRect(x: 7, y: 6, width: 87, height: 88), isDivided: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }


        //// Shadow Declarations
        let shadow = NSShadow()
        shadow.shadowColor = UIColor.darkGray.withAlphaComponent(0.8)
        shadow.shadowOffset = CGSize(width: 2, height: 2)
        shadow.shadowBlurRadius = 3


        //// Subframes
        let circle: CGRect = CGRect(x: frame.minX + fastFloor((frame.width - 69) * 0.50000 + 0.5), y: frame.minY + fastFloor((frame.height - 69) * 0.47368 + 0.5), width: 69, height: 69)
        let off: CGRect = CGRect(x: frame.minX + fastFloor((frame.width - 42) * 0.51111 + 0.5), y: frame.minY + fastFloor((frame.height - 38) * 0.48000 + 0.5), width: 42, height: 38)
        let on: CGRect = CGRect(x: frame.minX + fastFloor((frame.width - 42) * 0.51111 + 0.5), y: frame.minY + fastFloor((frame.height - 38) * 0.48000 + 0.5), width: 42, height: 38)


        //// Circle
        context.saveGState()
        context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: circle.minX + 34.5, y: circle.minY + 6))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 18.96, y: circle.minY + 10.61), controlPoint1: CGPoint(x: circle.minX + 28.77, y: circle.minY + 6), controlPoint2: CGPoint(x: circle.minX + 23.43, y: circle.minY + 7.69))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 6, y: circle.minY + 34.5), controlPoint1: CGPoint(x: circle.minX + 11.16, y: circle.minY + 15.69), controlPoint2: CGPoint(x: circle.minX + 6, y: circle.minY + 24.49))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 34.5, y: circle.minY + 63), controlPoint1: CGPoint(x: circle.minX + 6, y: circle.minY + 50.24), controlPoint2: CGPoint(x: circle.minX + 18.76, y: circle.minY + 63))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 63, y: circle.minY + 34.5), controlPoint1: CGPoint(x: circle.minX + 50.24, y: circle.minY + 63), controlPoint2: CGPoint(x: circle.minX + 63, y: circle.minY + 50.24))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 34.5, y: circle.minY + 6), controlPoint1: CGPoint(x: circle.minX + 63, y: circle.minY + 18.76), controlPoint2: CGPoint(x: circle.minX + 50.24, y: circle.minY + 6))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: circle.minX + 69, y: circle.minY + 34.5))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 34.5, y: circle.minY + 69), controlPoint1: CGPoint(x: circle.minX + 69, y: circle.minY + 53.55), controlPoint2: CGPoint(x: circle.minX + 53.55, y: circle.minY + 69))
        bezierPath.addCurve(to: CGPoint(x: circle.minX, y: circle.minY + 34.5), controlPoint1: CGPoint(x: circle.minX + 15.45, y: circle.minY + 69), controlPoint2: CGPoint(x: circle.minX, y: circle.minY + 53.55))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 13.66, y: circle.minY + 7.01), controlPoint1: CGPoint(x: circle.minX, y: circle.minY + 23.28), controlPoint2: CGPoint(x: circle.minX + 5.36, y: circle.minY + 13.31))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 34.5, y: circle.minY), controlPoint1: CGPoint(x: circle.minX + 19.45, y: circle.minY + 2.61), controlPoint2: CGPoint(x: circle.minX + 26.67, y: circle.minY))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 69, y: circle.minY + 34.5), controlPoint1: CGPoint(x: circle.minX + 53.55, y: circle.minY), controlPoint2: CGPoint(x: circle.minX + 69, y: circle.minY + 15.45))
        bezierPath.close()
        MightyMetUI.transparent.setFill()
        bezierPath.fill()


        if (isDivided) {
            //// Bezier 2 Drawing
            let bezier2Path = UIBezierPath()
            bezier2Path.move(to: CGPoint(x: circle.minX + 34.5, y: circle.minY + 6))
            bezier2Path.addCurve(to: CGPoint(x: circle.minX + 18.96, y: circle.minY + 10.61), controlPoint1: CGPoint(x: circle.minX + 28.77, y: circle.minY + 6), controlPoint2: CGPoint(x: circle.minX + 23.43, y: circle.minY + 7.69))
            bezier2Path.addCurve(to: CGPoint(x: circle.minX + 6, y: circle.minY + 34.5), controlPoint1: CGPoint(x: circle.minX + 11.16, y: circle.minY + 15.69), controlPoint2: CGPoint(x: circle.minX + 6, y: circle.minY + 24.49))
            bezier2Path.addCurve(to: CGPoint(x: circle.minX + 34.5, y: circle.minY + 63), controlPoint1: CGPoint(x: circle.minX + 6, y: circle.minY + 50.24), controlPoint2: CGPoint(x: circle.minX + 18.76, y: circle.minY + 63))
            bezier2Path.addCurve(to: CGPoint(x: circle.minX + 63, y: circle.minY + 34.5), controlPoint1: CGPoint(x: circle.minX + 50.24, y: circle.minY + 63), controlPoint2: CGPoint(x: circle.minX + 63, y: circle.minY + 50.24))
            bezier2Path.addCurve(to: CGPoint(x: circle.minX + 34.5, y: circle.minY + 6), controlPoint1: CGPoint(x: circle.minX + 63, y: circle.minY + 18.76), controlPoint2: CGPoint(x: circle.minX + 50.24, y: circle.minY + 6))
            bezier2Path.close()
            bezier2Path.move(to: CGPoint(x: circle.minX + 69, y: circle.minY + 34.5))
            bezier2Path.addCurve(to: CGPoint(x: circle.minX + 34.5, y: circle.minY + 69), controlPoint1: CGPoint(x: circle.minX + 69, y: circle.minY + 53.55), controlPoint2: CGPoint(x: circle.minX + 53.55, y: circle.minY + 69))
            bezier2Path.addCurve(to: CGPoint(x: circle.minX, y: circle.minY + 34.5), controlPoint1: CGPoint(x: circle.minX + 15.45, y: circle.minY + 69), controlPoint2: CGPoint(x: circle.minX, y: circle.minY + 53.55))
            bezier2Path.addCurve(to: CGPoint(x: circle.minX + 13.66, y: circle.minY + 7.01), controlPoint1: CGPoint(x: circle.minX, y: circle.minY + 23.28), controlPoint2: CGPoint(x: circle.minX + 5.36, y: circle.minY + 13.31))
            bezier2Path.addCurve(to: CGPoint(x: circle.minX + 34.5, y: circle.minY), controlPoint1: CGPoint(x: circle.minX + 19.45, y: circle.minY + 2.61), controlPoint2: CGPoint(x: circle.minX + 26.67, y: circle.minY))
            bezier2Path.addCurve(to: CGPoint(x: circle.minX + 69, y: circle.minY + 34.5), controlPoint1: CGPoint(x: circle.minX + 53.55, y: circle.minY), controlPoint2: CGPoint(x: circle.minX + 69, y: circle.minY + 15.45))
            bezier2Path.close()
            MightyMetUI.yellowOrange.setFill()
            bezier2Path.fill()
        }


        context.endTransparencyLayer()
        context.restoreGState()


        //// Off
        context.saveGState()
        context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: off.minX + 14, y: off.minY, width: 13, height: 13))
        MightyMetUI.transparent.setFill()
        ovalPath.fill()


        //// Oval 2 Drawing
        let oval2Path = UIBezierPath(ovalIn: CGRect(x: off.minX + 14, y: off.minY + 25, width: 13, height: 13))
        MightyMetUI.transparent.setFill()
        oval2Path.fill()


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: off.minX, y: off.minY + 17, width: 42, height: 4))
        MightyMetUI.transparent.setFill()
        rectanglePath.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        if (isDivided) {
            //// On
            context.saveGState()
            context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
            context.beginTransparencyLayer(auxiliaryInfo: nil)


            //// Oval 3 Drawing
            let oval3Path = UIBezierPath(ovalIn: CGRect(x: on.minX + 14, y: on.minY, width: 13, height: 13))
            MightyMetUI.yellowOrange.setFill()
            oval3Path.fill()


            //// Oval 4 Drawing
            let oval4Path = UIBezierPath(ovalIn: CGRect(x: on.minX + 14, y: on.minY + 25, width: 13, height: 13))
            MightyMetUI.yellowOrange.setFill()
            oval4Path.fill()


            //// Rectangle 2 Drawing
            let rectangle2Path = UIBezierPath(rect: CGRect(x: on.minX, y: on.minY + 17, width: 42, height: 4))
            MightyMetUI.yellowOrange.setFill()
            rectangle2Path.fill()


            context.endTransparencyLayer()
            context.restoreGState()
        }
    }

    public dynamic class func drawTripletButton(frame: CGRect = CGRect(x: 0, y: 0, width: 66, height: 62), isTriplet: Bool = true) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }


        //// Shadow Declarations
        let shadow = NSShadow()
        shadow.shadowColor = UIColor.darkGray.withAlphaComponent(0.8)
        shadow.shadowOffset = CGSize(width: 2, height: 2)
        shadow.shadowBlurRadius = 3


        //// Subframes
        let circle: CGRect = CGRect(x: frame.minX + fastFloor((frame.width - 47) * 0.47368 + 0.5), y: frame.minY + fastFloor((frame.height - 47) * 0.40000 + 0.5), width: 47, height: 47)
        let off: CGRect = CGRect(x: frame.minX + fastFloor((frame.width - 26.96) * 0.46093 - 0.49) + 0.99, y: frame.minY + fastFloor((frame.height - 22.82) * 0.45947 + 0.5), width: 26.96, height: 22.82)
        let on: CGRect = CGRect(x: frame.minX + fastFloor((frame.width - 26.96) * 0.46093 - 0.49) + 0.99, y: frame.minY + fastFloor((frame.height - 22.82) * 0.45947 + 0.5), width: 26.96, height: 22.82)


        //// Circle
        context.saveGState()
        context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 4.09))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 12.91, y: circle.minY + 7.22), controlPoint1: CGPoint(x: circle.minX + 19.6, y: circle.minY + 4.09), controlPoint2: CGPoint(x: circle.minX + 15.96, y: circle.minY + 5.24))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 4.09, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 7.6, y: circle.minY + 10.69), controlPoint2: CGPoint(x: circle.minX + 4.09, y: circle.minY + 16.68))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 42.91), controlPoint1: CGPoint(x: circle.minX + 4.09, y: circle.minY + 34.22), controlPoint2: CGPoint(x: circle.minX + 12.78, y: circle.minY + 42.91))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 42.91, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 34.22, y: circle.minY + 42.91), controlPoint2: CGPoint(x: circle.minX + 42.91, y: circle.minY + 34.22))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 4.09), controlPoint1: CGPoint(x: circle.minX + 42.91, y: circle.minY + 12.78), controlPoint2: CGPoint(x: circle.minX + 34.22, y: circle.minY + 4.09))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: circle.minX + 47, y: circle.minY + 23.5))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 47), controlPoint1: CGPoint(x: circle.minX + 47, y: circle.minY + 36.48), controlPoint2: CGPoint(x: circle.minX + 36.48, y: circle.minY + 47))
        bezierPath.addCurve(to: CGPoint(x: circle.minX, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 10.52, y: circle.minY + 47), controlPoint2: CGPoint(x: circle.minX, y: circle.minY + 36.48))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 9.3, y: circle.minY + 4.77), controlPoint1: CGPoint(x: circle.minX, y: circle.minY + 15.86), controlPoint2: CGPoint(x: circle.minX + 3.65, y: circle.minY + 9.06))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY), controlPoint1: CGPoint(x: circle.minX + 13.25, y: circle.minY + 1.78), controlPoint2: CGPoint(x: circle.minX + 18.17, y: circle.minY))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 47, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 36.48, y: circle.minY), controlPoint2: CGPoint(x: circle.minX + 47, y: circle.minY + 10.52))
        bezierPath.close()
        MightyMetUI.transparent.setFill()
        bezierPath.fill()


        if (isTriplet) {
            //// Bezier 14 Drawing
            let bezier14Path = UIBezierPath()
            bezier14Path.move(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 4.09))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX + 12.91, y: circle.minY + 7.22), controlPoint1: CGPoint(x: circle.minX + 19.6, y: circle.minY + 4.09), controlPoint2: CGPoint(x: circle.minX + 15.96, y: circle.minY + 5.24))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX + 4.09, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 7.6, y: circle.minY + 10.69), controlPoint2: CGPoint(x: circle.minX + 4.09, y: circle.minY + 16.68))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 42.91), controlPoint1: CGPoint(x: circle.minX + 4.09, y: circle.minY + 34.22), controlPoint2: CGPoint(x: circle.minX + 12.78, y: circle.minY + 42.91))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX + 42.91, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 34.22, y: circle.minY + 42.91), controlPoint2: CGPoint(x: circle.minX + 42.91, y: circle.minY + 34.22))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 4.09), controlPoint1: CGPoint(x: circle.minX + 42.91, y: circle.minY + 12.78), controlPoint2: CGPoint(x: circle.minX + 34.22, y: circle.minY + 4.09))
            bezier14Path.close()
            bezier14Path.move(to: CGPoint(x: circle.minX + 47, y: circle.minY + 23.5))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 47), controlPoint1: CGPoint(x: circle.minX + 47, y: circle.minY + 36.48), controlPoint2: CGPoint(x: circle.minX + 36.48, y: circle.minY + 47))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 10.52, y: circle.minY + 47), controlPoint2: CGPoint(x: circle.minX, y: circle.minY + 36.48))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX + 9.3, y: circle.minY + 4.77), controlPoint1: CGPoint(x: circle.minX, y: circle.minY + 15.86), controlPoint2: CGPoint(x: circle.minX + 3.65, y: circle.minY + 9.06))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY), controlPoint1: CGPoint(x: circle.minX + 13.25, y: circle.minY + 1.78), controlPoint2: CGPoint(x: circle.minX + 18.17, y: circle.minY))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX + 47, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 36.48, y: circle.minY), controlPoint2: CGPoint(x: circle.minX + 47, y: circle.minY + 10.52))
            bezier14Path.close()
            MightyMetUI.yellowOrange.setFill()
            bezier14Path.fill()
        }


        context.endTransparencyLayer()
        context.restoreGState()


        //// Off
        context.saveGState()
        context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Text Drawing
        let textRect = CGRect(x: off.minX + 12.01, y: off.minY, width: 6, height: 10)
        let textTextContent = "3"
        let textStyle = NSMutableParagraphStyle()
        textStyle.alignment = .left
        let textFontAttributes = [NSFontAttributeName: UIFont(name: "AvenirNext-Italic", size: 10)!, NSForegroundColorAttributeName: MightyMetUI.transparent, NSParagraphStyleAttributeName: textStyle]

        let textTextHeight: CGFloat = textTextContent.boundingRect(with: CGSize(width: textRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: textFontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: textRect)
        textTextContent.draw(in: CGRect(x: textRect.minX, y: textRect.minY + (textRect.height - textTextHeight) / 2, width: textRect.width, height: textTextHeight), withAttributes: textFontAttributes)
        context.restoreGState()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: off.minX + 3.51, y: off.minY + 4.5))
        bezier2Path.addCurve(to: CGPoint(x: off.minX + 10.51, y: off.minY + 4.5), controlPoint1: CGPoint(x: off.minX + 10.51, y: off.minY + 4.5), controlPoint2: CGPoint(x: off.minX + 10.51, y: off.minY + 4.5))
        MightyMetUI.transparent.setStroke()
        bezier2Path.lineWidth = 1
        bezier2Path.stroke()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: off.minX + 19.51, y: off.minY + 4.5))
        bezier3Path.addCurve(to: CGPoint(x: off.minX + 26.51, y: off.minY + 4.5), controlPoint1: CGPoint(x: off.minX + 26.51, y: off.minY + 4.5), controlPoint2: CGPoint(x: off.minX + 26.51, y: off.minY + 4.5))
        MightyMetUI.transparent.setStroke()
        bezier3Path.lineWidth = 1
        bezier3Path.stroke()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: off.minX + 3.51, y: off.minY + 10.5))
        bezier4Path.addCurve(to: CGPoint(x: off.minX + 26.51, y: off.minY + 10.5), controlPoint1: CGPoint(x: off.minX + 26.51, y: off.minY + 10.5), controlPoint2: CGPoint(x: off.minX + 26.51, y: off.minY + 10.5))
        MightyMetUI.transparent.setStroke()
        bezier4Path.lineWidth = 1
        bezier4Path.stroke()


        //// Bezier 5 Drawing
        context.saveGState()
        context.translateBy(x: off.minX + 3.97, y: off.minY + 15.5)
        context.rotate(by: -90 * CGFloat.pi/180)

        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: -4.5, y: 0))
        bezier5Path.addCurve(to: CGPoint(x: 4.5, y: 0), controlPoint1: CGPoint(x: 4.5, y: 0), controlPoint2: CGPoint(x: 4.5, y: 0))
        MightyMetUI.transparent.setStroke()
        bezier5Path.lineWidth = 1
        bezier5Path.stroke()

        context.restoreGState()


        //// Bezier 6 Drawing
        context.saveGState()
        context.translateBy(x: off.minX + 15.01, y: off.minY + 15.5)
        context.rotate(by: -90 * CGFloat.pi/180)

        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: -4.5, y: 0))
        bezier6Path.addCurve(to: CGPoint(x: 4.5, y: 0), controlPoint1: CGPoint(x: 4.5, y: 0), controlPoint2: CGPoint(x: 4.5, y: 0))
        MightyMetUI.transparent.setStroke()
        bezier6Path.lineWidth = 1
        bezier6Path.stroke()

        context.restoreGState()


        //// Bezier 7 Drawing
        context.saveGState()
        context.translateBy(x: off.minX + 26.05, y: off.minY + 15.5)
        context.rotate(by: -90 * CGFloat.pi/180)

        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: -4.5, y: 0))
        bezier7Path.addCurve(to: CGPoint(x: 4.5, y: 0), controlPoint1: CGPoint(x: 4.5, y: 0), controlPoint2: CGPoint(x: 4.5, y: 0))
        MightyMetUI.transparent.setStroke()
        bezier7Path.lineWidth = 1
        bezier7Path.stroke()

        context.restoreGState()


        //// Oval Drawing
        context.saveGState()
        context.translateBy(x: off.minX + 2.48, y: off.minY + 20.53)
        context.rotate(by: -30 * CGFloat.pi/180)

        let ovalPath = UIBezierPath(ovalIn: CGRect(x: -2, y: -1.5, width: 4, height: 3))
        MightyMetUI.transparent.setFill()
        ovalPath.fill()

        context.restoreGState()


        //// Oval 2 Drawing
        context.saveGState()
        context.translateBy(x: off.minX + 13.48, y: off.minY + 20.53)
        context.rotate(by: -30 * CGFloat.pi/180)

        let oval2Path = UIBezierPath(ovalIn: CGRect(x: -2, y: -1.5, width: 4, height: 3))
        MightyMetUI.transparent.setFill()
        oval2Path.fill()

        context.restoreGState()


        //// Oval 5 Drawing
        context.saveGState()
        context.translateBy(x: off.minX + 24.48, y: off.minY + 20.53)
        context.rotate(by: -30 * CGFloat.pi/180)

        let oval5Path = UIBezierPath(ovalIn: CGRect(x: -2, y: -1.5, width: 4, height: 3))
        MightyMetUI.transparent.setFill()
        oval5Path.fill()

        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        if (isTriplet) {
            //// On
            context.saveGState()
            context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
            context.beginTransparencyLayer(auxiliaryInfo: nil)


            //// Text 2 Drawing
            let text2Rect = CGRect(x: on.minX + 12.01, y: on.minY, width: 6, height: 10)
            let text2TextContent = "3"
            let text2Style = NSMutableParagraphStyle()
            text2Style.alignment = .left
            let text2FontAttributes = [NSFontAttributeName: UIFont(name: "AvenirNext-Italic", size: 10)!, NSForegroundColorAttributeName: MightyMetUI.yellowOrange, NSParagraphStyleAttributeName: text2Style]

            let text2TextHeight: CGFloat = text2TextContent.boundingRect(with: CGSize(width: text2Rect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: text2FontAttributes, context: nil).height
            context.saveGState()
            context.clip(to: text2Rect)
            text2TextContent.draw(in: CGRect(x: text2Rect.minX, y: text2Rect.minY + (text2Rect.height - text2TextHeight) / 2, width: text2Rect.width, height: text2TextHeight), withAttributes: text2FontAttributes)
            context.restoreGState()


            //// Bezier 8 Drawing
            let bezier8Path = UIBezierPath()
            bezier8Path.move(to: CGPoint(x: on.minX + 3.51, y: on.minY + 4.5))
            bezier8Path.addCurve(to: CGPoint(x: on.minX + 10.51, y: on.minY + 4.5), controlPoint1: CGPoint(x: on.minX + 10.51, y: on.minY + 4.5), controlPoint2: CGPoint(x: on.minX + 10.51, y: on.minY + 4.5))
            MightyMetUI.yellowOrange.setFill()
            bezier8Path.fill()
            MightyMetUI.yellowOrange.setStroke()
            bezier8Path.lineWidth = 1
            bezier8Path.stroke()


            //// Bezier 9 Drawing
            let bezier9Path = UIBezierPath()
            bezier9Path.move(to: CGPoint(x: on.minX + 19.51, y: on.minY + 4.5))
            bezier9Path.addCurve(to: CGPoint(x: on.minX + 26.51, y: on.minY + 4.5), controlPoint1: CGPoint(x: on.minX + 26.51, y: on.minY + 4.5), controlPoint2: CGPoint(x: on.minX + 26.51, y: on.minY + 4.5))
            MightyMetUI.yellowOrange.setFill()
            bezier9Path.fill()
            MightyMetUI.yellowOrange.setStroke()
            bezier9Path.lineWidth = 1
            bezier9Path.stroke()


            //// Bezier 10 Drawing
            let bezier10Path = UIBezierPath()
            bezier10Path.move(to: CGPoint(x: on.minX + 3.51, y: on.minY + 10.5))
            bezier10Path.addCurve(to: CGPoint(x: on.minX + 26.51, y: on.minY + 10.5), controlPoint1: CGPoint(x: on.minX + 26.51, y: on.minY + 10.5), controlPoint2: CGPoint(x: on.minX + 26.51, y: on.minY + 10.5))
            MightyMetUI.yellowOrange.setFill()
            bezier10Path.fill()
            MightyMetUI.yellowOrange.setStroke()
            bezier10Path.lineWidth = 1
            bezier10Path.stroke()


            //// Bezier 11 Drawing
            context.saveGState()
            context.translateBy(x: on.minX + 3.97, y: on.minY + 15.5)
            context.rotate(by: -90 * CGFloat.pi/180)

            let bezier11Path = UIBezierPath()
            bezier11Path.move(to: CGPoint(x: -4.5, y: 0))
            bezier11Path.addCurve(to: CGPoint(x: 4.5, y: 0), controlPoint1: CGPoint(x: 4.5, y: 0), controlPoint2: CGPoint(x: 4.5, y: 0))
            MightyMetUI.yellowOrange.setFill()
            bezier11Path.fill()
            MightyMetUI.yellowOrange.setStroke()
            bezier11Path.lineWidth = 1
            bezier11Path.stroke()

            context.restoreGState()


            //// Bezier 12 Drawing
            context.saveGState()
            context.translateBy(x: on.minX + 15.01, y: on.minY + 15.5)
            context.rotate(by: -90 * CGFloat.pi/180)

            let bezier12Path = UIBezierPath()
            bezier12Path.move(to: CGPoint(x: -4.5, y: 0))
            bezier12Path.addCurve(to: CGPoint(x: 4.5, y: 0), controlPoint1: CGPoint(x: 4.5, y: 0), controlPoint2: CGPoint(x: 4.5, y: 0))
            MightyMetUI.yellowOrange.setFill()
            bezier12Path.fill()
            MightyMetUI.yellowOrange.setStroke()
            bezier12Path.lineWidth = 1
            bezier12Path.stroke()

            context.restoreGState()


            //// Bezier 13 Drawing
            context.saveGState()
            context.translateBy(x: on.minX + 26.05, y: on.minY + 15.5)
            context.rotate(by: -90 * CGFloat.pi/180)

            let bezier13Path = UIBezierPath()
            bezier13Path.move(to: CGPoint(x: -4.5, y: 0))
            bezier13Path.addCurve(to: CGPoint(x: 4.5, y: 0), controlPoint1: CGPoint(x: 4.5, y: 0), controlPoint2: CGPoint(x: 4.5, y: 0))
            MightyMetUI.yellowOrange.setFill()
            bezier13Path.fill()
            MightyMetUI.yellowOrange.setStroke()
            bezier13Path.lineWidth = 1
            bezier13Path.stroke()

            context.restoreGState()


            //// Oval 3 Drawing
            context.saveGState()
            context.translateBy(x: on.minX + 2.48, y: on.minY + 20.53)
            context.rotate(by: -30 * CGFloat.pi/180)

            let oval3Path = UIBezierPath(ovalIn: CGRect(x: -2, y: -1.5, width: 4, height: 3))
            MightyMetUI.yellowOrange.setFill()
            oval3Path.fill()
            MightyMetUI.yellowOrange.setStroke()
            oval3Path.lineWidth = 1
            oval3Path.stroke()

            context.restoreGState()


            //// Oval 4 Drawing
            context.saveGState()
            context.translateBy(x: on.minX + 13.48, y: on.minY + 20.53)
            context.rotate(by: -30 * CGFloat.pi/180)

            let oval4Path = UIBezierPath(ovalIn: CGRect(x: -2, y: -1.5, width: 4, height: 3))
            MightyMetUI.yellowOrange.setFill()
            oval4Path.fill()
            MightyMetUI.yellowOrange.setStroke()
            oval4Path.lineWidth = 1
            oval4Path.stroke()

            context.restoreGState()


            //// Oval 6 Drawing
            context.saveGState()
            context.translateBy(x: on.minX + 24.48, y: on.minY + 20.53)
            context.rotate(by: -30 * CGFloat.pi/180)

            let oval6Path = UIBezierPath(ovalIn: CGRect(x: -2, y: -1.5, width: 4, height: 3))
            MightyMetUI.yellowOrange.setFill()
            oval6Path.fill()
            MightyMetUI.yellowOrange.setStroke()
            oval6Path.lineWidth = 1
            oval6Path.stroke()

            context.restoreGState()


            context.endTransparencyLayer()
            context.restoreGState()
        }
    }

    public dynamic class func draw_16thButton(frame: CGRect = CGRect(x: 0, y: 0, width: 66, height: 62), is16th: Bool = true) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }


        //// Shadow Declarations
        let shadow = NSShadow()
        shadow.shadowColor = UIColor.darkGray.withAlphaComponent(0.8)
        shadow.shadowOffset = CGSize(width: 2, height: 2)
        shadow.shadowBlurRadius = 3


        //// Subframes
        let circle: CGRect = CGRect(x: frame.minX + fastFloor((frame.width - 47) * 0.47368 + 0.5), y: frame.minY + fastFloor((frame.height - 47) * 0.33333 + 0.5), width: 47, height: 47)
        let off: CGRect = CGRect(x: frame.minX + fastFloor((frame.width - 26.96) * 0.46093 - 0.49) + 0.99, y: frame.minY + fastFloor((frame.height - 12.33) * 0.47306) + 0.5, width: 26.96, height: 12.33)
        let on: CGRect = CGRect(x: frame.minX + fastFloor((frame.width - 26.96) * 0.46093 - 0.49) + 0.99, y: frame.minY + fastFloor((frame.height - 12.33) * 0.47306) + 0.5, width: 26.96, height: 12.33)


        //// Circle
        context.saveGState()
        context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 4.09))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 12.91, y: circle.minY + 7.22), controlPoint1: CGPoint(x: circle.minX + 19.6, y: circle.minY + 4.09), controlPoint2: CGPoint(x: circle.minX + 15.96, y: circle.minY + 5.24))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 4.09, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 7.6, y: circle.minY + 10.69), controlPoint2: CGPoint(x: circle.minX + 4.09, y: circle.minY + 16.68))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 42.91), controlPoint1: CGPoint(x: circle.minX + 4.09, y: circle.minY + 34.22), controlPoint2: CGPoint(x: circle.minX + 12.78, y: circle.minY + 42.91))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 42.91, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 34.22, y: circle.minY + 42.91), controlPoint2: CGPoint(x: circle.minX + 42.91, y: circle.minY + 34.22))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 4.09), controlPoint1: CGPoint(x: circle.minX + 42.91, y: circle.minY + 12.78), controlPoint2: CGPoint(x: circle.minX + 34.22, y: circle.minY + 4.09))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: circle.minX + 47, y: circle.minY + 23.5))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 47), controlPoint1: CGPoint(x: circle.minX + 47, y: circle.minY + 36.48), controlPoint2: CGPoint(x: circle.minX + 36.48, y: circle.minY + 47))
        bezierPath.addCurve(to: CGPoint(x: circle.minX, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 10.52, y: circle.minY + 47), controlPoint2: CGPoint(x: circle.minX, y: circle.minY + 36.48))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 9.3, y: circle.minY + 4.77), controlPoint1: CGPoint(x: circle.minX, y: circle.minY + 15.86), controlPoint2: CGPoint(x: circle.minX + 3.65, y: circle.minY + 9.06))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY), controlPoint1: CGPoint(x: circle.minX + 13.25, y: circle.minY + 1.78), controlPoint2: CGPoint(x: circle.minX + 18.17, y: circle.minY))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 47, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 36.48, y: circle.minY), controlPoint2: CGPoint(x: circle.minX + 47, y: circle.minY + 10.52))
        bezierPath.close()
        MightyMetUI.transparent.setFill()
        bezierPath.fill()


        if (is16th) {
            //// Bezier 14 Drawing
            let bezier14Path = UIBezierPath()
            bezier14Path.move(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 4.09))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX + 12.91, y: circle.minY + 7.22), controlPoint1: CGPoint(x: circle.minX + 19.6, y: circle.minY + 4.09), controlPoint2: CGPoint(x: circle.minX + 15.96, y: circle.minY + 5.24))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX + 4.09, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 7.6, y: circle.minY + 10.69), controlPoint2: CGPoint(x: circle.minX + 4.09, y: circle.minY + 16.68))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 42.91), controlPoint1: CGPoint(x: circle.minX + 4.09, y: circle.minY + 34.22), controlPoint2: CGPoint(x: circle.minX + 12.78, y: circle.minY + 42.91))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX + 42.91, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 34.22, y: circle.minY + 42.91), controlPoint2: CGPoint(x: circle.minX + 42.91, y: circle.minY + 34.22))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 4.09), controlPoint1: CGPoint(x: circle.minX + 42.91, y: circle.minY + 12.78), controlPoint2: CGPoint(x: circle.minX + 34.22, y: circle.minY + 4.09))
            bezier14Path.close()
            bezier14Path.move(to: CGPoint(x: circle.minX + 47, y: circle.minY + 23.5))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 47), controlPoint1: CGPoint(x: circle.minX + 47, y: circle.minY + 36.48), controlPoint2: CGPoint(x: circle.minX + 36.48, y: circle.minY + 47))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 10.52, y: circle.minY + 47), controlPoint2: CGPoint(x: circle.minX, y: circle.minY + 36.48))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX + 9.3, y: circle.minY + 4.77), controlPoint1: CGPoint(x: circle.minX, y: circle.minY + 15.86), controlPoint2: CGPoint(x: circle.minX + 3.65, y: circle.minY + 9.06))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY), controlPoint1: CGPoint(x: circle.minX + 13.25, y: circle.minY + 1.78), controlPoint2: CGPoint(x: circle.minX + 18.17, y: circle.minY))
            bezier14Path.addCurve(to: CGPoint(x: circle.minX + 47, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 36.48, y: circle.minY), controlPoint2: CGPoint(x: circle.minX + 47, y: circle.minY + 10.52))
            bezier14Path.close()
            MightyMetUI.yellowOrange.setFill()
            bezier14Path.fill()
        }


        context.endTransparencyLayer()
        context.restoreGState()


        //// Off
        context.saveGState()
        context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: off.minX + 3.51, y: off.minY))
        bezier4Path.addCurve(to: CGPoint(x: off.minX + 26.51, y: off.minY + 0), controlPoint1: CGPoint(x: off.minX + 26.51, y: off.minY), controlPoint2: CGPoint(x: off.minX + 26.51, y: off.minY + 0))
        MightyMetUI.transparent.setStroke()
        bezier4Path.lineWidth = 1
        bezier4Path.stroke()


        //// Bezier 5 Drawing
        context.saveGState()
        context.translateBy(x: off.minX + 3.97, y: off.minY + 5)
        context.rotate(by: -90 * CGFloat.pi/180)

        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: -4.5, y: 0))
        bezier5Path.addCurve(to: CGPoint(x: 4.5, y: 0), controlPoint1: CGPoint(x: 4.5, y: 0), controlPoint2: CGPoint(x: 4.5, y: 0))
        MightyMetUI.transparent.setStroke()
        bezier5Path.lineWidth = 1
        bezier5Path.stroke()

        context.restoreGState()


        //// Bezier 6 Drawing
        context.saveGState()
        context.translateBy(x: off.minX + 11.01, y: off.minY + 5)
        context.rotate(by: -90 * CGFloat.pi/180)

        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: -4.5, y: 0))
        bezier6Path.addCurve(to: CGPoint(x: 4.5, y: 0), controlPoint1: CGPoint(x: 4.5, y: 0), controlPoint2: CGPoint(x: 4.5, y: 0))
        MightyMetUI.transparent.setStroke()
        bezier6Path.lineWidth = 1
        bezier6Path.stroke()

        context.restoreGState()


        //// Bezier 7 Drawing
        context.saveGState()
        context.translateBy(x: off.minX + 19.05, y: off.minY + 5)
        context.rotate(by: -90 * CGFloat.pi/180)

        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: -4.5, y: 0))
        bezier7Path.addCurve(to: CGPoint(x: 4.5, y: 0), controlPoint1: CGPoint(x: 4.5, y: 0), controlPoint2: CGPoint(x: 4.5, y: 0))
        MightyMetUI.transparent.setStroke()
        bezier7Path.lineWidth = 1
        bezier7Path.stroke()

        context.restoreGState()


        //// Oval Drawing
        context.saveGState()
        context.translateBy(x: off.minX + 2.48, y: off.minY + 10.03)
        context.rotate(by: -30 * CGFloat.pi/180)

        let ovalPath = UIBezierPath(ovalIn: CGRect(x: -2, y: -1.5, width: 4, height: 3))
        MightyMetUI.transparent.setFill()
        ovalPath.fill()

        context.restoreGState()


        //// Oval 2 Drawing
        context.saveGState()
        context.translateBy(x: off.minX + 9.48, y: off.minY + 10.03)
        context.rotate(by: -30 * CGFloat.pi/180)

        let oval2Path = UIBezierPath(ovalIn: CGRect(x: -2, y: -1.5, width: 4, height: 3))
        MightyMetUI.transparent.setFill()
        oval2Path.fill()

        context.restoreGState()


        //// Oval 5 Drawing
        context.saveGState()
        context.translateBy(x: off.minX + 17.48, y: off.minY + 10.03)
        context.rotate(by: -30 * CGFloat.pi/180)

        let oval5Path = UIBezierPath(ovalIn: CGRect(x: -2, y: -1.5, width: 4, height: 3))
        MightyMetUI.transparent.setFill()
        oval5Path.fill()

        context.restoreGState()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: off.minX + 3.51, y: off.minY + 2))
        bezier2Path.addCurve(to: CGPoint(x: off.minX + 26.51, y: off.minY + 2), controlPoint1: CGPoint(x: off.minX + 26.51, y: off.minY + 2), controlPoint2: CGPoint(x: off.minX + 26.51, y: off.minY + 2))
        MightyMetUI.transparent.setStroke()
        bezier2Path.lineWidth = 1
        bezier2Path.stroke()


        //// Bezier 3 Drawing
        context.saveGState()
        context.translateBy(x: off.minX + 26.05, y: off.minY + 5)
        context.rotate(by: -90 * CGFloat.pi/180)

        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: -4.5, y: 0))
        bezier3Path.addCurve(to: CGPoint(x: 4.5, y: 0), controlPoint1: CGPoint(x: 4.5, y: 0), controlPoint2: CGPoint(x: 4.5, y: 0))
        MightyMetUI.transparent.setStroke()
        bezier3Path.lineWidth = 1
        bezier3Path.stroke()

        context.restoreGState()


        //// Oval 7 Drawing
        context.saveGState()
        context.translateBy(x: off.minX + 24.48, y: off.minY + 10.03)
        context.rotate(by: -30 * CGFloat.pi/180)

        let oval7Path = UIBezierPath(ovalIn: CGRect(x: -2, y: -1.5, width: 4, height: 3))
        MightyMetUI.transparent.setFill()
        oval7Path.fill()

        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        if (is16th) {
            //// On
            context.saveGState()
            context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
            context.beginTransparencyLayer(auxiliaryInfo: nil)


            //// Bezier 8 Drawing
            let bezier8Path = UIBezierPath()
            bezier8Path.move(to: CGPoint(x: on.minX + 3.51, y: on.minY))
            bezier8Path.addCurve(to: CGPoint(x: on.minX + 26.51, y: on.minY + 0), controlPoint1: CGPoint(x: on.minX + 26.51, y: on.minY), controlPoint2: CGPoint(x: on.minX + 26.51, y: on.minY + 0))
            MightyMetUI.yellowOrange.setFill()
            bezier8Path.fill()
            MightyMetUI.yellowOrange.setStroke()
            bezier8Path.lineWidth = 1
            bezier8Path.stroke()


            //// Bezier 9 Drawing
            context.saveGState()
            context.translateBy(x: on.minX + 3.97, y: on.minY + 5)
            context.rotate(by: -90 * CGFloat.pi/180)

            let bezier9Path = UIBezierPath()
            bezier9Path.move(to: CGPoint(x: -4.5, y: 0))
            bezier9Path.addCurve(to: CGPoint(x: 4.5, y: 0), controlPoint1: CGPoint(x: 4.5, y: 0), controlPoint2: CGPoint(x: 4.5, y: 0))
            MightyMetUI.yellowOrange.setFill()
            bezier9Path.fill()
            MightyMetUI.yellowOrange.setStroke()
            bezier9Path.lineWidth = 1
            bezier9Path.stroke()

            context.restoreGState()


            //// Bezier 10 Drawing
            context.saveGState()
            context.translateBy(x: on.minX + 11.01, y: on.minY + 5)
            context.rotate(by: -90 * CGFloat.pi/180)

            let bezier10Path = UIBezierPath()
            bezier10Path.move(to: CGPoint(x: -4.5, y: 0))
            bezier10Path.addCurve(to: CGPoint(x: 4.5, y: 0), controlPoint1: CGPoint(x: 4.5, y: 0), controlPoint2: CGPoint(x: 4.5, y: 0))
            MightyMetUI.yellowOrange.setFill()
            bezier10Path.fill()
            MightyMetUI.yellowOrange.setStroke()
            bezier10Path.lineWidth = 1
            bezier10Path.stroke()

            context.restoreGState()


            //// Bezier 11 Drawing
            context.saveGState()
            context.translateBy(x: on.minX + 19.05, y: on.minY + 5)
            context.rotate(by: -90 * CGFloat.pi/180)

            let bezier11Path = UIBezierPath()
            bezier11Path.move(to: CGPoint(x: -4.5, y: 0))
            bezier11Path.addCurve(to: CGPoint(x: 4.5, y: 0), controlPoint1: CGPoint(x: 4.5, y: 0), controlPoint2: CGPoint(x: 4.5, y: 0))
            MightyMetUI.yellowOrange.setFill()
            bezier11Path.fill()
            MightyMetUI.yellowOrange.setStroke()
            bezier11Path.lineWidth = 1
            bezier11Path.stroke()

            context.restoreGState()


            //// Oval 3 Drawing
            context.saveGState()
            context.translateBy(x: on.minX + 2.48, y: on.minY + 10.03)
            context.rotate(by: -30 * CGFloat.pi/180)

            let oval3Path = UIBezierPath(ovalIn: CGRect(x: -2, y: -1.5, width: 4, height: 3))
            MightyMetUI.yellowOrange.setFill()
            oval3Path.fill()
            MightyMetUI.yellowOrange.setStroke()
            oval3Path.lineWidth = 1
            oval3Path.stroke()

            context.restoreGState()


            //// Oval 4 Drawing
            context.saveGState()
            context.translateBy(x: on.minX + 9.48, y: on.minY + 10.03)
            context.rotate(by: -30 * CGFloat.pi/180)

            let oval4Path = UIBezierPath(ovalIn: CGRect(x: -2, y: -1.5, width: 4, height: 3))
            MightyMetUI.yellowOrange.setFill()
            oval4Path.fill()
            MightyMetUI.yellowOrange.setStroke()
            oval4Path.lineWidth = 1
            oval4Path.stroke()

            context.restoreGState()


            //// Oval 6 Drawing
            context.saveGState()
            context.translateBy(x: on.minX + 17.48, y: on.minY + 10.03)
            context.rotate(by: -30 * CGFloat.pi/180)

            let oval6Path = UIBezierPath(ovalIn: CGRect(x: -2, y: -1.5, width: 4, height: 3))
            MightyMetUI.yellowOrange.setFill()
            oval6Path.fill()
            MightyMetUI.yellowOrange.setStroke()
            oval6Path.lineWidth = 1
            oval6Path.stroke()

            context.restoreGState()


            //// Bezier 12 Drawing
            let bezier12Path = UIBezierPath()
            bezier12Path.move(to: CGPoint(x: on.minX + 3.51, y: on.minY + 2))
            bezier12Path.addCurve(to: CGPoint(x: on.minX + 26.51, y: on.minY + 2), controlPoint1: CGPoint(x: on.minX + 26.51, y: on.minY + 2), controlPoint2: CGPoint(x: on.minX + 26.51, y: on.minY + 2))
            MightyMetUI.yellowOrange.setFill()
            bezier12Path.fill()
            MightyMetUI.yellowOrange.setStroke()
            bezier12Path.lineWidth = 1
            bezier12Path.stroke()


            //// Bezier 13 Drawing
            context.saveGState()
            context.translateBy(x: on.minX + 26.05, y: on.minY + 5)
            context.rotate(by: -90 * CGFloat.pi/180)

            let bezier13Path = UIBezierPath()
            bezier13Path.move(to: CGPoint(x: -4.5, y: 0))
            bezier13Path.addCurve(to: CGPoint(x: 4.5, y: 0), controlPoint1: CGPoint(x: 4.5, y: 0), controlPoint2: CGPoint(x: 4.5, y: 0))
            MightyMetUI.yellowOrange.setFill()
            bezier13Path.fill()
            MightyMetUI.yellowOrange.setStroke()
            bezier13Path.lineWidth = 1
            bezier13Path.stroke()

            context.restoreGState()


            //// Oval 8 Drawing
            context.saveGState()
            context.translateBy(x: on.minX + 24.48, y: on.minY + 10.03)
            context.rotate(by: -30 * CGFloat.pi/180)

            let oval8Path = UIBezierPath(ovalIn: CGRect(x: -2, y: -1.5, width: 4, height: 3))
            MightyMetUI.yellowOrange.setFill()
            oval8Path.fill()
            MightyMetUI.yellowOrange.setStroke()
            oval8Path.lineWidth = 1
            oval8Path.stroke()

            context.restoreGState()


            context.endTransparencyLayer()
            context.restoreGState()
        }
    }

    public dynamic class func drawQuarterButton(frame: CGRect = CGRect(x: 0, y: 0, width: 66, height: 62), isQuarter: Bool = true) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }


        //// Shadow Declarations
        let shadow = NSShadow()
        shadow.shadowColor = UIColor.darkGray.withAlphaComponent(0.8)
        shadow.shadowOffset = CGSize(width: 2, height: 2)
        shadow.shadowBlurRadius = 3


        //// Subframes
        let circle: CGRect = CGRect(x: frame.minX + fastFloor((frame.width - 47) * 0.47368 + 0.5), y: frame.minY + fastFloor((frame.height - 47) * 0.40000 + 0.5), width: 47, height: 47)
        let off: CGRect = CGRect(x: frame.minX + fastFloor((frame.width - 7.31) * 0.49105 - 0.32) + 0.82, y: frame.minY + fastFloor((frame.height - 24.32) * 0.49103) + 0.5, width: 7.31, height: 24.32)
        let on: CGRect = CGRect(x: frame.minX + fastFloor((frame.width - 7.31) * 0.49105 - 0.32) + 0.82, y: frame.minY + fastFloor((frame.height - 24.32) * 0.49103) + 0.5, width: 7.31, height: 24.32)


        //// Circle
        context.saveGState()
        context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 4.09))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 12.91, y: circle.minY + 7.22), controlPoint1: CGPoint(x: circle.minX + 19.6, y: circle.minY + 4.09), controlPoint2: CGPoint(x: circle.minX + 15.96, y: circle.minY + 5.24))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 4.09, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 7.6, y: circle.minY + 10.69), controlPoint2: CGPoint(x: circle.minX + 4.09, y: circle.minY + 16.68))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 42.91), controlPoint1: CGPoint(x: circle.minX + 4.09, y: circle.minY + 34.22), controlPoint2: CGPoint(x: circle.minX + 12.78, y: circle.minY + 42.91))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 42.91, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 34.22, y: circle.minY + 42.91), controlPoint2: CGPoint(x: circle.minX + 42.91, y: circle.minY + 34.22))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 4.09), controlPoint1: CGPoint(x: circle.minX + 42.91, y: circle.minY + 12.78), controlPoint2: CGPoint(x: circle.minX + 34.22, y: circle.minY + 4.09))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: circle.minX + 47, y: circle.minY + 23.5))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 47), controlPoint1: CGPoint(x: circle.minX + 47, y: circle.minY + 36.48), controlPoint2: CGPoint(x: circle.minX + 36.48, y: circle.minY + 47))
        bezierPath.addCurve(to: CGPoint(x: circle.minX, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 10.52, y: circle.minY + 47), controlPoint2: CGPoint(x: circle.minX, y: circle.minY + 36.48))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 9.3, y: circle.minY + 4.77), controlPoint1: CGPoint(x: circle.minX, y: circle.minY + 15.86), controlPoint2: CGPoint(x: circle.minX + 3.65, y: circle.minY + 9.06))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY), controlPoint1: CGPoint(x: circle.minX + 13.25, y: circle.minY + 1.78), controlPoint2: CGPoint(x: circle.minX + 18.17, y: circle.minY))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 47, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 36.48, y: circle.minY), controlPoint2: CGPoint(x: circle.minX + 47, y: circle.minY + 10.52))
        bezierPath.close()
        MightyMetUI.transparent.setFill()
        bezierPath.fill()


        if (isQuarter) {
            //// Bezier 4 Drawing
            let bezier4Path = UIBezierPath()
            bezier4Path.move(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 4.09))
            bezier4Path.addCurve(to: CGPoint(x: circle.minX + 12.91, y: circle.minY + 7.22), controlPoint1: CGPoint(x: circle.minX + 19.6, y: circle.minY + 4.09), controlPoint2: CGPoint(x: circle.minX + 15.96, y: circle.minY + 5.24))
            bezier4Path.addCurve(to: CGPoint(x: circle.minX + 4.09, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 7.6, y: circle.minY + 10.69), controlPoint2: CGPoint(x: circle.minX + 4.09, y: circle.minY + 16.68))
            bezier4Path.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 42.91), controlPoint1: CGPoint(x: circle.minX + 4.09, y: circle.minY + 34.22), controlPoint2: CGPoint(x: circle.minX + 12.78, y: circle.minY + 42.91))
            bezier4Path.addCurve(to: CGPoint(x: circle.minX + 42.91, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 34.22, y: circle.minY + 42.91), controlPoint2: CGPoint(x: circle.minX + 42.91, y: circle.minY + 34.22))
            bezier4Path.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 4.09), controlPoint1: CGPoint(x: circle.minX + 42.91, y: circle.minY + 12.78), controlPoint2: CGPoint(x: circle.minX + 34.22, y: circle.minY + 4.09))
            bezier4Path.close()
            bezier4Path.move(to: CGPoint(x: circle.minX + 47, y: circle.minY + 23.5))
            bezier4Path.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 47), controlPoint1: CGPoint(x: circle.minX + 47, y: circle.minY + 36.48), controlPoint2: CGPoint(x: circle.minX + 36.48, y: circle.minY + 47))
            bezier4Path.addCurve(to: CGPoint(x: circle.minX, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 10.52, y: circle.minY + 47), controlPoint2: CGPoint(x: circle.minX, y: circle.minY + 36.48))
            bezier4Path.addCurve(to: CGPoint(x: circle.minX + 9.3, y: circle.minY + 4.77), controlPoint1: CGPoint(x: circle.minX, y: circle.minY + 15.86), controlPoint2: CGPoint(x: circle.minX + 3.65, y: circle.minY + 9.06))
            bezier4Path.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY), controlPoint1: CGPoint(x: circle.minX + 13.25, y: circle.minY + 1.78), controlPoint2: CGPoint(x: circle.minX + 18.17, y: circle.minY))
            bezier4Path.addCurve(to: CGPoint(x: circle.minX + 47, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 36.48, y: circle.minY), controlPoint2: CGPoint(x: circle.minX + 47, y: circle.minY + 10.52))
            bezier4Path.close()
            MightyMetUI.yellowOrange.setFill()
            bezier4Path.fill()
        }


        context.endTransparencyLayer()
        context.restoreGState()


        //// Off
        context.saveGState()
        context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: off.minX + 5.09, y: off.minY))
        bezier3Path.addLine(to: CGPoint(x: off.minX + 5.09, y: off.minY + 19.37))
        MightyMetUI.transparent.setStroke()
        bezier3Path.lineWidth = 1
        bezier3Path.stroke()


        //// Oval Drawing
        context.saveGState()
        context.translateBy(x: off.minX + 3.66, y: off.minY + 20.9)
        context.rotate(by: -30 * CGFloat.pi/180)

        let ovalPath = UIBezierPath(ovalIn: CGRect(x: -2.91, y: -2.28, width: 5.81, height: 4.56))
        MightyMetUI.transparent.setFill()
        ovalPath.fill()

        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        if (isQuarter) {
            //// On
            //// Bezier 2 Drawing
            let bezier2Path = UIBezierPath()
            bezier2Path.move(to: CGPoint(x: on.minX + 5.09, y: on.minY))
            bezier2Path.addLine(to: CGPoint(x: on.minX + 5.09, y: on.minY + 19.37))
            context.saveGState()
            context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
            MightyMetUI.yellowOrange.setStroke()
            bezier2Path.lineWidth = 1
            bezier2Path.stroke()
            context.restoreGState()


            //// Oval 2 Drawing
            context.saveGState()
            context.translateBy(x: on.minX + 3.66, y: on.minY + 20.9)
            context.rotate(by: -30 * CGFloat.pi/180)

            let oval2Path = UIBezierPath(ovalIn: CGRect(x: -2.91, y: -2.28, width: 5.81, height: 4.56))
            MightyMetUI.yellowOrange.setFill()
            oval2Path.fill()

            context.restoreGState()


        }
    }

    public dynamic class func draw_8thButton(frame: CGRect = CGRect(x: 0, y: 0, width: 66, height: 62), is8th: Bool = true) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }


        //// Shadow Declarations
        let shadow = NSShadow()
        shadow.shadowColor = UIColor.darkGray.withAlphaComponent(0.8)
        shadow.shadowOffset = CGSize(width: 2, height: 2)
        shadow.shadowBlurRadius = 3


        //// Subframes
        let circle: CGRect = CGRect(x: frame.minX + fastFloor((frame.width - 47) * 0.47368 + 0.5), y: frame.minY + fastFloor((frame.height - 47) * 0.40000 + 0.5), width: 47, height: 47)
        let off: CGRect = CGRect(x: frame.minX + fastFloor((frame.width - 15.96) * 0.49950 - 0.49) + 0.99, y: frame.minY + fastFloor((frame.height - 15.33) * 0.50346) + 0.5, width: 15.96, height: 15.33)
        let on: CGRect = CGRect(x: frame.minX + fastFloor((frame.width - 15.96) * 0.49950 - 0.49) + 0.99, y: frame.minY + fastFloor((frame.height - 15.33) * 0.50346) + 0.5, width: 15.96, height: 15.33)


        //// Circle
        context.saveGState()
        context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 4.09))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 12.91, y: circle.minY + 7.22), controlPoint1: CGPoint(x: circle.minX + 19.6, y: circle.minY + 4.09), controlPoint2: CGPoint(x: circle.minX + 15.96, y: circle.minY + 5.24))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 4.09, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 7.6, y: circle.minY + 10.69), controlPoint2: CGPoint(x: circle.minX + 4.09, y: circle.minY + 16.68))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 42.91), controlPoint1: CGPoint(x: circle.minX + 4.09, y: circle.minY + 34.22), controlPoint2: CGPoint(x: circle.minX + 12.78, y: circle.minY + 42.91))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 42.91, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 34.22, y: circle.minY + 42.91), controlPoint2: CGPoint(x: circle.minX + 42.91, y: circle.minY + 34.22))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 4.09), controlPoint1: CGPoint(x: circle.minX + 42.91, y: circle.minY + 12.78), controlPoint2: CGPoint(x: circle.minX + 34.22, y: circle.minY + 4.09))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: circle.minX + 47, y: circle.minY + 23.5))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 47), controlPoint1: CGPoint(x: circle.minX + 47, y: circle.minY + 36.48), controlPoint2: CGPoint(x: circle.minX + 36.48, y: circle.minY + 47))
        bezierPath.addCurve(to: CGPoint(x: circle.minX, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 10.52, y: circle.minY + 47), controlPoint2: CGPoint(x: circle.minX, y: circle.minY + 36.48))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 9.3, y: circle.minY + 4.77), controlPoint1: CGPoint(x: circle.minX, y: circle.minY + 15.86), controlPoint2: CGPoint(x: circle.minX + 3.65, y: circle.minY + 9.06))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY), controlPoint1: CGPoint(x: circle.minX + 13.25, y: circle.minY + 1.78), controlPoint2: CGPoint(x: circle.minX + 18.17, y: circle.minY))
        bezierPath.addCurve(to: CGPoint(x: circle.minX + 47, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 36.48, y: circle.minY), controlPoint2: CGPoint(x: circle.minX + 47, y: circle.minY + 10.52))
        bezierPath.close()
        MightyMetUI.transparent.setFill()
        bezierPath.fill()


        if (is8th) {
            //// Bezier 8 Drawing
            let bezier8Path = UIBezierPath()
            bezier8Path.move(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 4.09))
            bezier8Path.addCurve(to: CGPoint(x: circle.minX + 12.91, y: circle.minY + 7.22), controlPoint1: CGPoint(x: circle.minX + 19.6, y: circle.minY + 4.09), controlPoint2: CGPoint(x: circle.minX + 15.96, y: circle.minY + 5.24))
            bezier8Path.addCurve(to: CGPoint(x: circle.minX + 4.09, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 7.6, y: circle.minY + 10.69), controlPoint2: CGPoint(x: circle.minX + 4.09, y: circle.minY + 16.68))
            bezier8Path.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 42.91), controlPoint1: CGPoint(x: circle.minX + 4.09, y: circle.minY + 34.22), controlPoint2: CGPoint(x: circle.minX + 12.78, y: circle.minY + 42.91))
            bezier8Path.addCurve(to: CGPoint(x: circle.minX + 42.91, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 34.22, y: circle.minY + 42.91), controlPoint2: CGPoint(x: circle.minX + 42.91, y: circle.minY + 34.22))
            bezier8Path.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 4.09), controlPoint1: CGPoint(x: circle.minX + 42.91, y: circle.minY + 12.78), controlPoint2: CGPoint(x: circle.minX + 34.22, y: circle.minY + 4.09))
            bezier8Path.close()
            bezier8Path.move(to: CGPoint(x: circle.minX + 47, y: circle.minY + 23.5))
            bezier8Path.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY + 47), controlPoint1: CGPoint(x: circle.minX + 47, y: circle.minY + 36.48), controlPoint2: CGPoint(x: circle.minX + 36.48, y: circle.minY + 47))
            bezier8Path.addCurve(to: CGPoint(x: circle.minX, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 10.52, y: circle.minY + 47), controlPoint2: CGPoint(x: circle.minX, y: circle.minY + 36.48))
            bezier8Path.addCurve(to: CGPoint(x: circle.minX + 9.3, y: circle.minY + 4.77), controlPoint1: CGPoint(x: circle.minX, y: circle.minY + 15.86), controlPoint2: CGPoint(x: circle.minX + 3.65, y: circle.minY + 9.06))
            bezier8Path.addCurve(to: CGPoint(x: circle.minX + 23.5, y: circle.minY), controlPoint1: CGPoint(x: circle.minX + 13.25, y: circle.minY + 1.78), controlPoint2: CGPoint(x: circle.minX + 18.17, y: circle.minY))
            bezier8Path.addCurve(to: CGPoint(x: circle.minX + 47, y: circle.minY + 23.5), controlPoint1: CGPoint(x: circle.minX + 36.48, y: circle.minY), controlPoint2: CGPoint(x: circle.minX + 47, y: circle.minY + 10.52))
            bezier8Path.close()
            MightyMetUI.yellowOrange.setFill()
            bezier8Path.fill()
        }


        context.endTransparencyLayer()
        context.restoreGState()


        //// Off
        context.saveGState()
        context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: off.minX + 3.51, y: off.minY))
        bezier4Path.addCurve(to: CGPoint(x: off.minX + 15.51, y: off.minY + 0), controlPoint1: CGPoint(x: off.minX + 15.51, y: off.minY), controlPoint2: CGPoint(x: off.minX + 15.51, y: off.minY + 0))
        MightyMetUI.transparent.setStroke()
        bezier4Path.lineWidth = 1
        bezier4Path.stroke()


        //// Bezier 5 Drawing
        context.saveGState()
        context.translateBy(x: off.minX + 3.97, y: off.minY + 5)
        context.rotate(by: -90 * CGFloat.pi/180)

        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: -7, y: -0))
        bezier5Path.addCurve(to: CGPoint(x: 4.5, y: -0), controlPoint1: CGPoint(x: 4.5, y: -0), controlPoint2: CGPoint(x: 4.5, y: -0))
        MightyMetUI.transparent.setStroke()
        bezier5Path.lineWidth = 1
        bezier5Path.stroke()

        context.restoreGState()


        //// Bezier 6 Drawing
        context.saveGState()
        context.translateBy(x: off.minX + 14.92, y: off.minY + 6.25)
        context.rotate(by: -90 * CGFloat.pi/180)

        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: -5.75, y: 0))
        bezier6Path.addCurve(to: CGPoint(x: 5.75, y: 0), controlPoint1: CGPoint(x: 5.75, y: 0), controlPoint2: CGPoint(x: 5.75, y: 0))
        MightyMetUI.transparent.setStroke()
        bezier6Path.lineWidth = 1
        bezier6Path.stroke()

        context.restoreGState()


        //// Oval Drawing
        context.saveGState()
        context.translateBy(x: off.minX + 2.48, y: off.minY + 13.03)
        context.rotate(by: -30 * CGFloat.pi/180)

        let ovalPath = UIBezierPath(ovalIn: CGRect(x: -2, y: -1.5, width: 4, height: 3))
        MightyMetUI.transparent.setFill()
        ovalPath.fill()

        context.restoreGState()


        //// Oval 2 Drawing
        context.saveGState()
        context.translateBy(x: off.minX + 13.48, y: off.minY + 13.03)
        context.rotate(by: -30 * CGFloat.pi/180)

        let oval2Path = UIBezierPath(ovalIn: CGRect(x: -2, y: -1.5, width: 4, height: 3))
        MightyMetUI.transparent.setFill()
        oval2Path.fill()

        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        if (is8th) {
            //// On
            //// Bezier 2 Drawing
            let bezier2Path = UIBezierPath()
            bezier2Path.move(to: CGPoint(x: on.minX + 3.51, y: on.minY))
            bezier2Path.addCurve(to: CGPoint(x: on.minX + 15.51, y: on.minY + 0), controlPoint1: CGPoint(x: on.minX + 15.51, y: on.minY), controlPoint2: CGPoint(x: on.minX + 15.51, y: on.minY + 0))
            MightyMetUI.yellowOrange.setStroke()
            bezier2Path.lineWidth = 1
            bezier2Path.stroke()


            //// Bezier 3 Drawing
            context.saveGState()
            context.translateBy(x: on.minX + 3.97, y: on.minY + 5)
            context.rotate(by: -90 * CGFloat.pi/180)

            let bezier3Path = UIBezierPath()
            bezier3Path.move(to: CGPoint(x: -7, y: -0))
            bezier3Path.addCurve(to: CGPoint(x: 4.5, y: -0), controlPoint1: CGPoint(x: 4.5, y: -0), controlPoint2: CGPoint(x: 4.5, y: -0))
            MightyMetUI.yellowOrange.setStroke()
            bezier3Path.lineWidth = 1
            bezier3Path.stroke()

            context.restoreGState()


            //// Bezier 7 Drawing
            context.saveGState()
            context.translateBy(x: on.minX + 14.92, y: on.minY + 6.25)
            context.rotate(by: -90 * CGFloat.pi/180)

            let bezier7Path = UIBezierPath()
            bezier7Path.move(to: CGPoint(x: -5.75, y: 0))
            bezier7Path.addCurve(to: CGPoint(x: 5.75, y: 0), controlPoint1: CGPoint(x: 5.75, y: 0), controlPoint2: CGPoint(x: 5.75, y: 0))
            MightyMetUI.yellowOrange.setStroke()
            bezier7Path.lineWidth = 1
            bezier7Path.stroke()

            context.restoreGState()


            //// Oval 3 Drawing
            context.saveGState()
            context.translateBy(x: on.minX + 2.48, y: on.minY + 13.03)
            context.rotate(by: -30 * CGFloat.pi/180)

            let oval3Path = UIBezierPath(ovalIn: CGRect(x: -2, y: -1.5, width: 4, height: 3))
            MightyMetUI.yellowOrange.setFill()
            oval3Path.fill()

            context.restoreGState()


            //// Oval 4 Drawing
            context.saveGState()
            context.translateBy(x: on.minX + 13.48, y: on.minY + 13.03)
            context.rotate(by: -30 * CGFloat.pi/180)

            let oval4Path = UIBezierPath(ovalIn: CGRect(x: -2, y: -1.5, width: 4, height: 3))
            MightyMetUI.yellowOrange.setFill()
            oval4Path.fill()

            context.restoreGState()


        }
    }

    public dynamic class func drawTapTempo(frame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), isTapped: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        let purple = UIColor(red: 0.462, green: 0.000, blue: 1.000, alpha: 1.000)
        let fillColor = UIColor(red: 0.820, green: 0.820, blue: 0.820, alpha: 1.000)

        //// Gradient Declarations
        let bluePink = CGGradient(colorsSpace: nil, colors: [purple.cgColor, MightyMetUI.fuscia.cgColor] as CFArray, locations: [0, 1])!


        //// Subframes
        let prints: CGRect = CGRect(x: frame.minX + fastFloor(frame.width * 0.22201 + 0.1) + 0.4, y: frame.minY + fastFloor(frame.height * 0.15000 + 0.5), width: fastFloor(frame.width * 0.77708 + 0.08) - fastFloor(frame.width * 0.22201 + 0.1) + 0.02, height: fastFloor(frame.height * 0.84634 + 0.23) - fastFloor(frame.height * 0.15000 + 0.5) + 0.27)
        let track: CGRect = CGRect(x: frame.minX + fastFloor(frame.width * 0.07500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.07500 + 0.5), width: fastFloor(frame.width * 0.92500 + 0.5) - fastFloor(frame.width * 0.07500 + 0.5), height: fastFloor(frame.height * 0.92500 - 0.5) - fastFloor(frame.height * 0.07500 + 0.5) + 1)


        //// Prints
        //// GreyPrint
        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: prints.minX + 0.51691 * prints.width, y: prints.minY + 0.98603 * prints.height))
        bezier2Path.addCurve(to: CGPoint(x: prints.minX + 0.48227 * prints.width, y: prints.minY + 0.94479 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.50380 * prints.width, y: prints.minY + 0.97778 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.48789 * prints.width, y: prints.minY + 0.95904 * prints.height))
        bezier2Path.addCurve(to: CGPoint(x: prints.minX + 0.40176 * prints.width, y: prints.minY + 0.94854 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.46823 * prints.width, y: prints.minY + 0.91105 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.45138 * prints.width, y: prints.minY + 0.91180 * prints.height))
        bezier2Path.addCurve(to: CGPoint(x: prints.minX + 0.30253 * prints.width, y: prints.minY + 0.96579 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.35776 * prints.width, y: prints.minY + 0.98078 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.32499 * prints.width, y: prints.minY + 0.98678 * prints.height))
        bezier2Path.addCurve(to: CGPoint(x: prints.minX + 0.29129 * prints.width, y: prints.minY + 0.90805 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.28287 * prints.width, y: prints.minY + 0.94704 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.27631 * prints.width, y: prints.minY + 0.91255 * prints.height))
        bezier2Path.addCurve(to: CGPoint(x: prints.minX + 0.29785 * prints.width, y: prints.minY + 0.92605 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.30065 * prints.width, y: prints.minY + 0.90505 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.30253 * prints.width, y: prints.minY + 0.90955 * prints.height))
        bezier2Path.addCurve(to: CGPoint(x: prints.minX + 0.39708 * prints.width, y: prints.minY + 0.94104 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.28568 * prints.width, y: prints.minY + 0.97703 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.33810 * prints.width, y: prints.minY + 0.98528 * prints.height))
        bezier2Path.addCurve(to: CGPoint(x: prints.minX + 0.49257 * prints.width, y: prints.minY + 0.94479 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.45044 * prints.width, y: prints.minY + 0.90130 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.46916 * prints.width, y: prints.minY + 0.90205 * prints.height))
        bezier2Path.addCurve(to: CGPoint(x: prints.minX + 0.57308 * prints.width, y: prints.minY + 0.98228 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.51597 * prints.width, y: prints.minY + 0.98753 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54031 * prints.width, y: prints.minY + 0.99878 * prints.height))
        bezier2Path.addCurve(to: CGPoint(x: prints.minX + 0.59180 * prints.width, y: prints.minY + 0.94329 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.59367 * prints.width, y: prints.minY + 0.97104 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.59554 * prints.width, y: prints.minY + 0.96579 * prints.height))
        bezier2Path.addCurve(to: CGPoint(x: prints.minX + 0.56278 * prints.width, y: prints.minY + 0.88780 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.58805 * prints.width, y: prints.minY + 0.92830 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.57495 * prints.width, y: prints.minY + 0.90355 * prints.height))
        bezier2Path.addCurve(to: CGPoint(x: prints.minX + 0.54780 * prints.width, y: prints.minY + 0.85481 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.54874 * prints.width, y: prints.minY + 0.87131 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54218 * prints.width, y: prints.minY + 0.85706 * prints.height))
        bezier2Path.addCurve(to: CGPoint(x: prints.minX + 0.55716 * prints.width, y: prints.minY + 0.85781 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.55342 * prints.width, y: prints.minY + 0.85256 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.55716 * prints.width, y: prints.minY + 0.85331 * prints.height))
        bezier2Path.addCurve(to: CGPoint(x: prints.minX + 0.58525 * prints.width, y: prints.minY + 0.89080 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.55716 * prints.width, y: prints.minY + 0.86231 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.57027 * prints.width, y: prints.minY + 0.87731 * prints.height))
        bezier2Path.addCurve(to: CGPoint(x: prints.minX + 0.60584 * prints.width, y: prints.minY + 0.92305 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.61146 * prints.width, y: prints.minY + 0.91555 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.62176 * prints.width, y: prints.minY + 0.93129 * prints.height))
        bezier2Path.addCurve(to: CGPoint(x: prints.minX + 0.60210 * prints.width, y: prints.minY + 0.94404 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60210 * prints.width, y: prints.minY + 0.92155 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.60022 * prints.width, y: prints.minY + 0.93055 * prints.height))
        bezier2Path.addCurve(to: CGPoint(x: prints.minX + 0.58056 * prints.width, y: prints.minY + 0.98528 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60490 * prints.width, y: prints.minY + 0.96429 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.60022 * prints.width, y: prints.minY + 0.97179 * prints.height))
        bezier2Path.addCurve(to: CGPoint(x: prints.minX + 0.51691 * prints.width, y: prints.minY + 0.98603 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.54874 * prints.width, y: prints.minY + 1.00478 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54686 * prints.width, y: prints.minY + 1.00478 * prints.height))
        bezier2Path.close()
        fillColor.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: prints.minX + 0.53095 * prints.width, y: prints.minY + 0.98003 * prints.height))
        bezier3Path.addCurve(to: CGPoint(x: prints.minX + 0.49818 * prints.width, y: prints.minY + 0.94029 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.52440 * prints.width, y: prints.minY + 0.97629 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.51035 * prints.width, y: prints.minY + 0.95904 * prints.height))
        bezier3Path.addCurve(to: CGPoint(x: prints.minX + 0.39614 * prints.width, y: prints.minY + 0.93354 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.47103 * prints.width, y: prints.minY + 0.89680 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.45044 * prints.width, y: prints.minY + 0.89530 * prints.height))
        bezier3Path.addCurve(to: CGPoint(x: prints.minX + 0.31563 * prints.width, y: prints.minY + 0.95454 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.35121 * prints.width, y: prints.minY + 0.96504 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.33436 * prints.width, y: prints.minY + 0.96954 * prints.height))
        bezier3Path.addCurve(to: CGPoint(x: prints.minX + 0.34465 * prints.width, y: prints.minY + 0.89080 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.29597 * prints.width, y: prints.minY + 0.93879 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.30346 * prints.width, y: prints.minY + 0.92230 * prints.height))
        bezier3Path.addCurve(to: CGPoint(x: prints.minX + 0.45606 * prints.width, y: prints.minY + 0.84356 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.39333 * prints.width, y: prints.minY + 0.85331 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.41580 * prints.width, y: prints.minY + 0.84356 * prints.height))
        bezier3Path.addCurve(to: CGPoint(x: prints.minX + 0.56559 * prints.width, y: prints.minY + 0.90505 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.50099 * prints.width, y: prints.minY + 0.84356 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54218 * prints.width, y: prints.minY + 0.86681 * prints.height))
        bezier3Path.addCurve(to: CGPoint(x: prints.minX + 0.56746 * prints.width, y: prints.minY + 0.97853 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.58993 * prints.width, y: prints.minY + 0.94629 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.59086 * prints.width, y: prints.minY + 0.96804 * prints.height))
        bezier3Path.addCurve(to: CGPoint(x: prints.minX + 0.53095 * prints.width, y: prints.minY + 0.98003 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.54593 * prints.width, y: prints.minY + 0.98753 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54593 * prints.width, y: prints.minY + 0.98753 * prints.height))
        bezier3Path.close()
        fillColor.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: prints.minX + 0.63673 * prints.width, y: prints.minY + 0.94479 * prints.height))
        bezier4Path.addCurve(to: CGPoint(x: prints.minX + 0.61895 * prints.width, y: prints.minY + 0.92605 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.62176 * prints.width, y: prints.minY + 0.93429 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.61333 * prints.width, y: prints.minY + 0.92605 * prints.height))
        bezier4Path.addCurve(to: CGPoint(x: prints.minX + 0.64610 * prints.width, y: prints.minY + 0.94104 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.62456 * prints.width, y: prints.minY + 0.92605 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.63673 * prints.width, y: prints.minY + 0.93279 * prints.height))
        bezier4Path.addCurve(to: CGPoint(x: prints.minX + 0.71912 * prints.width, y: prints.minY + 0.94254 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.66763 * prints.width, y: prints.minY + 0.95979 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.69946 * prints.width, y: prints.minY + 0.96054 * prints.height))
        bezier4Path.addCurve(to: CGPoint(x: prints.minX + 0.70507 * prints.width, y: prints.minY + 0.88481 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.74252 * prints.width, y: prints.minY + 0.92230 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.73877 * prints.width, y: prints.minY + 0.90730 * prints.height))
        bezier4Path.addCurve(to: CGPoint(x: prints.minX + 0.63299 * prints.width, y: prints.minY + 0.77983 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.65827 * prints.width, y: prints.minY + 0.85406 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.63205 * prints.width, y: prints.minY + 0.81432 * prints.height))
        bezier4Path.addLine(to: CGPoint(x: prints.minX + 0.63486 * prints.width, y: prints.minY + 0.74983 * prints.height))
        bezier4Path.addLine(to: CGPoint(x: prints.minX + 0.64048 * prints.width, y: prints.minY + 0.78358 * prints.height))
        bezier4Path.addCurve(to: CGPoint(x: prints.minX + 0.70601 * prints.width, y: prints.minY + 0.87731 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.64890 * prints.width, y: prints.minY + 0.82557 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.65827 * prints.width, y: prints.minY + 0.83982 * prints.height))
        bezier4Path.addCurve(to: CGPoint(x: prints.minX + 0.72286 * prints.width, y: prints.minY + 0.94704 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.75001 * prints.width, y: prints.minY + 0.91105 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.75282 * prints.width, y: prints.minY + 0.92455 * prints.height))
        bezier4Path.addCurve(to: CGPoint(x: prints.minX + 0.63673 * prints.width, y: prints.minY + 0.94479 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.69478 * prints.width, y: prints.minY + 0.96804 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.67137 * prints.width, y: prints.minY + 0.96729 * prints.height))
        bezier4Path.close()
        fillColor.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: prints.minX + 0.17521 * prints.width, y: prints.minY + 0.93879 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.17147 * prints.width, y: prints.minY + 0.88031 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.14993 * prints.width, y: prints.minY + 0.91780 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.14900 * prints.width, y: prints.minY + 0.89380 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.17615 * prints.width, y: prints.minY + 0.88106 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18457 * prints.width, y: prints.minY + 0.87206 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.18551 * prints.width, y: prints.minY + 0.87206 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.21172 * prints.width, y: prints.minY + 0.94854 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.15087 * prints.width, y: prints.minY + 0.90355 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17427 * prints.width, y: prints.minY + 0.94854 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.26134 * prints.width, y: prints.minY + 0.91855 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.22763 * prints.width, y: prints.minY + 0.94854 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.27631 * prints.width, y: prints.minY + 0.91930 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.23887 * prints.width, y: prints.minY + 0.92980 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.25572 * prints.width, y: prints.minY + 0.91855 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.24542 * prints.width, y: prints.minY + 0.92380 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.17708 * prints.width, y: prints.minY + 0.90205 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.21266 * prints.width, y: prints.minY + 0.95454 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.16585 * prints.width, y: prints.minY + 0.93354 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.23700 * prints.width, y: prints.minY + 0.85481 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18083 * prints.width, y: prints.minY + 0.89230 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.20704 * prints.width, y: prints.minY + 0.87131 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.55061 * prints.width, y: prints.minY + 0.59762 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.31844 * prints.width, y: prints.minY + 0.80907 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.52065 * prints.width, y: prints.minY + 0.64411 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.51691 * prints.width, y: prints.minY + 0.45065 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.59554 * prints.width, y: prints.minY + 0.53088 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.58056 * prints.width, y: prints.minY + 0.46865 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.39708 * prints.width, y: prints.minY + 0.51739 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.47291 * prints.width, y: prints.minY + 0.43790 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.43452 * prints.width, y: prints.minY + 0.45965 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.17802 * prints.width, y: prints.minY + 0.71459 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.34746 * prints.width, y: prints.minY + 0.59462 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.29036 * prints.width, y: prints.minY + 0.64636 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.02543 * prints.width, y: prints.minY + 0.75208 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.06474 * prints.width, y: prints.minY + 0.78283 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.03104 * prints.width, y: prints.minY + 0.79108 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.10968 * prints.width, y: prints.minY + 0.68010 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.02262 * prints.width, y: prints.minY + 0.73409 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.03292 * prints.width, y: prints.minY + 0.72584 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.32593 * prints.width, y: prints.minY + 0.49414 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.22108 * prints.width, y: prints.minY + 0.61336 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.28474 * prints.width, y: prints.minY + 0.55863 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.49725 * prints.width, y: prints.minY + 0.38616 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.37555 * prints.width, y: prints.minY + 0.41616 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.42329 * prints.width, y: prints.minY + 0.38616 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.65078 * prints.width, y: prints.minY + 0.48514 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.56746 * prints.width, y: prints.minY + 0.38616 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.63205 * prints.width, y: prints.minY + 0.42816 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.66107 * prints.width, y: prints.minY + 0.56987 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.66201 * prints.width, y: prints.minY + 0.52189 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.67044 * prints.width, y: prints.minY + 0.58787 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.64703 * prints.width, y: prints.minY + 0.57812 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.65452 * prints.width, y: prints.minY + 0.55638 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.65265 * prints.width, y: prints.minY + 0.55713 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.35589 * prints.width, y: prints.minY + 0.85931 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.63205 * prints.width, y: prints.minY + 0.63211 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.50661 * prints.width, y: prints.minY + 0.75358 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.37742 * prints.width, y: prints.minY + 0.84956 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.30253 * prints.width, y: prints.minY + 0.89605 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.31563 * prints.width, y: prints.minY + 0.89080 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.45418 * prints.width, y: prints.minY + 0.82557 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.41112 * prints.width, y: prints.minY + 0.82707 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.42329 * prints.width, y: prints.minY + 0.82332 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.51597 * prints.width, y: prints.minY + 0.84131 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.47478 * prints.width, y: prints.minY + 0.82707 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.50286 * prints.width, y: prints.minY + 0.83382 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.53376 * prints.width, y: prints.minY + 0.83607 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.54125 * prints.width, y: prints.minY + 0.85406 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54125 * prints.width, y: prints.minY + 0.85406 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.53188 * prints.width, y: prints.minY + 0.73334 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.52252 * prints.width, y: prints.minY + 0.80832 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.52159 * prints.width, y: prints.minY + 0.73859 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.53563 * prints.width, y: prints.minY + 0.75808 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.53750 * prints.width, y: prints.minY + 0.73034 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.53937 * prints.width, y: prints.minY + 0.74009 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.53844 * prints.width, y: prints.minY + 0.81657 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.53282 * prints.width, y: prints.minY + 0.77383 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.53376 * prints.width, y: prints.minY + 0.80082 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.51223 * prints.width, y: prints.minY + 0.84656 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.54874 * prints.width, y: prints.minY + 0.85481 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54218 * prints.width, y: prints.minY + 0.86231 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.36150 * prints.width, y: prints.minY + 0.86831 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.46823 * prints.width, y: prints.minY + 0.82332 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.42329 * prints.width, y: prints.minY + 0.83007 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.30159 * prints.width, y: prints.minY + 0.89830 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.33155 * prints.width, y: prints.minY + 0.88780 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.30440 * prints.width, y: prints.minY + 0.90130 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.27163 * prints.width, y: prints.minY + 0.91855 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.29317 * prints.width, y: prints.minY + 0.89230 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.26602 * prints.width, y: prints.minY + 0.91105 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.20891 * prints.width, y: prints.minY + 0.95604 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.27725 * prints.width, y: prints.minY + 0.92605 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.22670 * prints.width, y: prints.minY + 0.95604 * prints.height))
        bezier5Path.addCurve(to: CGPoint(x: prints.minX + 0.17521 * prints.width, y: prints.minY + 0.93879 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.20142 * prints.width, y: prints.minY + 0.95604 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.18644 * prints.width, y: prints.minY + 0.94854 * prints.height))
        bezier5Path.close()
        fillColor.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: prints.minX + 0.61427 * prints.width, y: prints.minY + 0.90655 * prints.height))
        bezier6Path.addCurve(to: CGPoint(x: prints.minX + 0.54780 * prints.width, y: prints.minY + 0.75358 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.55435 * prints.width, y: prints.minY + 0.85481 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.53188 * prints.width, y: prints.minY + 0.80157 * prints.height))
        bezier6Path.addCurve(to: CGPoint(x: prints.minX + 0.55342 * prints.width, y: prints.minY + 0.71834 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.55342 * prints.width, y: prints.minY + 0.73634 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.55622 * prints.width, y: prints.minY + 0.72059 * prints.height))
        bezier6Path.addCurve(to: CGPoint(x: prints.minX + 0.57401 * prints.width, y: prints.minY + 0.69060 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.55061 * prints.width, y: prints.minY + 0.71609 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.55997 * prints.width, y: prints.minY + 0.70335 * prints.height))
        bezier6Path.addCurve(to: CGPoint(x: prints.minX + 0.61614 * prints.width, y: prints.minY + 0.64861 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.58805 * prints.width, y: prints.minY + 0.67785 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.60678 * prints.width, y: prints.minY + 0.65836 * prints.height))
        bezier6Path.addLine(to: CGPoint(x: prints.minX + 0.63393 * prints.width, y: prints.minY + 0.62986 * prints.height))
        bezier6Path.addLine(to: CGPoint(x: prints.minX + 0.61801 * prints.width, y: prints.minY + 0.65086 * prints.height))
        bezier6Path.addCurve(to: CGPoint(x: prints.minX + 0.61333 * prints.width, y: prints.minY + 0.68235 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60678 * prints.width, y: prints.minY + 0.66660 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.60490 * prints.width, y: prints.minY + 0.67485 * prints.height))
        bezier6Path.addCurve(to: CGPoint(x: prints.minX + 0.60678 * prints.width, y: prints.minY + 0.68910 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.62176 * prints.width, y: prints.minY + 0.69060 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.61988 * prints.width, y: prints.minY + 0.69135 * prints.height))
        bezier6Path.addCurve(to: CGPoint(x: prints.minX + 0.57120 * prints.width, y: prints.minY + 0.70185 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.59648 * prints.width, y: prints.minY + 0.68685 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.58150 * prints.width, y: prints.minY + 0.69210 * prints.height))
        bezier6Path.addLine(to: CGPoint(x: prints.minX + 0.55248 * prints.width, y: prints.minY + 0.71834 * prints.height))
        bezier6Path.addLine(to: CGPoint(x: prints.minX + 0.57776 * prints.width, y: prints.minY + 0.70559 * prints.height))
        bezier6Path.addCurve(to: CGPoint(x: prints.minX + 0.62269 * prints.width, y: prints.minY + 0.70859 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60210 * prints.width, y: prints.minY + 0.69285 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.60303 * prints.width, y: prints.minY + 0.69285 * prints.height))
        bezier6Path.addCurve(to: CGPoint(x: prints.minX + 0.63580 * prints.width, y: prints.minY + 0.73709 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.63580 * prints.width, y: prints.minY + 0.71909 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64048 * prints.width, y: prints.minY + 0.72884 * prints.height))
        bezier6Path.addCurve(to: CGPoint(x: prints.minX + 0.69290 * prints.width, y: prints.minY + 0.88556 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60865 * prints.width, y: prints.minY + 0.78658 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.63299 * prints.width, y: prints.minY + 0.84881 * prints.height))
        bezier6Path.addCurve(to: CGPoint(x: prints.minX + 0.71443 * prints.width, y: prints.minY + 0.93954 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.72660 * prints.width, y: prints.minY + 0.90580 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.73409 * prints.width, y: prints.minY + 0.92380 * prints.height))
        bezier6Path.addCurve(to: CGPoint(x: prints.minX + 0.61427 * prints.width, y: prints.minY + 0.90655 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.69103 * prints.width, y: prints.minY + 0.95829 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.66201 * prints.width, y: prints.minY + 0.94854 * prints.height))
        bezier6Path.close()
        fillColor.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: prints.minX + 0.78652 * prints.width, y: prints.minY + 0.89080 * prints.height))
        bezier7Path.addCurve(to: CGPoint(x: prints.minX + 0.66856 * prints.width, y: prints.minY + 0.78958 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.73971 * prints.width, y: prints.minY + 0.87131 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.69758 * prints.width, y: prints.minY + 0.83457 * prints.height))
        bezier7Path.addCurve(to: CGPoint(x: prints.minX + 0.65078 * prints.width, y: prints.minY + 0.73859 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.63861 * prints.width, y: prints.minY + 0.74159 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.63767 * prints.width, y: prints.minY + 0.73859 * prints.height))
        bezier7Path.addCurve(to: CGPoint(x: prints.minX + 0.66014 * prints.width, y: prints.minY + 0.74983 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.65639 * prints.width, y: prints.minY + 0.73859 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.66014 * prints.width, y: prints.minY + 0.74384 * prints.height))
        bezier7Path.addCurve(to: CGPoint(x: prints.minX + 0.72754 * prints.width, y: prints.minY + 0.84806 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.66014 * prints.width, y: prints.minY + 0.76783 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.70226 * prints.width, y: prints.minY + 0.83082 * prints.height))
        bezier7Path.addCurve(to: CGPoint(x: prints.minX + 0.83520 * prints.width, y: prints.minY + 0.89605 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.76124 * prints.width, y: prints.minY + 0.87356 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.81273 * prints.width, y: prints.minY + 0.89605 * prints.height))
        bezier7Path.addCurve(to: CGPoint(x: prints.minX + 0.88107 * prints.width, y: prints.minY + 0.84731 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.85954 * prints.width, y: prints.minY + 0.89605 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.88949 * prints.width, y: prints.minY + 0.86456 * prints.height))
        bezier7Path.addCurve(to: CGPoint(x: prints.minX + 0.88481 * prints.width, y: prints.minY + 0.83982 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.87826 * prints.width, y: prints.minY + 0.84056 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.87920 * prints.width, y: prints.minY + 0.83757 * prints.height))
        bezier7Path.addCurve(to: CGPoint(x: prints.minX + 0.87264 * prints.width, y: prints.minY + 0.88705 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.90073 * prints.width, y: prints.minY + 0.84806 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.89511 * prints.width, y: prints.minY + 0.87056 * prints.height))
        bezier7Path.addCurve(to: CGPoint(x: prints.minX + 0.78652 * prints.width, y: prints.minY + 0.89080 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.84737 * prints.width, y: prints.minY + 0.90655 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.82490 * prints.width, y: prints.minY + 0.90730 * prints.height))
        bezier7Path.close()
        fillColor.setFill()
        bezier7Path.fill()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: prints.minX + 0.07691 * prints.width, y: prints.minY + 0.87506 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.11249 * prints.width, y: prints.minY + 0.79408 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.04977 * prints.width, y: prints.minY + 0.85106 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.05819 * prints.width, y: prints.minY + 0.83157 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.16866 * prints.width, y: prints.minY + 0.76183 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.14151 * prints.width, y: prints.minY + 0.77458 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.16585 * prints.width, y: prints.minY + 0.76033 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.12091 * prints.width, y: prints.minY + 0.79707 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17053 * prints.width, y: prints.minY + 0.76408 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.14900 * prints.width, y: prints.minY + 0.77983 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.07036 * prints.width, y: prints.minY + 0.84581 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.08534 * prints.width, y: prints.minY + 0.81882 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.07036 * prints.width, y: prints.minY + 0.83382 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.16866 * prints.width, y: prints.minY + 0.86081 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.07036 * prints.width, y: prints.minY + 0.88481 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.11249 * prints.width, y: prints.minY + 0.89155 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.19300 * prints.width, y: prints.minY + 0.85331 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18925 * prints.width, y: prints.minY + 0.84956 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.20049 * prints.width, y: prints.minY + 0.84656 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.19019 * prints.width, y: prints.minY + 0.86606 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18644 * prints.width, y: prints.minY + 0.86006 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.18457 * prints.width, y: prints.minY + 0.86606 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.21078 * prints.width, y: prints.minY + 0.85481 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.19487 * prints.width, y: prints.minY + 0.86606 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.20423 * prints.width, y: prints.minY + 0.86081 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.21172 * prints.width, y: prints.minY + 0.84356 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.21921 * prints.width, y: prints.minY + 0.84656 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.21921 * prints.width, y: prints.minY + 0.84356 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.20610 * prints.width, y: prints.minY + 0.83607 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.20517 * prints.width, y: prints.minY + 0.84356 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.20329 * prints.width, y: prints.minY + 0.84056 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.22108 * prints.width, y: prints.minY + 0.82857 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.20891 * prints.width, y: prints.minY + 0.83232 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.21640 * prints.width, y: prints.minY + 0.82857 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.22483 * prints.width, y: prints.minY + 0.83607 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.22670 * prints.width, y: prints.minY + 0.82857 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.22763 * prints.width, y: prints.minY + 0.83232 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.25197 * prints.width, y: prints.minY + 0.82932 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.21453 * prints.width, y: prints.minY + 0.84956 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.23512 * prints.width, y: prints.minY + 0.84431 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.25666 * prints.width, y: prints.minY + 0.81207 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.26321 * prints.width, y: prints.minY + 0.81957 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.26508 * prints.width, y: prints.minY + 0.81432 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.27257 * prints.width, y: prints.minY + 0.79483 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.25104 * prints.width, y: prints.minY + 0.81057 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.25759 * prints.width, y: prints.minY + 0.80307 * prints.height))
        bezier8Path.addLine(to: CGPoint(x: prints.minX + 0.29972 * prints.width, y: prints.minY + 0.78133 * prints.height))
        bezier8Path.addLine(to: CGPoint(x: prints.minX + 0.28193 * prints.width, y: prints.minY + 0.79707 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.27444 * prints.width, y: prints.minY + 0.81357 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.27163 * prints.width, y: prints.minY + 0.80607 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.26883 * prints.width, y: prints.minY + 0.81357 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.53095 * prints.width, y: prints.minY + 0.59987 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.29504 * prints.width, y: prints.minY + 0.81357 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.50567 * prints.width, y: prints.minY + 0.63736 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.53282 * prints.width, y: prints.minY + 0.47090 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.56091 * prints.width, y: prints.minY + 0.55488 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.56184 * prints.width, y: prints.minY + 0.48814 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.40831 * prints.width, y: prints.minY + 0.53163 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.48976 * prints.width, y: prints.minY + 0.44540 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.45606 * prints.width, y: prints.minY + 0.46190 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.16866 * prints.width, y: prints.minY + 0.73634 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.35870 * prints.width, y: prints.minY + 0.60512 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.28380 * prints.width, y: prints.minY + 0.66885 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.01232 * prints.width, y: prints.minY + 0.76858 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.06662 * prints.width, y: prints.minY + 0.79707 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.04321 * prints.width, y: prints.minY + 0.80157 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.06755 * prints.width, y: prints.minY + 0.68835 * prints.height), controlPoint1: CGPoint(x: prints.minX + -0.01202 * prints.width, y: prints.minY + 0.74159 * prints.height), controlPoint2: CGPoint(x: prints.minX + -0.00266 * prints.width, y: prints.minY + 0.72884 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.11810 * prints.width, y: prints.minY + 0.64936 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.10032 * prints.width, y: prints.minY + 0.66960 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.12372 * prints.width, y: prints.minY + 0.65161 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.12934 * prints.width, y: prints.minY + 0.63436 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.11249 * prints.width, y: prints.minY + 0.64636 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.11717 * prints.width, y: prints.minY + 0.64036 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.13683 * prints.width, y: prints.minY + 0.63586 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.14806 * prints.width, y: prints.minY + 0.62461 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.14900 * prints.width, y: prints.minY + 0.62461 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.13402 * prints.width, y: prints.minY + 0.64861 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.13027 * prints.width, y: prints.minY + 0.64336 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.12840 * prints.width, y: prints.minY + 0.64861 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.15461 * prints.width, y: prints.minY + 0.63736 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.13870 * prints.width, y: prints.minY + 0.64861 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.14806 * prints.width, y: prints.minY + 0.64336 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.15368 * prints.width, y: prints.minY + 0.62611 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.16398 * prints.width, y: prints.minY + 0.62836 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.16398 * prints.width, y: prints.minY + 0.62611 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.15461 * prints.width, y: prints.minY + 0.61936 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.14338 * prints.width, y: prints.minY + 0.62611 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.14338 * prints.width, y: prints.minY + 0.62461 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.17615 * prints.width, y: prints.minY + 0.61636 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.16210 * prints.width, y: prints.minY + 0.61486 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17147 * prints.width, y: prints.minY + 0.61411 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.25291 * prints.width, y: prints.minY + 0.55263 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18832 * prints.width, y: prints.minY + 0.62236 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.25853 * prints.width, y: prints.minY + 0.56463 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.25666 * prints.width, y: prints.minY + 0.54663 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.25104 * prints.width, y: prints.minY + 0.54738 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.25197 * prints.width, y: prints.minY + 0.54438 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.26321 * prints.width, y: prints.minY + 0.53763 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.26134 * prints.width, y: prints.minY + 0.54888 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.26414 * prints.width, y: prints.minY + 0.54513 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.27444 * prints.width, y: prints.minY + 0.52713 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.26321 * prints.width, y: prints.minY + 0.53088 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.26789 * prints.width, y: prints.minY + 0.52563 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.28006 * prints.width, y: prints.minY + 0.52039 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.28193 * prints.width, y: prints.minY + 0.52788 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.28474 * prints.width, y: prints.minY + 0.52563 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.28380 * prints.width, y: prints.minY + 0.51664 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.27631 * prints.width, y: prints.minY + 0.51439 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.27725 * prints.width, y: prints.minY + 0.51364 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.28848 * prints.width, y: prints.minY + 0.50914 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.29129 * prints.width, y: prints.minY + 0.52039 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.29317 * prints.width, y: prints.minY + 0.51739 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.29317 * prints.width, y: prints.minY + 0.50164 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.28474 * prints.width, y: prints.minY + 0.50014 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.28568 * prints.width, y: prints.minY + 0.49789 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.29785 * prints.width, y: prints.minY + 0.49414 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.30065 * prints.width, y: prints.minY + 0.50539 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.30253 * prints.width, y: prints.minY + 0.50239 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.30253 * prints.width, y: prints.minY + 0.48664 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.29410 * prints.width, y: prints.minY + 0.48514 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.29504 * prints.width, y: prints.minY + 0.48289 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.30721 * prints.width, y: prints.minY + 0.47914 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.31002 * prints.width, y: prints.minY + 0.49039 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.31189 * prints.width, y: prints.minY + 0.48739 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.31189 * prints.width, y: prints.minY + 0.47165 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.30346 * prints.width, y: prints.minY + 0.47015 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.30440 * prints.width, y: prints.minY + 0.46790 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.31657 * prints.width, y: prints.minY + 0.46415 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.31938 * prints.width, y: prints.minY + 0.47540 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.32125 * prints.width, y: prints.minY + 0.47240 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.32125 * prints.width, y: prints.minY + 0.45665 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.31282 * prints.width, y: prints.minY + 0.45515 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.31376 * prints.width, y: prints.minY + 0.45290 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.32593 * prints.width, y: prints.minY + 0.44915 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.32874 * prints.width, y: prints.minY + 0.46040 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.33061 * prints.width, y: prints.minY + 0.45740 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.33248 * prints.width, y: prints.minY + 0.44240 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.32125 * prints.width, y: prints.minY + 0.43940 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.32312 * prints.width, y: prints.minY + 0.43790 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.33904 * prints.width, y: prints.minY + 0.44165 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.33997 * prints.width, y: prints.minY + 0.44615 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.34278 * prints.width, y: prints.minY + 0.44540 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.34278 * prints.width, y: prints.minY + 0.42366 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.33623 * prints.width, y: prints.minY + 0.43715 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.33716 * prints.width, y: prints.minY + 0.42966 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.35121 * prints.width, y: prints.minY + 0.42216 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.34840 * prints.width, y: prints.minY + 0.41616 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.35121 * prints.width, y: prints.minY + 0.41541 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.36806 * prints.width, y: prints.minY + 0.41841 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.35121 * prints.width, y: prints.minY + 0.42816 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.35682 * prints.width, y: prints.minY + 0.42666 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.37555 * prints.width, y: prints.minY + 0.39966 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.37929 * prints.width, y: prints.minY + 0.40941 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.38116 * prints.width, y: prints.minY + 0.40266 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.40082 * prints.width, y: prints.minY + 0.39291 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.36619 * prints.width, y: prints.minY + 0.39441 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.38210 * prints.width, y: prints.minY + 0.38991 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.40176 * prints.width, y: prints.minY + 0.38542 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.40550 * prints.width, y: prints.minY + 0.39366 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.40550 * prints.width, y: prints.minY + 0.38991 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.41112 * prints.width, y: prints.minY + 0.38092 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.39708 * prints.width, y: prints.minY + 0.37867 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.39989 * prints.width, y: prints.minY + 0.37792 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.42048 * prints.width, y: prints.minY + 0.37717 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.42142 * prints.width, y: prints.minY + 0.38467 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.42516 * prints.width, y: prints.minY + 0.38317 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.42984 * prints.width, y: prints.minY + 0.37342 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.41580 * prints.width, y: prints.minY + 0.37117 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.41861 * prints.width, y: prints.minY + 0.37042 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.44014 * prints.width, y: prints.minY + 0.37117 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.43921 * prints.width, y: prints.minY + 0.37642 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.44389 * prints.width, y: prints.minY + 0.37567 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.49631 * prints.width, y: prints.minY + 0.36367 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.43640 * prints.width, y: prints.minY + 0.36667 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.45793 * prints.width, y: prints.minY + 0.36367 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.55248 * prints.width, y: prints.minY + 0.37117 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.53469 * prints.width, y: prints.minY + 0.36367 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.55622 * prints.width, y: prints.minY + 0.36667 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.56278 * prints.width, y: prints.minY + 0.37342 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.54874 * prints.width, y: prints.minY + 0.37567 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.55342 * prints.width, y: prints.minY + 0.37642 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.57214 * prints.width, y: prints.minY + 0.37717 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.57401 * prints.width, y: prints.minY + 0.37042 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.57682 * prints.width, y: prints.minY + 0.37117 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.58150 * prints.width, y: prints.minY + 0.38092 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.56746 * prints.width, y: prints.minY + 0.38317 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.57120 * prints.width, y: prints.minY + 0.38467 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.59086 * prints.width, y: prints.minY + 0.38467 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.59273 * prints.width, y: prints.minY + 0.37792 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.59554 * prints.width, y: prints.minY + 0.37867 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.60116 * prints.width, y: prints.minY + 0.38916 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.58618 * prints.width, y: prints.minY + 0.39066 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.58993 * prints.width, y: prints.minY + 0.39216 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.60584 * prints.width, y: prints.minY + 0.39141 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.61239 * prints.width, y: prints.minY + 0.38616 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.61427 * prints.width, y: prints.minY + 0.38691 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.61707 * prints.width, y: prints.minY + 0.41541 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.59742 * prints.width, y: prints.minY + 0.39666 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.59929 * prints.width, y: prints.minY + 0.40266 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.64329 * prints.width, y: prints.minY + 0.42591 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.62924 * prints.width, y: prints.minY + 0.42441 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64141 * prints.width, y: prints.minY + 0.42966 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.64422 * prints.width, y: prints.minY + 0.42966 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.64610 * prints.width, y: prints.minY + 0.42291 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64610 * prints.width, y: prints.minY + 0.42441 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.65265 * prints.width, y: prints.minY + 0.43415 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.64329 * prints.width, y: prints.minY + 0.43565 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64610 * prints.width, y: prints.minY + 0.43715 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.65733 * prints.width, y: prints.minY + 0.44165 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.66014 * prints.width, y: prints.minY + 0.43041 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.66107 * prints.width, y: prints.minY + 0.43265 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.65920 * prints.width, y: prints.minY + 0.44990 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.65358 * prints.width, y: prints.minY + 0.44840 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.65452 * prints.width, y: prints.minY + 0.45290 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.67418 * prints.width, y: prints.minY + 0.48139 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.66482 * prints.width, y: prints.minY + 0.44765 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.67137 * prints.width, y: prints.minY + 0.46190 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.68729 * prints.width, y: prints.minY + 0.50614 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.68354 * prints.width, y: prints.minY + 0.53763 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.68635 * prints.width, y: prints.minY + 0.54288 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.53844 * prints.width, y: prints.minY + 0.35692 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.68916 * prints.width, y: prints.minY + 0.43715 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.62363 * prints.width, y: prints.minY + 0.37117 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.29129 * prints.width, y: prints.minY + 0.47839 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.43640 * prints.width, y: prints.minY + 0.33968 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.35308 * prints.width, y: prints.minY + 0.38092 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.13776 * prints.width, y: prints.minY + 0.61936 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.25572 * prints.width, y: prints.minY + 0.53463 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.21266 * prints.width, y: prints.minY + 0.57362 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.02543 * prints.width, y: prints.minY + 0.63211 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.06662 * prints.width, y: prints.minY + 0.66210 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.03011 * prints.width, y: prints.minY + 0.66660 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.05819 * prints.width, y: prints.minY + 0.59162 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.02262 * prints.width, y: prints.minY + 0.61636 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.03011 * prints.width, y: prints.minY + 0.60812 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.22576 * prints.width, y: prints.minY + 0.44465 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.13027 * prints.width, y: prints.minY + 0.54963 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.19393 * prints.width, y: prints.minY + 0.49414 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.38678 * prints.width, y: prints.minY + 0.30968 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.26602 * prints.width, y: prints.minY + 0.38467 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.32687 * prints.width, y: prints.minY + 0.33368 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.60490 * prints.width, y: prints.minY + 0.30893 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.44576 * prints.width, y: prints.minY + 0.28644 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54312 * prints.width, y: prints.minY + 0.28569 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.74065 * prints.width, y: prints.minY + 0.40941 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.65452 * prints.width, y: prints.minY + 0.32693 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.71724 * prints.width, y: prints.minY + 0.37342 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.74907 * prints.width, y: prints.minY + 0.60287 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.76499 * prints.width, y: prints.minY + 0.44765 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76780 * prints.width, y: prints.minY + 0.51289 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.74346 * prints.width, y: prints.minY + 0.72809 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.73409 * prints.width, y: prints.minY + 0.67410 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.73316 * prints.width, y: prints.minY + 0.69060 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.84550 * prints.width, y: prints.minY + 0.83007 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.75656 * prints.width, y: prints.minY + 0.77458 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.78745 * prints.width, y: prints.minY + 0.80532 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.86047 * prints.width, y: prints.minY + 0.87731 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.87920 * prints.width, y: prints.minY + 0.84431 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.88294 * prints.width, y: prints.minY + 0.85856 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.69384 * prints.width, y: prints.minY + 0.79857 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.82677 * prints.width, y: prints.minY + 0.90430 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.73877 * prints.width, y: prints.minY + 0.86231 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.66950 * prints.width, y: prints.minY + 0.55863 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.66295 * prints.width, y: prints.minY + 0.75433 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.66201 * prints.width, y: prints.minY + 0.74609 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.61520 * prints.width, y: prints.minY + 0.42141 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.67231 * prints.width, y: prints.minY + 0.49564 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.65733 * prints.width, y: prints.minY + 0.45665 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.49631 * prints.width, y: prints.minY + 0.37867 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.57869 * prints.width, y: prints.minY + 0.39066 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54593 * prints.width, y: prints.minY + 0.37867 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.31376 * prints.width, y: prints.minY + 0.49714 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.42142 * prints.width, y: prints.minY + 0.37867 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.36806 * prints.width, y: prints.minY + 0.41316 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.11249 * prints.width, y: prints.minY + 0.66960 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.27070 * prints.width, y: prints.minY + 0.56313 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.22108 * prints.width, y: prints.minY + 0.60512 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.01232 * prints.width, y: prints.minY + 0.73859 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.06100 * prints.width, y: prints.minY + 0.69960 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.01606 * prints.width, y: prints.minY + 0.73109 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.05538 * prints.width, y: prints.minY + 0.78358 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.00389 * prints.width, y: prints.minY + 0.75658 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.02917 * prints.width, y: prints.minY + 0.78358 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.31470 * prints.width, y: prints.minY + 0.62761 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.08534 * prints.width, y: prints.minY + 0.78358 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.25104 * prints.width, y: prints.minY + 0.68385 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.39801 * prints.width, y: prints.minY + 0.53163 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.34372 * prints.width, y: prints.minY + 0.60212 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.38116 * prints.width, y: prints.minY + 0.55863 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.54312 * prints.width, y: prints.minY + 0.47240 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.44763 * prints.width, y: prints.minY + 0.45440 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.49631 * prints.width, y: prints.minY + 0.43415 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.56652 * prints.width, y: prints.minY + 0.52638 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.56184 * prints.width, y: prints.minY + 0.48664 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.56652 * prints.width, y: prints.minY + 0.49789 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.43827 * prints.width, y: prints.minY + 0.70185 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.56652 * prints.width, y: prints.minY + 0.57437 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.52908 * prints.width, y: prints.minY + 0.62536 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.18270 * prints.width, y: prints.minY + 0.86981 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.35121 * prints.width, y: prints.minY + 0.77458 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.19674 * prints.width, y: prints.minY + 0.87656 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.15274 * prints.width, y: prints.minY + 0.87656 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17802 * prints.width, y: prints.minY + 0.86756 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.16398 * prints.width, y: prints.minY + 0.87056 * prints.height))
        bezier8Path.addCurve(to: CGPoint(x: prints.minX + 0.07691 * prints.width, y: prints.minY + 0.87506 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.12466 * prints.width, y: prints.minY + 0.89230 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.09564 * prints.width, y: prints.minY + 0.89155 * prints.height))
        bezier8Path.close()
        fillColor.setFill()
        bezier8Path.fill()


        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: prints.minX + 0.09096 * prints.width, y: prints.minY + 0.86456 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.13121 * prints.width, y: prints.minY + 0.79782 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.06942 * prints.width, y: prints.minY + 0.84731 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.08066 * prints.width, y: prints.minY + 0.82857 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.17989 * prints.width, y: prints.minY + 0.76183 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.15930 * prints.width, y: prints.minY + 0.78133 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.18083 * prints.width, y: prints.minY + 0.76483 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.26508 * prints.width, y: prints.minY + 0.69060 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17895 * prints.width, y: prints.minY + 0.75883 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.21734 * prints.width, y: prints.minY + 0.72659 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.39801 * prints.width, y: prints.minY + 0.56688 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.31376 * prints.width, y: prints.minY + 0.65311 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.37180 * prints.width, y: prints.minY + 0.59987 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.49537 * prints.width, y: prints.minY + 0.47615 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.47103 * prints.width, y: prints.minY + 0.47764 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.47291 * prints.width, y: prints.minY + 0.47615 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.53469 * prints.width, y: prints.minY + 0.49264 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.50754 * prints.width, y: prints.minY + 0.47615 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.52440 * prints.width, y: prints.minY + 0.48364 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.53937 * prints.width, y: prints.minY + 0.50239 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.54405 * prints.width, y: prints.minY + 0.50164 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54686 * prints.width, y: prints.minY + 0.50614 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.54499 * prints.width, y: prints.minY + 0.53988 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.52720 * prints.width, y: prints.minY + 0.49714 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.52908 * prints.width, y: prints.minY + 0.50614 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.29597 * prints.width, y: prints.minY + 0.78058 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.55529 * prints.width, y: prints.minY + 0.56388 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.31938 * prints.width, y: prints.minY + 0.79183 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.24168 * prints.width, y: prints.minY + 0.81582 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.28474 * prints.width, y: prints.minY + 0.77458 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.23887 * prints.width, y: prints.minY + 0.80457 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.23138 * prints.width, y: prints.minY + 0.82257 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.24261 * prints.width, y: prints.minY + 0.82107 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.23793 * prints.width, y: prints.minY + 0.82407 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.17615 * prints.width, y: prints.minY + 0.84731 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.22483 * prints.width, y: prints.minY + 0.82182 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.19955 * prints.width, y: prints.minY + 0.83307 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.09096 * prints.width, y: prints.minY + 0.86456 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.13121 * prints.width, y: prints.minY + 0.87506 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.10968 * prints.width, y: prints.minY + 0.87956 * prints.height))
        bezier9Path.close()
        bezier9Path.move(to: CGPoint(x: prints.minX + 0.49444 * prints.width, y: prints.minY + 0.60212 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.53469 * prints.width, y: prints.minY + 0.54588 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.51316 * prints.width, y: prints.minY + 0.57887 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.53188 * prints.width, y: prints.minY + 0.55338 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.51410 * prints.width, y: prints.minY + 0.56613 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.53750 * prints.width, y: prints.minY + 0.53838 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.52908 * prints.width, y: prints.minY + 0.54738 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.36525 * prints.width, y: prints.minY + 0.71684 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.47665 * prints.width, y: prints.minY + 0.61561 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.43921 * prints.width, y: prints.minY + 0.65311 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.37929 * prints.width, y: prints.minY + 0.70934 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.30346 * prints.width, y: prints.minY + 0.77008 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.30440 * prints.width, y: prints.minY + 0.76933 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.49444 * prints.width, y: prints.minY + 0.60212 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.42329 * prints.width, y: prints.minY + 0.67410 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.47478 * prints.width, y: prints.minY + 0.62536 * prints.height))
        bezier9Path.close()
        bezier9Path.move(to: CGPoint(x: prints.minX + 0.25478 * prints.width, y: prints.minY + 0.71834 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.45044 * prints.width, y: prints.minY + 0.52713 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.32780 * prints.width, y: prints.minY + 0.66585 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.41767 * prints.width, y: prints.minY + 0.57887 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.50193 * prints.width, y: prints.minY + 0.49264 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.47197 * prints.width, y: prints.minY + 0.49264 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.47665 * prints.width, y: prints.minY + 0.48964 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.52065 * prints.width, y: prints.minY + 0.48889 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.51878 * prints.width, y: prints.minY + 0.49489 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.52627 * prints.width, y: prints.minY + 0.49339 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.49069 * prints.width, y: prints.minY + 0.48514 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.51597 * prints.width, y: prints.minY + 0.48514 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.50286 * prints.width, y: prints.minY + 0.48364 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.43546 * prints.width, y: prints.minY + 0.53613 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.47478 * prints.width, y: prints.minY + 0.48664 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.45980 * prints.width, y: prints.minY + 0.50014 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.29410 * prints.width, y: prints.minY + 0.67335 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.41299 * prints.width, y: prints.minY + 0.56912 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.36806 * prints.width, y: prints.minY + 0.61336 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.19019 * prints.width, y: prints.minY + 0.76108 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.23512 * prints.width, y: prints.minY + 0.72134 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.18832 * prints.width, y: prints.minY + 0.76108 * prints.height))
        bezier9Path.addCurve(to: CGPoint(x: prints.minX + 0.25478 * prints.width, y: prints.minY + 0.71834 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.19206 * prints.width, y: prints.minY + 0.76108 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.22108 * prints.width, y: prints.minY + 0.74159 * prints.height))
        bezier9Path.close()
        fillColor.setFill()
        bezier9Path.fill()


        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: prints.minX + 0.83333 * prints.width, y: prints.minY + 0.81657 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.75282 * prints.width, y: prints.minY + 0.72659 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.78277 * prints.width, y: prints.minY + 0.79333 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76592 * prints.width, y: prints.minY + 0.77533 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.75656 * prints.width, y: prints.minY + 0.61262 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.74346 * prints.width, y: prints.minY + 0.69210 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.74346 * prints.width, y: prints.minY + 0.67410 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.68822 * prints.width, y: prints.minY + 0.34567 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.78745 * prints.width, y: prints.minY + 0.47090 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.77060 * prints.width, y: prints.minY + 0.40566 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.21734 * prints.width, y: prints.minY + 0.44315 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.53188 * prints.width, y: prints.minY + 0.23245 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.32312 * prints.width, y: prints.minY + 0.27594 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.05445 * prints.width, y: prints.minY + 0.58412 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18364 * prints.width, y: prints.minY + 0.49639 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.12653 * prints.width, y: prints.minY + 0.54588 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.02075 * prints.width, y: prints.minY + 0.64786 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.01045 * prints.width, y: prints.minY + 0.60737 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.00109 * prints.width, y: prints.minY + 0.62611 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.09189 * prints.width, y: prints.minY + 0.65536 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.03572 * prints.width, y: prints.minY + 0.66510 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.06100 * prints.width, y: prints.minY + 0.66810 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.09376 * prints.width, y: prints.minY + 0.65985 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.11249 * prints.width, y: prints.minY + 0.64786 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.11249 * prints.width, y: prints.minY + 0.64786 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.01232 * prints.width, y: prints.minY + 0.64861 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.06849 * prints.width, y: prints.minY + 0.67635 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.03385 * prints.width, y: prints.minY + 0.67110 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.05070 * prints.width, y: prints.minY + 0.57887 * prints.height), controlPoint1: CGPoint(x: prints.minX + -0.01108 * prints.width, y: prints.minY + 0.62311 * prints.height), controlPoint2: CGPoint(x: prints.minX + -0.00266 * prints.width, y: prints.minY + 0.60887 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.17334 * prints.width, y: prints.minY + 0.48889 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.10500 * prints.width, y: prints.minY + 0.54888 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17334 * prints.width, y: prints.minY + 0.49939 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.15461 * prints.width, y: prints.minY + 0.49489 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17334 * prints.width, y: prints.minY + 0.48514 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.16491 * prints.width, y: prints.minY + 0.48739 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.14993 * prints.width, y: prints.minY + 0.48364 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.12653 * prints.width, y: prints.minY + 0.51514 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.12279 * prints.width, y: prints.minY + 0.50389 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.17334 * prints.width, y: prints.minY + 0.47540 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.16304 * prints.width, y: prints.minY + 0.47390 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17334 * prints.width, y: prints.minY + 0.47015 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.18364 * prints.width, y: prints.minY + 0.47989 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17334 * prints.width, y: prints.minY + 0.48064 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17802 * prints.width, y: prints.minY + 0.48214 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.18832 * prints.width, y: prints.minY + 0.46340 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18925 * prints.width, y: prints.minY + 0.47690 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.19112 * prints.width, y: prints.minY + 0.46940 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.19487 * prints.width, y: prints.minY + 0.45815 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18457 * prints.width, y: prints.minY + 0.45665 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.18644 * prints.width, y: prints.minY + 0.45440 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.19955 * prints.width, y: prints.minY + 0.45740 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.20049 * prints.width, y: prints.minY + 0.46115 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.20329 * prints.width, y: prints.minY + 0.46115 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.31938 * prints.width, y: prints.minY + 0.32168 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18457 * prints.width, y: prints.minY + 0.44390 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.29878 * prints.width, y: prints.minY + 0.31568 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.32687 * prints.width, y: prints.minY + 0.31718 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.32874 * prints.width, y: prints.minY + 0.32468 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.33061 * prints.width, y: prints.minY + 0.32318 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.33248 * prints.width, y: prints.minY + 0.31493 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.32219 * prints.width, y: prints.minY + 0.31193 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.32406 * prints.width, y: prints.minY + 0.31118 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.33716 * prints.width, y: prints.minY + 0.31118 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.34091 * prints.width, y: prints.minY + 0.31943 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.34278 * prints.width, y: prints.minY + 0.31793 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.34185 * prints.width, y: prints.minY + 0.30743 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.33155 * prints.width, y: prints.minY + 0.30443 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.33342 * prints.width, y: prints.minY + 0.30293 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.34653 * prints.width, y: prints.minY + 0.30368 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.35027 * prints.width, y: prints.minY + 0.31193 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.35214 * prints.width, y: prints.minY + 0.31043 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.35495 * prints.width, y: prints.minY + 0.29843 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.34091 * prints.width, y: prints.minY + 0.29618 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.34278 * prints.width, y: prints.minY + 0.29469 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.36431 * prints.width, y: prints.minY + 0.29469 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.36525 * prints.width, y: prints.minY + 0.30218 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.36899 * prints.width, y: prints.minY + 0.30068 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.37367 * prints.width, y: prints.minY + 0.29094 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.35963 * prints.width, y: prints.minY + 0.28869 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.36244 * prints.width, y: prints.minY + 0.28794 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.38397 * prints.width, y: prints.minY + 0.28869 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.38304 * prints.width, y: prints.minY + 0.29394 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.38772 * prints.width, y: prints.minY + 0.29319 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.49631 * prints.width, y: prints.minY + 0.27069 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.37742 * prints.width, y: prints.minY + 0.27969 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.43546 * prints.width, y: prints.minY + 0.27069 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.60865 * prints.width, y: prints.minY + 0.28869 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.55529 * prints.width, y: prints.minY + 0.27069 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.61520 * prints.width, y: prints.minY + 0.27969 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.62456 * prints.width, y: prints.minY + 0.29094 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60584 * prints.width, y: prints.minY + 0.29169 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.61333 * prints.width, y: prints.minY + 0.29319 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.63205 * prints.width, y: prints.minY + 0.29618 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.64235 * prints.width, y: prints.minY + 0.28794 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64329 * prints.width, y: prints.minY + 0.28869 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.64141 * prints.width, y: prints.minY + 0.29993 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.62082 * prints.width, y: prints.minY + 0.30293 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.62269 * prints.width, y: prints.minY + 0.30368 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.65171 * prints.width, y: prints.minY + 0.30218 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.65733 * prints.width, y: prints.minY + 0.29693 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.66107 * prints.width, y: prints.minY + 0.29768 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.67231 * prints.width, y: prints.minY + 0.31418 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.63673 * prints.width, y: prints.minY + 0.31118 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.65265 * prints.width, y: prints.minY + 0.32093 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.69290 * prints.width, y: prints.minY + 0.31793 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.67980 * prints.width, y: prints.minY + 0.31193 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.68916 * prints.width, y: prints.minY + 0.31343 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.68729 * prints.width, y: prints.minY + 0.32618 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.69571 * prints.width, y: prints.minY + 0.32243 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.69384 * prints.width, y: prints.minY + 0.32618 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.69758 * prints.width, y: prints.minY + 0.34492 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.68073 * prints.width, y: prints.minY + 0.32618 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.68541 * prints.width, y: prints.minY + 0.33443 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.72754 * prints.width, y: prints.minY + 0.35467 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.71443 * prints.width, y: prints.minY + 0.35917 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.72192 * prints.width, y: prints.minY + 0.36142 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.73597 * prints.width, y: prints.minY + 0.37867 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.73503 * prints.width, y: prints.minY + 0.34417 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.73877 * prints.width, y: prints.minY + 0.35542 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.74533 * prints.width, y: prints.minY + 0.37867 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.73409 * prints.width, y: prints.minY + 0.38841 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.73503 * prints.width, y: prints.minY + 0.38841 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.75001 * prints.width, y: prints.minY + 0.38092 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.75375 * prints.width, y: prints.minY + 0.36892 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.75469 * prints.width, y: prints.minY + 0.36967 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.75563 * prints.width, y: prints.minY + 0.38916 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.74626 * prints.width, y: prints.minY + 0.38991 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.74814 * prints.width, y: prints.minY + 0.39291 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.76031 * prints.width, y: prints.minY + 0.39666 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.76311 * prints.width, y: prints.minY + 0.38542 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76405 * prints.width, y: prints.minY + 0.38766 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.76499 * prints.width, y: prints.minY + 0.40416 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.75563 * prints.width, y: prints.minY + 0.40491 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.75750 * prints.width, y: prints.minY + 0.40791 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.76967 * prints.width, y: prints.minY + 0.41166 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.77248 * prints.width, y: prints.minY + 0.40041 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.77341 * prints.width, y: prints.minY + 0.40266 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.77435 * prints.width, y: prints.minY + 0.41916 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.76499 * prints.width, y: prints.minY + 0.41991 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76686 * prints.width, y: prints.minY + 0.42291 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.77997 * prints.width, y: prints.minY + 0.42966 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.78090 * prints.width, y: prints.minY + 0.41541 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.78277 * prints.width, y: prints.minY + 0.41916 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.78277 * prints.width, y: prints.minY + 0.44165 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.77622 * prints.width, y: prints.minY + 0.43865 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.77809 * prints.width, y: prints.minY + 0.44465 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.77809 * prints.width, y: prints.minY + 0.56163 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.79494 * prints.width, y: prints.minY + 0.43565 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.79307 * prints.width, y: prints.minY + 0.47390 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.76405 * prints.width, y: prints.minY + 0.70484 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.75843 * prints.width, y: prints.minY + 0.67335 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.75375 * prints.width, y: prints.minY + 0.72284 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.76686 * prints.width, y: prints.minY + 0.71384 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.77060 * prints.width, y: prints.minY + 0.69360 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.77154 * prints.width, y: prints.minY + 0.69585 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.83801 * prints.width, y: prints.minY + 0.79857 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.75750 * prints.width, y: prints.minY + 0.75583 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.81648 * prints.width, y: prints.minY + 0.82632 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.85111 * prints.width, y: prints.minY + 0.79707 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.84269 * prints.width, y: prints.minY + 0.79258 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.84737 * prints.width, y: prints.minY + 0.79183 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.85018 * prints.width, y: prints.minY + 0.80832 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.85392 * prints.width, y: prints.minY + 0.80157 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.85392 * prints.width, y: prints.minY + 0.80607 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.85486 * prints.width, y: prints.minY + 0.80832 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.84550 * prints.width, y: prints.minY + 0.80982 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.84830 * prints.width, y: prints.minY + 0.80982 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.86047 * prints.width, y: prints.minY + 0.81582 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.86235 * prints.width, y: prints.minY + 0.80757 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.86422 * prints.width, y: prints.minY + 0.80982 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.86141 * prints.width, y: prints.minY + 0.81957 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.85673 * prints.width, y: prints.minY + 0.82032 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.85673 * prints.width, y: prints.minY + 0.82257 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.88481 * prints.width, y: prints.minY + 0.82107 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.86515 * prints.width, y: prints.minY + 0.81657 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.87639 * prints.width, y: prints.minY + 0.81732 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.92600 * prints.width, y: prints.minY + 0.81282 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.89698 * prints.width, y: prints.minY + 0.82632 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.90822 * prints.width, y: prints.minY + 0.82407 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.92694 * prints.width, y: prints.minY + 0.75508 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.95596 * prints.width, y: prints.minY + 0.79333 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.95690 * prints.width, y: prints.minY + 0.78283 * prints.height))
        bezier10Path.addLine(to: CGPoint(x: prints.minX + 0.90354 * prints.width, y: prints.minY + 0.73259 * prints.height))
        bezier10Path.addLine(to: CGPoint(x: prints.minX + 0.93537 * prints.width, y: prints.minY + 0.71759 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.97843 * prints.width, y: prints.minY + 0.65161 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.96345 * prints.width, y: prints.minY + 0.70410 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.96813 * prints.width, y: prints.minY + 0.69735 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.90635 * prints.width, y: prints.minY + 0.35767 * prints.height), controlPoint1: CGPoint(x: prints.minX + 1.01307 * prints.width, y: prints.minY + 0.50764 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.97375 * prints.width, y: prints.minY + 0.34717 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.87077 * prints.width, y: prints.minY + 0.34642 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.89698 * prints.width, y: prints.minY + 0.35917 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.88107 * prints.width, y: prints.minY + 0.35392 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.84924 * prints.width, y: prints.minY + 0.34117 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.86047 * prints.width, y: prints.minY + 0.33893 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.85111 * prints.width, y: prints.minY + 0.33668 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.82864 * prints.width, y: prints.minY + 0.33293 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.84550 * prints.width, y: prints.minY + 0.35017 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.82864 * prints.width, y: prints.minY + 0.34342 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.83801 * prints.width, y: prints.minY + 0.32993 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.82864 * prints.width, y: prints.minY + 0.32843 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.83333 * prints.width, y: prints.minY + 0.32768 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.84737 * prints.width, y: prints.minY + 0.32693 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.84362 * prints.width, y: prints.minY + 0.33218 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.84737 * prints.width, y: prints.minY + 0.33068 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.86609 * prints.width, y: prints.minY + 0.33368 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.84737 * prints.width, y: prints.minY + 0.32243 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.85579 * prints.width, y: prints.minY + 0.32543 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.93162 * prints.width, y: prints.minY + 0.33368 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.88949 * prints.width, y: prints.minY + 0.35242 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.90822 * prints.width, y: prints.minY + 0.35242 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.90260 * prints.width, y: prints.minY + 0.25569 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.95877 * prints.width, y: prints.minY + 0.31193 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.95503 * prints.width, y: prints.minY + 0.30218 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.86328 * prints.width, y: prints.minY + 0.21370 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.87639 * prints.width, y: prints.minY + 0.23245 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.85860 * prints.width, y: prints.minY + 0.21370 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.95034 * prints.width, y: prints.minY + 0.29394 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.87171 * prints.width, y: prints.minY + 0.21370 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.92881 * prints.width, y: prints.minY + 0.26619 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.94660 * prints.width, y: prints.minY + 0.32918 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.96158 * prints.width, y: prints.minY + 0.30743 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.96064 * prints.width, y: prints.minY + 0.31268 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.95315 * prints.width, y: prints.minY + 0.37117 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.93069 * prints.width, y: prints.minY + 0.34867 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.93162 * prints.width, y: prints.minY + 0.35017 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.99996 * prints.width, y: prints.minY + 0.53988 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.98498 * prints.width, y: prints.minY + 0.40041 * prints.height), controlPoint2: CGPoint(x: prints.minX + 1.00090 * prints.width, y: prints.minY + 0.45965 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.92413 * prints.width, y: prints.minY + 0.73109 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.99902 * prints.width, y: prints.minY + 0.65686 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.97000 * prints.width, y: prints.minY + 0.73109 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.93537 * prints.width, y: prints.minY + 0.75433 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.91571 * prints.width, y: prints.minY + 0.73109 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.91852 * prints.width, y: prints.minY + 0.73859 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.93724 * prints.width, y: prints.minY + 0.81282 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.96532 * prints.width, y: prints.minY + 0.78283 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.96532 * prints.width, y: prints.minY + 0.79108 * prints.height))
        bezier10Path.addCurve(to: CGPoint(x: prints.minX + 0.83333 * prints.width, y: prints.minY + 0.81657 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.90728 * prints.width, y: prints.minY + 0.83532 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.87826 * prints.width, y: prints.minY + 0.83682 * prints.height))
        bezier10Path.close()
        fillColor.setFill()
        bezier10Path.fill()


        //// Bezier 11 Drawing
        let bezier11Path = UIBezierPath()
        bezier11Path.move(to: CGPoint(x: prints.minX + 0.46823 * prints.width, y: prints.minY + 0.78358 * prints.height))
        bezier11Path.addCurve(to: CGPoint(x: prints.minX + 0.51878 * prints.width, y: prints.minY + 0.74609 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.49350 * prints.width, y: prints.minY + 0.76333 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.51597 * prints.width, y: prints.minY + 0.74609 * prints.height))
        bezier11Path.addCurve(to: CGPoint(x: prints.minX + 0.47759 * prints.width, y: prints.minY + 0.78358 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.52159 * prints.width, y: prints.minY + 0.74609 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.50286 * prints.width, y: prints.minY + 0.76333 * prints.height))
        bezier11Path.addCurve(to: CGPoint(x: prints.minX + 0.42704 * prints.width, y: prints.minY + 0.82107 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.45231 * prints.width, y: prints.minY + 0.80457 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.42984 * prints.width, y: prints.minY + 0.82107 * prints.height))
        bezier11Path.addCurve(to: CGPoint(x: prints.minX + 0.46823 * prints.width, y: prints.minY + 0.78358 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.42423 * prints.width, y: prints.minY + 0.82107 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.44295 * prints.width, y: prints.minY + 0.80457 * prints.height))
        bezier11Path.close()
        fillColor.setFill()
        bezier11Path.fill()


        //// Bezier 12 Drawing
        let bezier12Path = UIBezierPath()
        bezier12Path.move(to: CGPoint(x: prints.minX + 0.86796 * prints.width, y: prints.minY + 0.80232 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.83520 * prints.width, y: prints.minY + 0.78808 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.85298 * prints.width, y: prints.minY + 0.79258 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.83801 * prints.width, y: prints.minY + 0.78583 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.80524 * prints.width, y: prints.minY + 0.76558 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.83239 * prints.width, y: prints.minY + 0.79033 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.81928 * prints.width, y: prints.minY + 0.77983 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.78745 * prints.width, y: prints.minY + 0.56388 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.77154 * prints.width, y: prints.minY + 0.72959 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76686 * prints.width, y: prints.minY + 0.67935 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.77248 * prints.width, y: prints.minY + 0.39066 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.80431 * prints.width, y: prints.minY + 0.46565 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.80150 * prints.width, y: prints.minY + 0.43715 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.67231 * prints.width, y: prints.minY + 0.30668 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.74720 * prints.width, y: prints.minY + 0.35167 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.68822 * prints.width, y: prints.minY + 0.30218 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.66295 * prints.width, y: prints.minY + 0.30218 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.66575 * prints.width, y: prints.minY + 0.30893 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.66107 * prints.width, y: prints.minY + 0.30668 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.49631 * prints.width, y: prints.minY + 0.26319 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.66669 * prints.width, y: prints.minY + 0.28494 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.57495 * prints.width, y: prints.minY + 0.26394 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.31470 * prints.width, y: prints.minY + 0.31118 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.41393 * prints.width, y: prints.minY + 0.26319 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.37274 * prints.width, y: prints.minY + 0.27369 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.17989 * prints.width, y: prints.minY + 0.45890 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.27725 * prints.width, y: prints.minY + 0.33443 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17989 * prints.width, y: prints.minY + 0.44165 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.17521 * prints.width, y: prints.minY + 0.46490 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17989 * prints.width, y: prints.minY + 0.46415 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17708 * prints.width, y: prints.minY + 0.46715 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.12185 * prints.width, y: prints.minY + 0.50689 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.16772 * prints.width, y: prints.minY + 0.45890 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.11717 * prints.width, y: prints.minY + 0.50014 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.05913 * prints.width, y: prints.minY + 0.54363 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.12747 * prints.width, y: prints.minY + 0.51364 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.07691 * prints.width, y: prints.minY + 0.54363 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.00483 * prints.width, y: prints.minY + 0.49414 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.03947 * prints.width, y: prints.minY + 0.54363 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.00483 * prints.width, y: prints.minY + 0.51139 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.05913 * prints.width, y: prints.minY + 0.44315 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.00483 * prints.width, y: prints.minY + 0.48514 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.02636 * prints.width, y: prints.minY + 0.46490 * prints.height))
        bezier12Path.addLine(to: CGPoint(x: prints.minX + 0.11249 * prints.width, y: prints.minY + 0.40716 * prints.height))
        bezier12Path.addLine(to: CGPoint(x: prints.minX + 0.06287 * prints.width, y: prints.minY + 0.44465 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.03104 * prints.width, y: prints.minY + 0.52338 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.01138 * prints.width, y: prints.minY + 0.48364 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.00296 * prints.width, y: prints.minY + 0.50314 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.09845 * prints.width, y: prints.minY + 0.52039 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.05351 * prints.width, y: prints.minY + 0.53988 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.07036 * prints.width, y: prints.minY + 0.53913 * prints.height))
        bezier12Path.addLine(to: CGPoint(x: prints.minX + 0.12185 * prints.width, y: prints.minY + 0.50464 * prints.height))
        bezier12Path.addLine(to: CGPoint(x: prints.minX + 0.09096 * prints.width, y: prints.minY + 0.51814 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.02543 * prints.width, y: prints.minY + 0.49714 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.05445 * prints.width, y: prints.minY + 0.53463 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.03011 * prints.width, y: prints.minY + 0.52638 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.05913 * prints.width, y: prints.minY + 0.45965 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.02355 * prints.width, y: prints.minY + 0.48289 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.03104 * prints.width, y: prints.minY + 0.47465 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.14900 * prints.width, y: prints.minY + 0.37567 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.08066 * prints.width, y: prints.minY + 0.44765 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.11810 * prints.width, y: prints.minY + 0.41316 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.34933 * prints.width, y: prints.minY + 0.22270 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.21453 * prints.width, y: prints.minY + 0.29768 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.27819 * prints.width, y: prints.minY + 0.24895 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.50099 * prints.width, y: prints.minY + 0.20246 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.39614 * prints.width, y: prints.minY + 0.20470 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.41393 * prints.width, y: prints.minY + 0.20246 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.66295 * prints.width, y: prints.minY + 0.22645 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.59180 * prints.width, y: prints.minY + 0.20246 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.60397 * prints.width, y: prints.minY + 0.20396 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.77435 * prints.width, y: prints.minY + 0.29019 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.70226 * prints.width, y: prints.minY + 0.24145 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.74439 * prints.width, y: prints.minY + 0.26544 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.81179 * prints.width, y: prints.minY + 0.31418 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.80056 * prints.width, y: prints.minY + 0.31193 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.81741 * prints.width, y: prints.minY + 0.32243 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.80805 * prints.width, y: prints.minY + 0.29244 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.80618 * prints.width, y: prints.minY + 0.30518 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.80431 * prints.width, y: prints.minY + 0.29543 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.80150 * prints.width, y: prints.minY + 0.29244 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.81179 * prints.width, y: prints.minY + 0.28869 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.80899 * prints.width, y: prints.minY + 0.28869 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.79588 * prints.width, y: prints.minY + 0.28869 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.79214 * prints.width, y: prints.minY + 0.29693 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.79026 * prints.width, y: prints.minY + 0.29543 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.79120 * prints.width, y: prints.minY + 0.28494 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.80150 * prints.width, y: prints.minY + 0.28194 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.79962 * prints.width, y: prints.minY + 0.28044 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.78558 * prints.width, y: prints.minY + 0.28194 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.78277 * prints.width, y: prints.minY + 0.28944 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.78090 * prints.width, y: prints.minY + 0.28794 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.82396 * prints.width, y: prints.minY + 0.31418 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.79682 * prints.width, y: prints.minY + 0.26769 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.82677 * prints.width, y: prints.minY + 0.29319 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.84830 * prints.width, y: prints.minY + 0.37492 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.82209 * prints.width, y: prints.minY + 0.32393 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.83333 * prints.width, y: prints.minY + 0.35167 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.86141 * prints.width, y: prints.minY + 0.59237 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.88013 * prints.width, y: prints.minY + 0.42591 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.88388 * prints.width, y: prints.minY + 0.47615 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.86515 * prints.width, y: prints.minY + 0.69735 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.84830 * prints.width, y: prints.minY + 0.66135 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.84924 * prints.width, y: prints.minY + 0.66810 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.91290 * prints.width, y: prints.minY + 0.75583 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.87452 * prints.width, y: prints.minY + 0.71384 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.89605 * prints.width, y: prints.minY + 0.74084 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.91383 * prints.width, y: prints.minY + 0.81282 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.94473 * prints.width, y: prints.minY + 0.78508 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.94473 * prints.width, y: prints.minY + 0.80007 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.86796 * prints.width, y: prints.minY + 0.80232 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.89886 * prints.width, y: prints.minY + 0.81957 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.89043 * prints.width, y: prints.minY + 0.81732 * prints.height))
        bezier12Path.close()
        bezier12Path.move(to: CGPoint(x: prints.minX + 0.81179 * prints.width, y: prints.minY + 0.75058 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.78277 * prints.width, y: prints.minY + 0.72059 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.79775 * prints.width, y: prints.minY + 0.73259 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.78465 * prints.width, y: prints.minY + 0.71909 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.83333 * prints.width, y: prints.minY + 0.78358 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.77903 * prints.width, y: prints.minY + 0.72359 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.82677 * prints.width, y: prints.minY + 0.78358 * prints.height))
        bezier12Path.addCurve(to: CGPoint(x: prints.minX + 0.81179 * prints.width, y: prints.minY + 0.75058 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.83520 * prints.width, y: prints.minY + 0.78358 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.82584 * prints.width, y: prints.minY + 0.76858 * prints.height))
        bezier12Path.close()
        fillColor.setFill()
        bezier12Path.fill()


        //// Bezier 13 Drawing
        let bezier13Path = UIBezierPath()
        bezier13Path.move(to: CGPoint(x: prints.minX + 0.88669 * prints.width, y: prints.minY + 0.71984 * prints.height))
        bezier13Path.addCurve(to: CGPoint(x: prints.minX + 0.89043 * prints.width, y: prints.minY + 0.64636 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.88107 * prints.width, y: prints.minY + 0.71159 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.88294 * prints.width, y: prints.minY + 0.68535 * prints.height))
        bezier13Path.addCurve(to: CGPoint(x: prints.minX + 0.90166 * prints.width, y: prints.minY + 0.52863 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.89792 * prints.width, y: prints.minY + 0.61262 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.90260 * prints.width, y: prints.minY + 0.55938 * prints.height))
        bezier13Path.addCurve(to: CGPoint(x: prints.minX + 0.89324 * prints.width, y: prints.minY + 0.55113 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.90073 * prints.width, y: prints.minY + 0.47390 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.90073 * prints.width, y: prints.minY + 0.47390 * prints.height))
        bezier13Path.addCurve(to: CGPoint(x: prints.minX + 0.87732 * prints.width, y: prints.minY + 0.66360 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.88949 * prints.width, y: prints.minY + 0.59462 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.88201 * prints.width, y: prints.minY + 0.64486 * prints.height))
        bezier13Path.addLine(to: CGPoint(x: prints.minX + 0.86796 * prints.width, y: prints.minY + 0.69735 * prints.height))
        bezier13Path.addLine(to: CGPoint(x: prints.minX + 0.86703 * prints.width, y: prints.minY + 0.65985 * prints.height))
        bezier13Path.addCurve(to: CGPoint(x: prints.minX + 0.88013 * prints.width, y: prints.minY + 0.53688 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.86703 * prints.width, y: prints.minY + 0.63961 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.87264 * prints.width, y: prints.minY + 0.58412 * prints.height))
        bezier13Path.addCurve(to: CGPoint(x: prints.minX + 0.88388 * prints.width, y: prints.minY + 0.42591 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.89137 * prints.width, y: prints.minY + 0.47090 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.89230 * prints.width, y: prints.minY + 0.44465 * prints.height))
        bezier13Path.addCurve(to: CGPoint(x: prints.minX + 0.87826 * prints.width, y: prints.minY + 0.38542 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.87826 * prints.width, y: prints.minY + 0.41166 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.87545 * prints.width, y: prints.minY + 0.39366 * prints.height))
        bezier13Path.addCurve(to: CGPoint(x: prints.minX + 0.87358 * prints.width, y: prints.minY + 0.37567 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.88107 * prints.width, y: prints.minY + 0.37717 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.87920 * prints.width, y: prints.minY + 0.37267 * prints.height))
        bezier13Path.addCurve(to: CGPoint(x: prints.minX + 0.84737 * prints.width, y: prints.minY + 0.35242 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.86422 * prints.width, y: prints.minY + 0.38092 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.84737 * prints.width, y: prints.minY + 0.36592 * prints.height))
        bezier13Path.addCurve(to: CGPoint(x: prints.minX + 0.85673 * prints.width, y: prints.minY + 0.35617 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.84737 * prints.width, y: prints.minY + 0.34867 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.85205 * prints.width, y: prints.minY + 0.35017 * prints.height))
        bezier13Path.addCurve(to: CGPoint(x: prints.minX + 0.90073 * prints.width, y: prints.minY + 0.36742 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.86141 * prints.width, y: prints.minY + 0.36292 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.87920 * prints.width, y: prints.minY + 0.36742 * prints.height))
        bezier13Path.addCurve(to: CGPoint(x: prints.minX + 0.95409 * prints.width, y: prints.minY + 0.39741 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.93256 * prints.width, y: prints.minY + 0.36742 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.93817 * prints.width, y: prints.minY + 0.37042 * prints.height))
        bezier13Path.addCurve(to: CGPoint(x: prints.minX + 0.94005 * prints.width, y: prints.minY + 0.70859 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.99247 * prints.width, y: prints.minY + 0.46040 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.98217 * prints.width, y: prints.minY + 0.69060 * prints.height))
        bezier13Path.addCurve(to: CGPoint(x: prints.minX + 0.90166 * prints.width, y: prints.minY + 0.70784 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.92788 * prints.width, y: prints.minY + 0.71459 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.91571 * prints.width, y: prints.minY + 0.71384 * prints.height))
        bezier13Path.addCurve(to: CGPoint(x: prints.minX + 0.89324 * prints.width, y: prints.minY + 0.71159 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.88201 * prints.width, y: prints.minY + 0.69960 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.88107 * prints.width, y: prints.minY + 0.69960 * prints.height))
        bezier13Path.addCurve(to: CGPoint(x: prints.minX + 0.90073 * prints.width, y: prints.minY + 0.72809 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.90073 * prints.width, y: prints.minY + 0.71834 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.90354 * prints.width, y: prints.minY + 0.72584 * prints.height))
        bezier13Path.addCurve(to: CGPoint(x: prints.minX + 0.88669 * prints.width, y: prints.minY + 0.71984 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.89792 * prints.width, y: prints.minY + 0.73034 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.89230 * prints.width, y: prints.minY + 0.72659 * prints.height))
        bezier13Path.close()
        fillColor.setFill()
        bezier13Path.fill()


        //// Bezier 14 Drawing
        let bezier14Path = UIBezierPath()
        bezier14Path.move(to: CGPoint(x: prints.minX + 0.63580 * prints.width, y: prints.minY + 0.71009 * prints.height))
        bezier14Path.addCurve(to: CGPoint(x: prints.minX + 0.63393 * prints.width, y: prints.minY + 0.67935 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.62924 * prints.width, y: prints.minY + 0.70185 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.62831 * prints.width, y: prints.minY + 0.69060 * prints.height))
        bezier14Path.addCurve(to: CGPoint(x: prints.minX + 0.64048 * prints.width, y: prints.minY + 0.63811 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.63767 * prints.width, y: prints.minY + 0.66960 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64141 * prints.width, y: prints.minY + 0.65086 * prints.height))
        bezier14Path.addCurve(to: CGPoint(x: prints.minX + 0.64984 * prints.width, y: prints.minY + 0.59612 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.63954 * prints.width, y: prints.minY + 0.62536 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64329 * prints.width, y: prints.minY + 0.60662 * prints.height))
        bezier14Path.addCurve(to: CGPoint(x: prints.minX + 0.65358 * prints.width, y: prints.minY + 0.62236 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.65827 * prints.width, y: prints.minY + 0.58112 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.65827 * prints.width, y: prints.minY + 0.58637 * prints.height))
        bezier14Path.addCurve(to: CGPoint(x: prints.minX + 0.64890 * prints.width, y: prints.minY + 0.69585 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.64984 * prints.width, y: prints.minY + 0.64711 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64703 * prints.width, y: prints.minY + 0.68010 * prints.height))
        bezier14Path.addCurve(to: CGPoint(x: prints.minX + 0.63580 * prints.width, y: prints.minY + 0.71009 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.65078 * prints.width, y: prints.minY + 0.72734 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64984 * prints.width, y: prints.minY + 0.72884 * prints.height))
        bezier14Path.close()
        fillColor.setFill()
        bezier14Path.fill()


        //// Bezier 15 Drawing
        let bezier15Path = UIBezierPath()
        bezier15Path.move(to: CGPoint(x: prints.minX + 0.20610 * prints.width, y: prints.minY + 0.58112 * prints.height))
        bezier15Path.addCurve(to: CGPoint(x: prints.minX + 0.24729 * prints.width, y: prints.minY + 0.55113 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.22576 * prints.width, y: prints.minY + 0.56463 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.24449 * prints.width, y: prints.minY + 0.55113 * prints.height))
        bezier15Path.addCurve(to: CGPoint(x: prints.minX + 0.21546 * prints.width, y: prints.minY + 0.58112 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.25010 * prints.width, y: prints.minY + 0.55113 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.23512 * prints.width, y: prints.minY + 0.56463 * prints.height))
        bezier15Path.addCurve(to: CGPoint(x: prints.minX + 0.17427 * prints.width, y: prints.minY + 0.61112 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.19581 * prints.width, y: prints.minY + 0.59762 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17708 * prints.width, y: prints.minY + 0.61112 * prints.height))
        bezier15Path.addCurve(to: CGPoint(x: prints.minX + 0.20610 * prints.width, y: prints.minY + 0.58112 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17147 * prints.width, y: prints.minY + 0.61112 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.18644 * prints.width, y: prints.minY + 0.59762 * prints.height))
        bezier15Path.close()
        fillColor.setFill()
        bezier15Path.fill()


        //// Bezier 16 Drawing
        let bezier16Path = UIBezierPath()
        bezier16Path.move(to: CGPoint(x: prints.minX + 0.62176 * prints.width, y: prints.minY + 0.40341 * prints.height))
        bezier16Path.addCurve(to: CGPoint(x: prints.minX + 0.62550 * prints.width, y: prints.minY + 0.40041 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60959 * prints.width, y: prints.minY + 0.39141 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.61052 * prints.width, y: prints.minY + 0.39066 * prints.height))
        bezier16Path.addCurve(to: CGPoint(x: prints.minX + 0.63767 * prints.width, y: prints.minY + 0.41616 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.64048 * prints.width, y: prints.minY + 0.41016 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64516 * prints.width, y: prints.minY + 0.41616 * prints.height))
        bezier16Path.addCurve(to: CGPoint(x: prints.minX + 0.62176 * prints.width, y: prints.minY + 0.40341 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.63580 * prints.width, y: prints.minY + 0.41616 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.62831 * prints.width, y: prints.minY + 0.41016 * prints.height))
        bezier16Path.close()
        fillColor.setFill()
        bezier16Path.fill()


        //// Bezier 17 Drawing
        let bezier17Path = UIBezierPath()
        bezier17Path.move(to: CGPoint(x: prints.minX + 0.11436 * prints.width, y: prints.minY + 0.39591 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.10687 * prints.width, y: prints.minY + 0.39216 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.11904 * prints.width, y: prints.minY + 0.38467 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.11717 * prints.width, y: prints.minY + 0.38392 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.07504 * prints.width, y: prints.minY + 0.40116 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.10032 * prints.width, y: prints.minY + 0.39666 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.08534 * prints.width, y: prints.minY + 0.40116 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.01419 * prints.width, y: prints.minY + 0.35467 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.05257 * prints.width, y: prints.minY + 0.40116 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.01419 * prints.width, y: prints.minY + 0.37192 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.11904 * prints.width, y: prints.minY + 0.23170 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.01419 * prints.width, y: prints.minY + 0.34192 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.10032 * prints.width, y: prints.minY + 0.24070 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.12091 * prints.width, y: prints.minY + 0.23695 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.12840 * prints.width, y: prints.minY + 0.22720 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.12840 * prints.width, y: prints.minY + 0.22870 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.02355 * prints.width, y: prints.minY + 0.35617 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.06474 * prints.width, y: prints.minY + 0.29543 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.02355 * prints.width, y: prints.minY + 0.34492 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.07317 * prints.width, y: prints.minY + 0.39366 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.02355 * prints.width, y: prints.minY + 0.37192 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.05257 * prints.width, y: prints.minY + 0.39366 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.10687 * prints.width, y: prints.minY + 0.37942 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.08159 * prints.width, y: prints.minY + 0.39366 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.09751 * prints.width, y: prints.minY + 0.38691 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.13121 * prints.width, y: prints.minY + 0.36967 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.11717 * prints.width, y: prints.minY + 0.37117 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.12747 * prints.width, y: prints.minY + 0.36742 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.13121 * prints.width, y: prints.minY + 0.35992 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.13402 * prints.width, y: prints.minY + 0.37267 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.13402 * prints.width, y: prints.minY + 0.36817 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.13589 * prints.width, y: prints.minY + 0.35617 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.12559 * prints.width, y: prints.minY + 0.34717 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.12653 * prints.width, y: prints.minY + 0.34642 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.14151 * prints.width, y: prints.minY + 0.35392 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.14525 * prints.width, y: prints.minY + 0.36592 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.14619 * prints.width, y: prints.minY + 0.36517 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.14525 * prints.width, y: prints.minY + 0.34492 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.13870 * prints.width, y: prints.minY + 0.34567 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.13964 * prints.width, y: prints.minY + 0.34192 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.15368 * prints.width, y: prints.minY + 0.34342 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.15087 * prints.width, y: prints.minY + 0.34792 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.15461 * prints.width, y: prints.minY + 0.34717 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.16585 * prints.width, y: prints.minY + 0.32318 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.14993 * prints.width, y: prints.minY + 0.32768 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.15555 * prints.width, y: prints.minY + 0.31793 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.16866 * prints.width, y: prints.minY + 0.31868 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17240 * prints.width, y: prints.minY + 0.32693 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17334 * prints.width, y: prints.minY + 0.32543 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.17147 * prints.width, y: prints.minY + 0.31418 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.16398 * prints.width, y: prints.minY + 0.31193 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.16491 * prints.width, y: prints.minY + 0.31043 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.17708 * prints.width, y: prints.minY + 0.30893 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17895 * prints.width, y: prints.minY + 0.31718 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.18083 * prints.width, y: prints.minY + 0.31568 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.18176 * prints.width, y: prints.minY + 0.29244 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17427 * prints.width, y: prints.minY + 0.30293 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17615 * prints.width, y: prints.minY + 0.29543 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.19206 * prints.width, y: prints.minY + 0.29768 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18738 * prints.width, y: prints.minY + 0.29019 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.19206 * prints.width, y: prints.minY + 0.29244 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.20049 * prints.width, y: prints.minY + 0.29618 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.19206 * prints.width, y: prints.minY + 0.30518 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.19487 * prints.width, y: prints.minY + 0.30443 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.20423 * prints.width, y: prints.minY + 0.27819 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.20610 * prints.width, y: prints.minY + 0.29019 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.20704 * prints.width, y: prints.minY + 0.28269 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.21078 * prints.width, y: prints.minY + 0.27744 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.20049 * prints.width, y: prints.minY + 0.27444 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.20329 * prints.width, y: prints.minY + 0.27369 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.21546 * prints.width, y: prints.minY + 0.27369 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.21921 * prints.width, y: prints.minY + 0.28194 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.22108 * prints.width, y: prints.minY + 0.28044 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.22015 * prints.width, y: prints.minY + 0.26994 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.20985 * prints.width, y: prints.minY + 0.26694 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.21172 * prints.width, y: prints.minY + 0.26544 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.22483 * prints.width, y: prints.minY + 0.26619 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.22857 * prints.width, y: prints.minY + 0.27444 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.23044 * prints.width, y: prints.minY + 0.27294 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.22951 * prints.width, y: prints.minY + 0.26244 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.21921 * prints.width, y: prints.minY + 0.25944 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.22108 * prints.width, y: prints.minY + 0.25794 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.23419 * prints.width, y: prints.minY + 0.25869 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.23793 * prints.width, y: prints.minY + 0.26694 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.23980 * prints.width, y: prints.minY + 0.26544 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.23512 * prints.width, y: prints.minY + 0.25344 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.22951 * prints.width, y: prints.minY + 0.25269 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.23044 * prints.width, y: prints.minY + 0.25044 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.25759 * prints.width, y: prints.minY + 0.25044 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.24074 * prints.width, y: prints.minY + 0.25569 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.25010 * prints.width, y: prints.minY + 0.25494 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.25946 * prints.width, y: prints.minY + 0.24370 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.26789 * prints.width, y: prints.minY + 0.24595 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.26883 * prints.width, y: prints.minY + 0.24370 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.25291 * prints.width, y: prints.minY + 0.23545 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.25291 * prints.width, y: prints.minY + 0.24370 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.25010 * prints.width, y: prints.minY + 0.23995 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.27257 * prints.width, y: prints.minY + 0.23170 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.25666 * prints.width, y: prints.minY + 0.23095 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.26508 * prints.width, y: prints.minY + 0.22945 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.28287 * prints.width, y: prints.minY + 0.22720 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.28006 * prints.width, y: prints.minY + 0.23395 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.28474 * prints.width, y: prints.minY + 0.23170 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.29410 * prints.width, y: prints.minY + 0.21520 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.28193 * prints.width, y: prints.minY + 0.22270 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.28661 * prints.width, y: prints.minY + 0.21745 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.30065 * prints.width, y: prints.minY + 0.22045 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.30159 * prints.width, y: prints.minY + 0.21295 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.30440 * prints.width, y: prints.minY + 0.21520 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.30908 * prints.width, y: prints.minY + 0.22345 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.29597 * prints.width, y: prints.minY + 0.22570 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.29972 * prints.width, y: prints.minY + 0.22720 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.31189 * prints.width, y: prints.minY + 0.21220 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.32219 * prints.width, y: prints.minY + 0.21970 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.32219 * prints.width, y: prints.minY + 0.21745 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.32312 * prints.width, y: prints.minY + 0.20995 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.30346 * prints.width, y: prints.minY + 0.20770 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.30721 * prints.width, y: prints.minY + 0.20695 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.33248 * prints.width, y: prints.minY + 0.20620 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.34185 * prints.width, y: prints.minY + 0.21370 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.34372 * prints.width, y: prints.minY + 0.21295 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.33997 * prints.width, y: prints.minY + 0.20096 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.32125 * prints.width, y: prints.minY + 0.19871 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.32219 * prints.width, y: prints.minY + 0.19796 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.35589 * prints.width, y: prints.minY + 0.19871 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.35121 * prints.width, y: prints.minY + 0.20321 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.35870 * prints.width, y: prints.minY + 0.20171 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.52908 * prints.width, y: prints.minY + 0.17846 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.34653 * prints.width, y: prints.minY + 0.18671 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.45699 * prints.width, y: prints.minY + 0.17396 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.68261 * prints.width, y: prints.minY + 0.21445 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60397 * prints.width, y: prints.minY + 0.18296 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.69197 * prints.width, y: prints.minY + 0.20321 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.69384 * prints.width, y: prints.minY + 0.21595 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.67980 * prints.width, y: prints.minY + 0.21820 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.68541 * prints.width, y: prints.minY + 0.21895 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.70320 * prints.width, y: prints.minY + 0.22045 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.70507 * prints.width, y: prints.minY + 0.21295 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.70788 * prints.width, y: prints.minY + 0.21370 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.70414 * prints.width, y: prints.minY + 0.22795 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.69946 * prints.width, y: prints.minY + 0.22495 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.69946 * prints.width, y: prints.minY + 0.22870 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.72941 * prints.width, y: prints.minY + 0.23770 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.72380 * prints.width, y: prints.minY + 0.22495 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.73597 * prints.width, y: prints.minY + 0.22945 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.73503 * prints.width, y: prints.minY + 0.23995 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.72473 * prints.width, y: prints.minY + 0.24295 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.72660 * prints.width, y: prints.minY + 0.24370 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.74065 * prints.width, y: prints.minY + 0.24220 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.74346 * prints.width, y: prints.minY + 0.23620 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.74533 * prints.width, y: prints.minY + 0.23695 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.75001 * prints.width, y: prints.minY + 0.24595 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.73597 * prints.width, y: prints.minY + 0.24820 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.73971 * prints.width, y: prints.minY + 0.24970 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.75843 * prints.width, y: prints.minY + 0.25119 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.76218 * prints.width, y: prints.minY + 0.24220 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76405 * prints.width, y: prints.minY + 0.24370 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.76311 * prints.width, y: prints.minY + 0.25494 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.75282 * prints.width, y: prints.minY + 0.25794 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.75469 * prints.width, y: prints.minY + 0.25944 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.76967 * prints.width, y: prints.minY + 0.25644 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.77060 * prints.width, y: prints.minY + 0.25119 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.77341 * prints.width, y: prints.minY + 0.25194 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.77716 * prints.width, y: prints.minY + 0.26394 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.76686 * prints.width, y: prints.minY + 0.26019 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76967 * prints.width, y: prints.minY + 0.26394 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.71256 * prints.width, y: prints.minY + 0.21445 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.79962 * prints.width, y: prints.minY + 0.26394 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76686 * prints.width, y: prints.minY + 0.23920 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.47384 * prints.width, y: prints.minY + 0.17096 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.63486 * prints.width, y: prints.minY + 0.17921 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.56559 * prints.width, y: prints.minY + 0.16646 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.13870 * prints.width, y: prints.minY + 0.33218 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.32687 * prints.width, y: prints.minY + 0.17771 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.24355 * prints.width, y: prints.minY + 0.21820 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.04415 * prints.width, y: prints.minY + 0.37717 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.08908 * prints.width, y: prints.minY + 0.38542 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.06755 * prints.width, y: prints.minY + 0.39591 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.07223 * prints.width, y: prints.minY + 0.30143 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.02636 * prints.width, y: prints.minY + 0.36292 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.03104 * prints.width, y: prints.minY + 0.35092 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.26695 * prints.width, y: prints.minY + 0.14997 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.12653 * prints.width, y: prints.minY + 0.23695 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.20704 * prints.width, y: prints.minY + 0.17396 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.71163 * prints.width, y: prints.minY + 0.14547 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.41112 * prints.width, y: prints.minY + 0.09148 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.57027 * prints.width, y: prints.minY + 0.08998 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.93630 * prints.width, y: prints.minY + 0.31793 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.82584 * prints.width, y: prints.minY + 0.19121 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.94941 * prints.width, y: prints.minY + 0.28569 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.86890 * prints.width, y: prints.minY + 0.32468 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.92694 * prints.width, y: prints.minY + 0.34192 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.89605 * prints.width, y: prints.minY + 0.34492 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.83988 * prints.width, y: prints.minY + 0.30893 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.85673 * prints.width, y: prints.minY + 0.31568 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.84269 * prints.width, y: prints.minY + 0.30818 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.83613 * prints.width, y: prints.minY + 0.30068 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.83613 * prints.width, y: prints.minY + 0.30968 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.83426 * prints.width, y: prints.minY + 0.30593 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.78933 * prints.width, y: prints.minY + 0.27219 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.83988 * prints.width, y: prints.minY + 0.28494 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.80243 * prints.width, y: prints.minY + 0.26169 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.74346 * prints.width, y: prints.minY + 0.25794 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.78184 * prints.width, y: prints.minY + 0.27819 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76967 * prints.width, y: prints.minY + 0.27519 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.65358 * prints.width, y: prints.minY + 0.21520 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.72473 * prints.width, y: prints.minY + 0.24595 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.68354 * prints.width, y: prints.minY + 0.22645 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.50099 * prints.width, y: prints.minY + 0.19496 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60490 * prints.width, y: prints.minY + 0.19721 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.58805 * prints.width, y: prints.minY + 0.19496 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.34091 * prints.width, y: prints.minY + 0.21820 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.41018 * prints.width, y: prints.minY + 0.19496 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.39801 * prints.width, y: prints.minY + 0.19646 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.14806 * prints.width, y: prints.minY + 0.36517 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.27070 * prints.width, y: prints.minY + 0.24520 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.19768 * prints.width, y: prints.minY + 0.29993 * prints.height))
        bezier17Path.addCurve(to: CGPoint(x: prints.minX + 0.11436 * prints.width, y: prints.minY + 0.39591 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.11342 * prints.width, y: prints.minY + 0.41016 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.10406 * prints.width, y: prints.minY + 0.41841 * prints.height))
        bezier17Path.close()
        fillColor.setFill()
        bezier17Path.fill()


        //// Bezier 18 Drawing
        let bezier18Path = UIBezierPath()
        bezier18Path.move(to: CGPoint(x: prints.minX + 0.70601 * prints.width, y: prints.minY + 0.33593 * prints.height))
        bezier18Path.addCurve(to: CGPoint(x: prints.minX + 0.70975 * prints.width, y: prints.minY + 0.33293 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.69384 * prints.width, y: prints.minY + 0.32393 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.69478 * prints.width, y: prints.minY + 0.32318 * prints.height))
        bezier18Path.addCurve(to: CGPoint(x: prints.minX + 0.72192 * prints.width, y: prints.minY + 0.34867 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.72473 * prints.width, y: prints.minY + 0.34267 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.72941 * prints.width, y: prints.minY + 0.34867 * prints.height))
        bezier18Path.addCurve(to: CGPoint(x: prints.minX + 0.70601 * prints.width, y: prints.minY + 0.33593 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.72005 * prints.width, y: prints.minY + 0.34867 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.71256 * prints.width, y: prints.minY + 0.34267 * prints.height))
        bezier18Path.close()
        fillColor.setFill()
        bezier18Path.fill()


        //// Bezier 19 Drawing
        let bezier19Path = UIBezierPath()
        bezier19Path.move(to: CGPoint(x: prints.minX + 0.11717 * prints.width, y: prints.minY + 0.22270 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.06100 * prints.width, y: prints.minY + 0.17246 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.09189 * prints.width, y: prints.minY + 0.21670 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.06100 * prints.width, y: prints.minY + 0.18896 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.20610 * prints.width, y: prints.minY + 0.05999 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.06100 * prints.width, y: prints.minY + 0.15147 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.13496 * prints.width, y: prints.minY + 0.09448 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.49163 * prints.width, y: prints.minY + 0.00000 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.29410 * prints.width, y: prints.minY + 0.01800 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.37648 * prints.width, y: prints.minY + 0.00075 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.74252 * prints.width, y: prints.minY + 0.03824 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.59648 * prints.width, y: prints.minY + 0.00000 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.66201 * prints.width, y: prints.minY + 0.01050 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.90915 * prints.width, y: prints.minY + 0.13572 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.81273 * prints.width, y: prints.minY + 0.06299 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.90260 * prints.width, y: prints.minY + 0.11547 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.86515 * prints.width, y: prints.minY + 0.18896 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.91664 * prints.width, y: prints.minY + 0.15971 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.89698 * prints.width, y: prints.minY + 0.18371 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.84924 * prints.width, y: prints.minY + 0.20470 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.84175 * prints.width, y: prints.minY + 0.19271 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.83988 * prints.width, y: prints.minY + 0.19496 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.81460 * prints.width, y: prints.minY + 0.18746 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.85579 * prints.width, y: prints.minY + 0.21070 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.84081 * prints.width, y: prints.minY + 0.20321 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.56933 * prints.width, y: prints.minY + 0.10123 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.74626 * prints.width, y: prints.minY + 0.14547 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64610 * prints.width, y: prints.minY + 0.11023 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.17802 * prints.width, y: prints.minY + 0.19271 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.43172 * prints.width, y: prints.minY + 0.08398 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.27912 * prints.width, y: prints.minY + 0.11997 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.11717 * prints.width, y: prints.minY + 0.22270 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.15181 * prints.width, y: prints.minY + 0.21145 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.12466 * prints.width, y: prints.minY + 0.22495 * prints.height))
        bezier19Path.close()
        bezier19Path.move(to: CGPoint(x: prints.minX + 0.17521 * prints.width, y: prints.minY + 0.17996 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.52908 * prints.width, y: prints.minY + 0.08848 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.26508 * prints.width, y: prints.minY + 0.11173 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.38210 * prints.width, y: prints.minY + 0.08173 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.72941 * prints.width, y: prints.minY + 0.13197 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.61988 * prints.width, y: prints.minY + 0.09223 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.74065 * prints.width, y: prints.minY + 0.11847 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.74065 * prints.width, y: prints.minY + 0.13347 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.72660 * prints.width, y: prints.minY + 0.13572 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.73222 * prints.width, y: prints.minY + 0.13647 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.75001 * prints.width, y: prints.minY + 0.13722 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.75188 * prints.width, y: prints.minY + 0.13047 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.75469 * prints.width, y: prints.minY + 0.13122 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.75843 * prints.width, y: prints.minY + 0.14172 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.74533 * prints.width, y: prints.minY + 0.14322 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.74814 * prints.width, y: prints.minY + 0.14472 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.77060 * prints.width, y: prints.minY + 0.14697 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.76780 * prints.width, y: prints.minY + 0.13872 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.77248 * prints.width, y: prints.minY + 0.14022 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.78465 * prints.width, y: prints.minY + 0.15522 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.76873 * prints.width, y: prints.minY + 0.15372 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.77435 * prints.width, y: prints.minY + 0.15672 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.79869 * prints.width, y: prints.minY + 0.16271 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.79401 * prints.width, y: prints.minY + 0.15372 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.79962 * prints.width, y: prints.minY + 0.15672 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.80805 * prints.width, y: prints.minY + 0.17321 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.79682 * prints.width, y: prints.minY + 0.16721 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.80150 * prints.width, y: prints.minY + 0.17246 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.82958 * prints.width, y: prints.minY + 0.17546 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.81367 * prints.width, y: prints.minY + 0.17396 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.82396 * prints.width, y: prints.minY + 0.17471 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.83333 * prints.width, y: prints.minY + 0.18296 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.83426 * prints.width, y: prints.minY + 0.17546 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.83707 * prints.width, y: prints.minY + 0.17921 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.85860 * prints.width, y: prints.minY + 0.18371 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.83052 * prints.width, y: prints.minY + 0.18746 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.83988 * prints.width, y: prints.minY + 0.18746 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.87826 * prints.width, y: prints.minY + 0.11472 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.91009 * prints.width, y: prints.minY + 0.17171 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.91758 * prints.width, y: prints.minY + 0.14472 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.68354 * prints.width, y: prints.minY + 0.02849 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.83239 * prints.width, y: prints.minY + 0.08098 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76031 * prints.width, y: prints.minY + 0.04874 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.32780 * prints.width, y: prints.minY + 0.02399 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.58056 * prints.width, y: prints.minY + 0.00150 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.42516 * prints.width, y: prints.minY + 0.00000 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.07036 * prints.width, y: prints.minY + 0.17171 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.21453 * prints.width, y: prints.minY + 0.05249 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.07036 * prints.width, y: prints.minY + 0.13497 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.11530 * prints.width, y: prints.minY + 0.21370 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.07036 * prints.width, y: prints.minY + 0.18971 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.09657 * prints.width, y: prints.minY + 0.21370 * prints.height))
        bezier19Path.addCurve(to: CGPoint(x: prints.minX + 0.17521 * prints.width, y: prints.minY + 0.17996 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.12279 * prints.width, y: prints.minY + 0.21370 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.14993 * prints.width, y: prints.minY + 0.19871 * prints.height))
        bezier19Path.close()
        fillColor.setFill()
        bezier19Path.fill()


        //// Bezier 20 Drawing
        let bezier20Path = UIBezierPath()
        bezier20Path.move(to: CGPoint(x: prints.minX + 0.09096 * prints.width, y: prints.minY + 0.19721 * prints.height))
        bezier20Path.addCurve(to: CGPoint(x: prints.minX + 0.12559 * prints.width, y: prints.minY + 0.12372 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.06942 * prints.width, y: prints.minY + 0.17996 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.07972 * prints.width, y: prints.minY + 0.15822 * prints.height))
        bezier20Path.addCurve(to: CGPoint(x: prints.minX + 0.33716 * prints.width, y: prints.minY + 0.02924 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17989 * prints.width, y: prints.minY + 0.08323 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.25853 * prints.width, y: prints.minY + 0.04799 * prints.height))
        bezier20Path.addCurve(to: CGPoint(x: prints.minX + 0.64984 * prints.width, y: prints.minY + 0.02849 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.41299 * prints.width, y: prints.minY + 0.01125 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.56839 * prints.width, y: prints.minY + 0.01125 * prints.height))
        bezier20Path.addCurve(to: CGPoint(x: prints.minX + 0.89230 * prints.width, y: prints.minY + 0.14847 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.76967 * prints.width, y: prints.minY + 0.05474 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.89792 * prints.width, y: prints.minY + 0.11772 * prints.height))
        bezier20Path.addCurve(to: CGPoint(x: prints.minX + 0.83801 * prints.width, y: prints.minY + 0.17021 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.88762 * prints.width, y: prints.minY + 0.17096 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.86141 * prints.width, y: prints.minY + 0.18221 * prints.height))
        bezier20Path.addCurve(to: CGPoint(x: prints.minX + 0.80899 * prints.width, y: prints.minY + 0.16496 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.82677 * prints.width, y: prints.minY + 0.16496 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.81460 * prints.width, y: prints.minY + 0.16271 * prints.height))
        bezier20Path.addCurve(to: CGPoint(x: prints.minX + 0.80243 * prints.width, y: prints.minY + 0.15971 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.80431 * prints.width, y: prints.minY + 0.16796 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.80150 * prints.width, y: prints.minY + 0.16571 * prints.height))
        bezier20Path.addCurve(to: CGPoint(x: prints.minX + 0.78933 * prints.width, y: prints.minY + 0.15072 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.80431 * prints.width, y: prints.minY + 0.15447 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.79775 * prints.width, y: prints.minY + 0.15072 * prints.height))
        bezier20Path.addCurve(to: CGPoint(x: prints.minX + 0.77716 * prints.width, y: prints.minY + 0.14547 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.77997 * prints.width, y: prints.minY + 0.15147 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.77528 * prints.width, y: prints.minY + 0.14922 * prints.height))
        bezier20Path.addCurve(to: CGPoint(x: prints.minX + 0.63486 * prints.width, y: prints.minY + 0.09073 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.78465 * prints.width, y: prints.minY + 0.13647 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.70133 * prints.width, y: prints.minY + 0.10423 * prints.height))
        bezier20Path.addCurve(to: CGPoint(x: prints.minX + 0.49537 * prints.width, y: prints.minY + 0.07873 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60303 * prints.width, y: prints.minY + 0.08398 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54031 * prints.width, y: prints.minY + 0.07873 * prints.height))
        bezier20Path.addCurve(to: CGPoint(x: prints.minX + 0.17895 * prints.width, y: prints.minY + 0.16946 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.35963 * prints.width, y: prints.minY + 0.07873 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.26602 * prints.width, y: prints.minY + 0.10573 * prints.height))
        bezier20Path.addCurve(to: CGPoint(x: prints.minX + 0.09096 * prints.width, y: prints.minY + 0.19721 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.12653 * prints.width, y: prints.minY + 0.20770 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.11062 * prints.width, y: prints.minY + 0.21295 * prints.height))
        bezier20Path.close()
        fillColor.setFill()
        bezier20Path.fill()




        if (isTapped) {
            //// GreyPrint On
            //// Bezier 21 Drawing
            let bezier21Path = UIBezierPath()
            bezier21Path.move(to: CGPoint(x: prints.minX + 0.51691 * prints.width, y: prints.minY + 0.98603 * prints.height))
            bezier21Path.addCurve(to: CGPoint(x: prints.minX + 0.48227 * prints.width, y: prints.minY + 0.94479 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.50380 * prints.width, y: prints.minY + 0.97778 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.48789 * prints.width, y: prints.minY + 0.95904 * prints.height))
            bezier21Path.addCurve(to: CGPoint(x: prints.minX + 0.40176 * prints.width, y: prints.minY + 0.94854 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.46823 * prints.width, y: prints.minY + 0.91105 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.45138 * prints.width, y: prints.minY + 0.91180 * prints.height))
            bezier21Path.addCurve(to: CGPoint(x: prints.minX + 0.30253 * prints.width, y: prints.minY + 0.96579 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.35776 * prints.width, y: prints.minY + 0.98078 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.32499 * prints.width, y: prints.minY + 0.98678 * prints.height))
            bezier21Path.addCurve(to: CGPoint(x: prints.minX + 0.29129 * prints.width, y: prints.minY + 0.90805 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.28287 * prints.width, y: prints.minY + 0.94704 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.27631 * prints.width, y: prints.minY + 0.91255 * prints.height))
            bezier21Path.addCurve(to: CGPoint(x: prints.minX + 0.29785 * prints.width, y: prints.minY + 0.92605 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.30065 * prints.width, y: prints.minY + 0.90505 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.30253 * prints.width, y: prints.minY + 0.90955 * prints.height))
            bezier21Path.addCurve(to: CGPoint(x: prints.minX + 0.39708 * prints.width, y: prints.minY + 0.94104 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.28568 * prints.width, y: prints.minY + 0.97703 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.33810 * prints.width, y: prints.minY + 0.98528 * prints.height))
            bezier21Path.addCurve(to: CGPoint(x: prints.minX + 0.49257 * prints.width, y: prints.minY + 0.94479 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.45044 * prints.width, y: prints.minY + 0.90130 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.46916 * prints.width, y: prints.minY + 0.90205 * prints.height))
            bezier21Path.addCurve(to: CGPoint(x: prints.minX + 0.57308 * prints.width, y: prints.minY + 0.98228 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.51597 * prints.width, y: prints.minY + 0.98753 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54031 * prints.width, y: prints.minY + 0.99878 * prints.height))
            bezier21Path.addCurve(to: CGPoint(x: prints.minX + 0.59180 * prints.width, y: prints.minY + 0.94329 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.59367 * prints.width, y: prints.minY + 0.97104 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.59554 * prints.width, y: prints.minY + 0.96579 * prints.height))
            bezier21Path.addCurve(to: CGPoint(x: prints.minX + 0.56278 * prints.width, y: prints.minY + 0.88780 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.58805 * prints.width, y: prints.minY + 0.92830 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.57495 * prints.width, y: prints.minY + 0.90355 * prints.height))
            bezier21Path.addCurve(to: CGPoint(x: prints.minX + 0.54780 * prints.width, y: prints.minY + 0.85481 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.54874 * prints.width, y: prints.minY + 0.87131 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54218 * prints.width, y: prints.minY + 0.85706 * prints.height))
            bezier21Path.addCurve(to: CGPoint(x: prints.minX + 0.55716 * prints.width, y: prints.minY + 0.85781 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.55342 * prints.width, y: prints.minY + 0.85256 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.55716 * prints.width, y: prints.minY + 0.85331 * prints.height))
            bezier21Path.addCurve(to: CGPoint(x: prints.minX + 0.58525 * prints.width, y: prints.minY + 0.89080 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.55716 * prints.width, y: prints.minY + 0.86231 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.57027 * prints.width, y: prints.minY + 0.87731 * prints.height))
            bezier21Path.addCurve(to: CGPoint(x: prints.minX + 0.60584 * prints.width, y: prints.minY + 0.92305 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.61146 * prints.width, y: prints.minY + 0.91555 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.62176 * prints.width, y: prints.minY + 0.93129 * prints.height))
            bezier21Path.addCurve(to: CGPoint(x: prints.minX + 0.60210 * prints.width, y: prints.minY + 0.94404 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60210 * prints.width, y: prints.minY + 0.92155 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.60022 * prints.width, y: prints.minY + 0.93055 * prints.height))
            bezier21Path.addCurve(to: CGPoint(x: prints.minX + 0.58056 * prints.width, y: prints.minY + 0.98528 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60490 * prints.width, y: prints.minY + 0.96429 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.60022 * prints.width, y: prints.minY + 0.97179 * prints.height))
            bezier21Path.addCurve(to: CGPoint(x: prints.minX + 0.51691 * prints.width, y: prints.minY + 0.98603 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.54874 * prints.width, y: prints.minY + 1.00478 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54686 * prints.width, y: prints.minY + 1.00478 * prints.height))
            bezier21Path.close()
            MightyMetUI.lime.setFill()
            bezier21Path.fill()


            //// Bezier 22 Drawing
            let bezier22Path = UIBezierPath()
            bezier22Path.move(to: CGPoint(x: prints.minX + 0.53095 * prints.width, y: prints.minY + 0.98003 * prints.height))
            bezier22Path.addCurve(to: CGPoint(x: prints.minX + 0.49818 * prints.width, y: prints.minY + 0.94029 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.52440 * prints.width, y: prints.minY + 0.97629 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.51035 * prints.width, y: prints.minY + 0.95904 * prints.height))
            bezier22Path.addCurve(to: CGPoint(x: prints.minX + 0.39614 * prints.width, y: prints.minY + 0.93354 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.47103 * prints.width, y: prints.minY + 0.89680 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.45044 * prints.width, y: prints.minY + 0.89530 * prints.height))
            bezier22Path.addCurve(to: CGPoint(x: prints.minX + 0.31563 * prints.width, y: prints.minY + 0.95454 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.35121 * prints.width, y: prints.minY + 0.96504 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.33436 * prints.width, y: prints.minY + 0.96954 * prints.height))
            bezier22Path.addCurve(to: CGPoint(x: prints.minX + 0.34465 * prints.width, y: prints.minY + 0.89080 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.29597 * prints.width, y: prints.minY + 0.93879 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.30346 * prints.width, y: prints.minY + 0.92230 * prints.height))
            bezier22Path.addCurve(to: CGPoint(x: prints.minX + 0.45606 * prints.width, y: prints.minY + 0.84356 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.39333 * prints.width, y: prints.minY + 0.85331 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.41580 * prints.width, y: prints.minY + 0.84356 * prints.height))
            bezier22Path.addCurve(to: CGPoint(x: prints.minX + 0.56559 * prints.width, y: prints.minY + 0.90505 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.50099 * prints.width, y: prints.minY + 0.84356 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54218 * prints.width, y: prints.minY + 0.86681 * prints.height))
            bezier22Path.addCurve(to: CGPoint(x: prints.minX + 0.56746 * prints.width, y: prints.minY + 0.97853 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.58993 * prints.width, y: prints.minY + 0.94629 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.59086 * prints.width, y: prints.minY + 0.96804 * prints.height))
            bezier22Path.addCurve(to: CGPoint(x: prints.minX + 0.53095 * prints.width, y: prints.minY + 0.98003 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.54593 * prints.width, y: prints.minY + 0.98753 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54593 * prints.width, y: prints.minY + 0.98753 * prints.height))
            bezier22Path.close()
            MightyMetUI.lime.setFill()
            bezier22Path.fill()


            //// Bezier 23 Drawing
            let bezier23Path = UIBezierPath()
            bezier23Path.move(to: CGPoint(x: prints.minX + 0.63673 * prints.width, y: prints.minY + 0.94479 * prints.height))
            bezier23Path.addCurve(to: CGPoint(x: prints.minX + 0.61895 * prints.width, y: prints.minY + 0.92605 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.62176 * prints.width, y: prints.minY + 0.93429 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.61333 * prints.width, y: prints.minY + 0.92605 * prints.height))
            bezier23Path.addCurve(to: CGPoint(x: prints.minX + 0.64610 * prints.width, y: prints.minY + 0.94104 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.62456 * prints.width, y: prints.minY + 0.92605 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.63673 * prints.width, y: prints.minY + 0.93279 * prints.height))
            bezier23Path.addCurve(to: CGPoint(x: prints.minX + 0.71912 * prints.width, y: prints.minY + 0.94254 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.66763 * prints.width, y: prints.minY + 0.95979 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.69946 * prints.width, y: prints.minY + 0.96054 * prints.height))
            bezier23Path.addCurve(to: CGPoint(x: prints.minX + 0.70507 * prints.width, y: prints.minY + 0.88481 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.74252 * prints.width, y: prints.minY + 0.92230 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.73877 * prints.width, y: prints.minY + 0.90730 * prints.height))
            bezier23Path.addCurve(to: CGPoint(x: prints.minX + 0.63299 * prints.width, y: prints.minY + 0.77983 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.65827 * prints.width, y: prints.minY + 0.85406 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.63205 * prints.width, y: prints.minY + 0.81432 * prints.height))
            bezier23Path.addLine(to: CGPoint(x: prints.minX + 0.63486 * prints.width, y: prints.minY + 0.74983 * prints.height))
            bezier23Path.addLine(to: CGPoint(x: prints.minX + 0.64048 * prints.width, y: prints.minY + 0.78358 * prints.height))
            bezier23Path.addCurve(to: CGPoint(x: prints.minX + 0.70601 * prints.width, y: prints.minY + 0.87731 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.64890 * prints.width, y: prints.minY + 0.82557 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.65827 * prints.width, y: prints.minY + 0.83982 * prints.height))
            bezier23Path.addCurve(to: CGPoint(x: prints.minX + 0.72286 * prints.width, y: prints.minY + 0.94704 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.75001 * prints.width, y: prints.minY + 0.91105 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.75282 * prints.width, y: prints.minY + 0.92455 * prints.height))
            bezier23Path.addCurve(to: CGPoint(x: prints.minX + 0.63673 * prints.width, y: prints.minY + 0.94479 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.69478 * prints.width, y: prints.minY + 0.96804 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.67137 * prints.width, y: prints.minY + 0.96729 * prints.height))
            bezier23Path.close()
            MightyMetUI.lime.setFill()
            bezier23Path.fill()


            //// Bezier 24 Drawing
            let bezier24Path = UIBezierPath()
            bezier24Path.move(to: CGPoint(x: prints.minX + 0.17521 * prints.width, y: prints.minY + 0.93879 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.17147 * prints.width, y: prints.minY + 0.88031 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.14993 * prints.width, y: prints.minY + 0.91780 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.14900 * prints.width, y: prints.minY + 0.89380 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.17615 * prints.width, y: prints.minY + 0.88106 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18457 * prints.width, y: prints.minY + 0.87206 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.18551 * prints.width, y: prints.minY + 0.87206 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.21172 * prints.width, y: prints.minY + 0.94854 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.15087 * prints.width, y: prints.minY + 0.90355 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17427 * prints.width, y: prints.minY + 0.94854 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.26134 * prints.width, y: prints.minY + 0.91855 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.22763 * prints.width, y: prints.minY + 0.94854 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.27631 * prints.width, y: prints.minY + 0.91930 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.23887 * prints.width, y: prints.minY + 0.92980 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.25572 * prints.width, y: prints.minY + 0.91855 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.24542 * prints.width, y: prints.minY + 0.92380 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.17708 * prints.width, y: prints.minY + 0.90205 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.21266 * prints.width, y: prints.minY + 0.95454 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.16585 * prints.width, y: prints.minY + 0.93354 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.23700 * prints.width, y: prints.minY + 0.85481 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18083 * prints.width, y: prints.minY + 0.89230 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.20704 * prints.width, y: prints.minY + 0.87131 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.55061 * prints.width, y: prints.minY + 0.59762 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.31844 * prints.width, y: prints.minY + 0.80907 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.52065 * prints.width, y: prints.minY + 0.64411 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.51691 * prints.width, y: prints.minY + 0.45065 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.59554 * prints.width, y: prints.minY + 0.53088 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.58056 * prints.width, y: prints.minY + 0.46865 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.39708 * prints.width, y: prints.minY + 0.51739 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.47291 * prints.width, y: prints.minY + 0.43790 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.43452 * prints.width, y: prints.minY + 0.45965 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.17802 * prints.width, y: prints.minY + 0.71459 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.34746 * prints.width, y: prints.minY + 0.59462 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.29036 * prints.width, y: prints.minY + 0.64636 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.02543 * prints.width, y: prints.minY + 0.75208 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.06474 * prints.width, y: prints.minY + 0.78283 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.03104 * prints.width, y: prints.minY + 0.79108 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.10968 * prints.width, y: prints.minY + 0.68010 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.02262 * prints.width, y: prints.minY + 0.73409 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.03292 * prints.width, y: prints.minY + 0.72584 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.32593 * prints.width, y: prints.minY + 0.49414 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.22108 * prints.width, y: prints.minY + 0.61336 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.28474 * prints.width, y: prints.minY + 0.55863 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.49725 * prints.width, y: prints.minY + 0.38616 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.37555 * prints.width, y: prints.minY + 0.41616 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.42329 * prints.width, y: prints.minY + 0.38616 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.65078 * prints.width, y: prints.minY + 0.48514 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.56746 * prints.width, y: prints.minY + 0.38616 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.63205 * prints.width, y: prints.minY + 0.42816 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.66107 * prints.width, y: prints.minY + 0.56987 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.66201 * prints.width, y: prints.minY + 0.52189 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.67044 * prints.width, y: prints.minY + 0.58787 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.64703 * prints.width, y: prints.minY + 0.57812 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.65452 * prints.width, y: prints.minY + 0.55638 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.65265 * prints.width, y: prints.minY + 0.55713 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.35589 * prints.width, y: prints.minY + 0.85931 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.63205 * prints.width, y: prints.minY + 0.63211 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.50661 * prints.width, y: prints.minY + 0.75358 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.37742 * prints.width, y: prints.minY + 0.84956 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.30253 * prints.width, y: prints.minY + 0.89605 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.31563 * prints.width, y: prints.minY + 0.89080 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.45418 * prints.width, y: prints.minY + 0.82557 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.41112 * prints.width, y: prints.minY + 0.82707 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.42329 * prints.width, y: prints.minY + 0.82332 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.51597 * prints.width, y: prints.minY + 0.84131 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.47478 * prints.width, y: prints.minY + 0.82707 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.50286 * prints.width, y: prints.minY + 0.83382 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.53376 * prints.width, y: prints.minY + 0.83607 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.54125 * prints.width, y: prints.minY + 0.85406 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54125 * prints.width, y: prints.minY + 0.85406 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.53188 * prints.width, y: prints.minY + 0.73334 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.52252 * prints.width, y: prints.minY + 0.80832 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.52159 * prints.width, y: prints.minY + 0.73859 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.53563 * prints.width, y: prints.minY + 0.75808 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.53750 * prints.width, y: prints.minY + 0.73034 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.53937 * prints.width, y: prints.minY + 0.74009 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.53844 * prints.width, y: prints.minY + 0.81657 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.53282 * prints.width, y: prints.minY + 0.77383 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.53376 * prints.width, y: prints.minY + 0.80082 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.51223 * prints.width, y: prints.minY + 0.84656 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.54874 * prints.width, y: prints.minY + 0.85481 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54218 * prints.width, y: prints.minY + 0.86231 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.36150 * prints.width, y: prints.minY + 0.86831 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.46823 * prints.width, y: prints.minY + 0.82332 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.42329 * prints.width, y: prints.minY + 0.83007 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.30159 * prints.width, y: prints.minY + 0.89830 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.33155 * prints.width, y: prints.minY + 0.88780 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.30440 * prints.width, y: prints.minY + 0.90130 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.27163 * prints.width, y: prints.minY + 0.91855 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.29317 * prints.width, y: prints.minY + 0.89230 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.26602 * prints.width, y: prints.minY + 0.91105 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.20891 * prints.width, y: prints.minY + 0.95604 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.27725 * prints.width, y: prints.minY + 0.92605 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.22670 * prints.width, y: prints.minY + 0.95604 * prints.height))
            bezier24Path.addCurve(to: CGPoint(x: prints.minX + 0.17521 * prints.width, y: prints.minY + 0.93879 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.20142 * prints.width, y: prints.minY + 0.95604 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.18644 * prints.width, y: prints.minY + 0.94854 * prints.height))
            bezier24Path.close()
            MightyMetUI.lime.setFill()
            bezier24Path.fill()


            //// Bezier 25 Drawing
            let bezier25Path = UIBezierPath()
            bezier25Path.move(to: CGPoint(x: prints.minX + 0.61427 * prints.width, y: prints.minY + 0.90655 * prints.height))
            bezier25Path.addCurve(to: CGPoint(x: prints.minX + 0.54780 * prints.width, y: prints.minY + 0.75358 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.55435 * prints.width, y: prints.minY + 0.85481 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.53188 * prints.width, y: prints.minY + 0.80157 * prints.height))
            bezier25Path.addCurve(to: CGPoint(x: prints.minX + 0.55342 * prints.width, y: prints.minY + 0.71834 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.55342 * prints.width, y: prints.minY + 0.73634 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.55622 * prints.width, y: prints.minY + 0.72059 * prints.height))
            bezier25Path.addCurve(to: CGPoint(x: prints.minX + 0.57401 * prints.width, y: prints.minY + 0.69060 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.55061 * prints.width, y: prints.minY + 0.71609 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.55997 * prints.width, y: prints.minY + 0.70335 * prints.height))
            bezier25Path.addCurve(to: CGPoint(x: prints.minX + 0.61614 * prints.width, y: prints.minY + 0.64861 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.58805 * prints.width, y: prints.minY + 0.67785 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.60678 * prints.width, y: prints.minY + 0.65836 * prints.height))
            bezier25Path.addLine(to: CGPoint(x: prints.minX + 0.63393 * prints.width, y: prints.minY + 0.62986 * prints.height))
            bezier25Path.addLine(to: CGPoint(x: prints.minX + 0.61801 * prints.width, y: prints.minY + 0.65086 * prints.height))
            bezier25Path.addCurve(to: CGPoint(x: prints.minX + 0.61333 * prints.width, y: prints.minY + 0.68235 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60678 * prints.width, y: prints.minY + 0.66660 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.60490 * prints.width, y: prints.minY + 0.67485 * prints.height))
            bezier25Path.addCurve(to: CGPoint(x: prints.minX + 0.60678 * prints.width, y: prints.minY + 0.68910 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.62176 * prints.width, y: prints.minY + 0.69060 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.61988 * prints.width, y: prints.minY + 0.69135 * prints.height))
            bezier25Path.addCurve(to: CGPoint(x: prints.minX + 0.57120 * prints.width, y: prints.minY + 0.70185 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.59648 * prints.width, y: prints.minY + 0.68685 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.58150 * prints.width, y: prints.minY + 0.69210 * prints.height))
            bezier25Path.addLine(to: CGPoint(x: prints.minX + 0.55248 * prints.width, y: prints.minY + 0.71834 * prints.height))
            bezier25Path.addLine(to: CGPoint(x: prints.minX + 0.57776 * prints.width, y: prints.minY + 0.70559 * prints.height))
            bezier25Path.addCurve(to: CGPoint(x: prints.minX + 0.62269 * prints.width, y: prints.minY + 0.70859 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60210 * prints.width, y: prints.minY + 0.69285 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.60303 * prints.width, y: prints.minY + 0.69285 * prints.height))
            bezier25Path.addCurve(to: CGPoint(x: prints.minX + 0.63580 * prints.width, y: prints.minY + 0.73709 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.63580 * prints.width, y: prints.minY + 0.71909 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64048 * prints.width, y: prints.minY + 0.72884 * prints.height))
            bezier25Path.addCurve(to: CGPoint(x: prints.minX + 0.69290 * prints.width, y: prints.minY + 0.88556 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60865 * prints.width, y: prints.minY + 0.78658 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.63299 * prints.width, y: prints.minY + 0.84881 * prints.height))
            bezier25Path.addCurve(to: CGPoint(x: prints.minX + 0.71443 * prints.width, y: prints.minY + 0.93954 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.72660 * prints.width, y: prints.minY + 0.90580 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.73409 * prints.width, y: prints.minY + 0.92380 * prints.height))
            bezier25Path.addCurve(to: CGPoint(x: prints.minX + 0.61427 * prints.width, y: prints.minY + 0.90655 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.69103 * prints.width, y: prints.minY + 0.95829 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.66201 * prints.width, y: prints.minY + 0.94854 * prints.height))
            bezier25Path.close()
            MightyMetUI.lime.setFill()
            bezier25Path.fill()


            //// Bezier 26 Drawing
            let bezier26Path = UIBezierPath()
            bezier26Path.move(to: CGPoint(x: prints.minX + 0.78652 * prints.width, y: prints.minY + 0.89080 * prints.height))
            bezier26Path.addCurve(to: CGPoint(x: prints.minX + 0.66856 * prints.width, y: prints.minY + 0.78958 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.73971 * prints.width, y: prints.minY + 0.87131 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.69758 * prints.width, y: prints.minY + 0.83457 * prints.height))
            bezier26Path.addCurve(to: CGPoint(x: prints.minX + 0.65078 * prints.width, y: prints.minY + 0.73859 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.63861 * prints.width, y: prints.minY + 0.74159 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.63767 * prints.width, y: prints.minY + 0.73859 * prints.height))
            bezier26Path.addCurve(to: CGPoint(x: prints.minX + 0.66014 * prints.width, y: prints.minY + 0.74983 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.65639 * prints.width, y: prints.minY + 0.73859 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.66014 * prints.width, y: prints.minY + 0.74384 * prints.height))
            bezier26Path.addCurve(to: CGPoint(x: prints.minX + 0.72754 * prints.width, y: prints.minY + 0.84806 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.66014 * prints.width, y: prints.minY + 0.76783 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.70226 * prints.width, y: prints.minY + 0.83082 * prints.height))
            bezier26Path.addCurve(to: CGPoint(x: prints.minX + 0.83520 * prints.width, y: prints.minY + 0.89605 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.76124 * prints.width, y: prints.minY + 0.87356 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.81273 * prints.width, y: prints.minY + 0.89605 * prints.height))
            bezier26Path.addCurve(to: CGPoint(x: prints.minX + 0.88107 * prints.width, y: prints.minY + 0.84731 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.85954 * prints.width, y: prints.minY + 0.89605 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.88949 * prints.width, y: prints.minY + 0.86456 * prints.height))
            bezier26Path.addCurve(to: CGPoint(x: prints.minX + 0.88481 * prints.width, y: prints.minY + 0.83982 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.87826 * prints.width, y: prints.minY + 0.84056 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.87920 * prints.width, y: prints.minY + 0.83757 * prints.height))
            bezier26Path.addCurve(to: CGPoint(x: prints.minX + 0.87264 * prints.width, y: prints.minY + 0.88705 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.90073 * prints.width, y: prints.minY + 0.84806 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.89511 * prints.width, y: prints.minY + 0.87056 * prints.height))
            bezier26Path.addCurve(to: CGPoint(x: prints.minX + 0.78652 * prints.width, y: prints.minY + 0.89080 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.84737 * prints.width, y: prints.minY + 0.90655 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.82490 * prints.width, y: prints.minY + 0.90730 * prints.height))
            bezier26Path.close()
            MightyMetUI.lime.setFill()
            bezier26Path.fill()


            //// Bezier 27 Drawing
            let bezier27Path = UIBezierPath()
            bezier27Path.move(to: CGPoint(x: prints.minX + 0.07691 * prints.width, y: prints.minY + 0.87506 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.11249 * prints.width, y: prints.minY + 0.79408 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.04977 * prints.width, y: prints.minY + 0.85106 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.05819 * prints.width, y: prints.minY + 0.83157 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.16866 * prints.width, y: prints.minY + 0.76183 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.14151 * prints.width, y: prints.minY + 0.77458 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.16585 * prints.width, y: prints.minY + 0.76033 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.12091 * prints.width, y: prints.minY + 0.79707 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17053 * prints.width, y: prints.minY + 0.76408 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.14900 * prints.width, y: prints.minY + 0.77983 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.07036 * prints.width, y: prints.minY + 0.84581 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.08534 * prints.width, y: prints.minY + 0.81882 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.07036 * prints.width, y: prints.minY + 0.83382 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.16866 * prints.width, y: prints.minY + 0.86081 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.07036 * prints.width, y: prints.minY + 0.88481 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.11249 * prints.width, y: prints.minY + 0.89155 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.19300 * prints.width, y: prints.minY + 0.85331 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18925 * prints.width, y: prints.minY + 0.84956 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.20049 * prints.width, y: prints.minY + 0.84656 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.19019 * prints.width, y: prints.minY + 0.86606 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18644 * prints.width, y: prints.minY + 0.86006 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.18457 * prints.width, y: prints.minY + 0.86606 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.21078 * prints.width, y: prints.minY + 0.85481 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.19487 * prints.width, y: prints.minY + 0.86606 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.20423 * prints.width, y: prints.minY + 0.86081 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.21172 * prints.width, y: prints.minY + 0.84356 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.21921 * prints.width, y: prints.minY + 0.84656 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.21921 * prints.width, y: prints.minY + 0.84356 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.20610 * prints.width, y: prints.minY + 0.83607 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.20517 * prints.width, y: prints.minY + 0.84356 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.20329 * prints.width, y: prints.minY + 0.84056 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.22108 * prints.width, y: prints.minY + 0.82857 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.20891 * prints.width, y: prints.minY + 0.83232 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.21640 * prints.width, y: prints.minY + 0.82857 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.22483 * prints.width, y: prints.minY + 0.83607 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.22670 * prints.width, y: prints.minY + 0.82857 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.22763 * prints.width, y: prints.minY + 0.83232 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.25197 * prints.width, y: prints.minY + 0.82932 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.21453 * prints.width, y: prints.minY + 0.84956 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.23512 * prints.width, y: prints.minY + 0.84431 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.25666 * prints.width, y: prints.minY + 0.81207 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.26321 * prints.width, y: prints.minY + 0.81957 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.26508 * prints.width, y: prints.minY + 0.81432 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.27257 * prints.width, y: prints.minY + 0.79483 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.25104 * prints.width, y: prints.minY + 0.81057 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.25759 * prints.width, y: prints.minY + 0.80307 * prints.height))
            bezier27Path.addLine(to: CGPoint(x: prints.minX + 0.29972 * prints.width, y: prints.minY + 0.78133 * prints.height))
            bezier27Path.addLine(to: CGPoint(x: prints.minX + 0.28193 * prints.width, y: prints.minY + 0.79707 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.27444 * prints.width, y: prints.minY + 0.81357 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.27163 * prints.width, y: prints.minY + 0.80607 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.26883 * prints.width, y: prints.minY + 0.81357 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.53095 * prints.width, y: prints.minY + 0.59987 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.29504 * prints.width, y: prints.minY + 0.81357 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.50567 * prints.width, y: prints.minY + 0.63736 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.53282 * prints.width, y: prints.minY + 0.47090 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.56091 * prints.width, y: prints.minY + 0.55488 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.56184 * prints.width, y: prints.minY + 0.48814 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.40831 * prints.width, y: prints.minY + 0.53163 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.48976 * prints.width, y: prints.minY + 0.44540 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.45606 * prints.width, y: prints.minY + 0.46190 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.16866 * prints.width, y: prints.minY + 0.73634 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.35870 * prints.width, y: prints.minY + 0.60512 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.28380 * prints.width, y: prints.minY + 0.66885 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.01232 * prints.width, y: prints.minY + 0.76858 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.06662 * prints.width, y: prints.minY + 0.79707 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.04321 * prints.width, y: prints.minY + 0.80157 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.06755 * prints.width, y: prints.minY + 0.68835 * prints.height), controlPoint1: CGPoint(x: prints.minX + -0.01202 * prints.width, y: prints.minY + 0.74159 * prints.height), controlPoint2: CGPoint(x: prints.minX + -0.00266 * prints.width, y: prints.minY + 0.72884 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.11810 * prints.width, y: prints.minY + 0.64936 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.10032 * prints.width, y: prints.minY + 0.66960 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.12372 * prints.width, y: prints.minY + 0.65161 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.12934 * prints.width, y: prints.minY + 0.63436 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.11249 * prints.width, y: prints.minY + 0.64636 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.11717 * prints.width, y: prints.minY + 0.64036 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.13683 * prints.width, y: prints.minY + 0.63586 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.14806 * prints.width, y: prints.minY + 0.62461 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.14900 * prints.width, y: prints.minY + 0.62461 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.13402 * prints.width, y: prints.minY + 0.64861 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.13027 * prints.width, y: prints.minY + 0.64336 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.12840 * prints.width, y: prints.minY + 0.64861 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.15461 * prints.width, y: prints.minY + 0.63736 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.13870 * prints.width, y: prints.minY + 0.64861 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.14806 * prints.width, y: prints.minY + 0.64336 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.15368 * prints.width, y: prints.minY + 0.62611 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.16398 * prints.width, y: prints.minY + 0.62836 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.16398 * prints.width, y: prints.minY + 0.62611 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.15461 * prints.width, y: prints.minY + 0.61936 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.14338 * prints.width, y: prints.minY + 0.62611 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.14338 * prints.width, y: prints.minY + 0.62461 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.17615 * prints.width, y: prints.minY + 0.61636 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.16210 * prints.width, y: prints.minY + 0.61486 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17147 * prints.width, y: prints.minY + 0.61411 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.25291 * prints.width, y: prints.minY + 0.55263 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18832 * prints.width, y: prints.minY + 0.62236 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.25853 * prints.width, y: prints.minY + 0.56463 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.25666 * prints.width, y: prints.minY + 0.54663 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.25104 * prints.width, y: prints.minY + 0.54738 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.25197 * prints.width, y: prints.minY + 0.54438 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.26321 * prints.width, y: prints.minY + 0.53763 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.26134 * prints.width, y: prints.minY + 0.54888 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.26414 * prints.width, y: prints.minY + 0.54513 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.27444 * prints.width, y: prints.minY + 0.52713 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.26321 * prints.width, y: prints.minY + 0.53088 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.26789 * prints.width, y: prints.minY + 0.52563 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.28006 * prints.width, y: prints.minY + 0.52039 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.28193 * prints.width, y: prints.minY + 0.52788 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.28474 * prints.width, y: prints.minY + 0.52563 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.28380 * prints.width, y: prints.minY + 0.51664 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.27631 * prints.width, y: prints.minY + 0.51439 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.27725 * prints.width, y: prints.minY + 0.51364 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.28848 * prints.width, y: prints.minY + 0.50914 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.29129 * prints.width, y: prints.minY + 0.52039 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.29317 * prints.width, y: prints.minY + 0.51739 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.29317 * prints.width, y: prints.minY + 0.50164 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.28474 * prints.width, y: prints.minY + 0.50014 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.28568 * prints.width, y: prints.minY + 0.49789 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.29785 * prints.width, y: prints.minY + 0.49414 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.30065 * prints.width, y: prints.minY + 0.50539 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.30253 * prints.width, y: prints.minY + 0.50239 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.30253 * prints.width, y: prints.minY + 0.48664 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.29410 * prints.width, y: prints.minY + 0.48514 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.29504 * prints.width, y: prints.minY + 0.48289 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.30721 * prints.width, y: prints.minY + 0.47914 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.31002 * prints.width, y: prints.minY + 0.49039 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.31189 * prints.width, y: prints.minY + 0.48739 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.31189 * prints.width, y: prints.minY + 0.47165 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.30346 * prints.width, y: prints.minY + 0.47015 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.30440 * prints.width, y: prints.minY + 0.46790 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.31657 * prints.width, y: prints.minY + 0.46415 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.31938 * prints.width, y: prints.minY + 0.47540 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.32125 * prints.width, y: prints.minY + 0.47240 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.32125 * prints.width, y: prints.minY + 0.45665 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.31282 * prints.width, y: prints.minY + 0.45515 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.31376 * prints.width, y: prints.minY + 0.45290 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.32593 * prints.width, y: prints.minY + 0.44915 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.32874 * prints.width, y: prints.minY + 0.46040 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.33061 * prints.width, y: prints.minY + 0.45740 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.33248 * prints.width, y: prints.minY + 0.44240 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.32125 * prints.width, y: prints.minY + 0.43940 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.32312 * prints.width, y: prints.minY + 0.43790 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.33904 * prints.width, y: prints.minY + 0.44165 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.33997 * prints.width, y: prints.minY + 0.44615 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.34278 * prints.width, y: prints.minY + 0.44540 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.34278 * prints.width, y: prints.minY + 0.42366 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.33623 * prints.width, y: prints.minY + 0.43715 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.33716 * prints.width, y: prints.minY + 0.42966 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.35121 * prints.width, y: prints.minY + 0.42216 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.34840 * prints.width, y: prints.minY + 0.41616 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.35121 * prints.width, y: prints.minY + 0.41541 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.36806 * prints.width, y: prints.minY + 0.41841 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.35121 * prints.width, y: prints.minY + 0.42816 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.35682 * prints.width, y: prints.minY + 0.42666 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.37555 * prints.width, y: prints.minY + 0.39966 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.37929 * prints.width, y: prints.minY + 0.40941 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.38116 * prints.width, y: prints.minY + 0.40266 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.40082 * prints.width, y: prints.minY + 0.39291 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.36619 * prints.width, y: prints.minY + 0.39441 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.38210 * prints.width, y: prints.minY + 0.38991 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.40176 * prints.width, y: prints.minY + 0.38542 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.40550 * prints.width, y: prints.minY + 0.39366 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.40550 * prints.width, y: prints.minY + 0.38991 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.41112 * prints.width, y: prints.minY + 0.38092 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.39708 * prints.width, y: prints.minY + 0.37867 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.39989 * prints.width, y: prints.minY + 0.37792 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.42048 * prints.width, y: prints.minY + 0.37717 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.42142 * prints.width, y: prints.minY + 0.38467 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.42516 * prints.width, y: prints.minY + 0.38317 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.42984 * prints.width, y: prints.minY + 0.37342 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.41580 * prints.width, y: prints.minY + 0.37117 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.41861 * prints.width, y: prints.minY + 0.37042 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.44014 * prints.width, y: prints.minY + 0.37117 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.43921 * prints.width, y: prints.minY + 0.37642 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.44389 * prints.width, y: prints.minY + 0.37567 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.49631 * prints.width, y: prints.minY + 0.36367 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.43640 * prints.width, y: prints.minY + 0.36667 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.45793 * prints.width, y: prints.minY + 0.36367 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.55248 * prints.width, y: prints.minY + 0.37117 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.53469 * prints.width, y: prints.minY + 0.36367 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.55622 * prints.width, y: prints.minY + 0.36667 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.56278 * prints.width, y: prints.minY + 0.37342 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.54874 * prints.width, y: prints.minY + 0.37567 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.55342 * prints.width, y: prints.minY + 0.37642 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.57214 * prints.width, y: prints.minY + 0.37717 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.57401 * prints.width, y: prints.minY + 0.37042 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.57682 * prints.width, y: prints.minY + 0.37117 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.58150 * prints.width, y: prints.minY + 0.38092 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.56746 * prints.width, y: prints.minY + 0.38317 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.57120 * prints.width, y: prints.minY + 0.38467 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.59086 * prints.width, y: prints.minY + 0.38467 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.59273 * prints.width, y: prints.minY + 0.37792 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.59554 * prints.width, y: prints.minY + 0.37867 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.60116 * prints.width, y: prints.minY + 0.38916 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.58618 * prints.width, y: prints.minY + 0.39066 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.58993 * prints.width, y: prints.minY + 0.39216 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.60584 * prints.width, y: prints.minY + 0.39141 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.61239 * prints.width, y: prints.minY + 0.38616 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.61427 * prints.width, y: prints.minY + 0.38691 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.61707 * prints.width, y: prints.minY + 0.41541 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.59742 * prints.width, y: prints.minY + 0.39666 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.59929 * prints.width, y: prints.minY + 0.40266 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.64329 * prints.width, y: prints.minY + 0.42591 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.62924 * prints.width, y: prints.minY + 0.42441 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64141 * prints.width, y: prints.minY + 0.42966 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.64422 * prints.width, y: prints.minY + 0.42966 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.64610 * prints.width, y: prints.minY + 0.42291 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64610 * prints.width, y: prints.minY + 0.42441 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.65265 * prints.width, y: prints.minY + 0.43415 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.64329 * prints.width, y: prints.minY + 0.43565 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64610 * prints.width, y: prints.minY + 0.43715 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.65733 * prints.width, y: prints.minY + 0.44165 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.66014 * prints.width, y: prints.minY + 0.43041 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.66107 * prints.width, y: prints.minY + 0.43265 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.65920 * prints.width, y: prints.minY + 0.44990 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.65358 * prints.width, y: prints.minY + 0.44840 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.65452 * prints.width, y: prints.minY + 0.45290 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.67418 * prints.width, y: prints.minY + 0.48139 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.66482 * prints.width, y: prints.minY + 0.44765 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.67137 * prints.width, y: prints.minY + 0.46190 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.68729 * prints.width, y: prints.minY + 0.50614 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.68354 * prints.width, y: prints.minY + 0.53763 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.68635 * prints.width, y: prints.minY + 0.54288 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.53844 * prints.width, y: prints.minY + 0.35692 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.68916 * prints.width, y: prints.minY + 0.43715 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.62363 * prints.width, y: prints.minY + 0.37117 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.29129 * prints.width, y: prints.minY + 0.47839 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.43640 * prints.width, y: prints.minY + 0.33968 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.35308 * prints.width, y: prints.minY + 0.38092 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.13776 * prints.width, y: prints.minY + 0.61936 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.25572 * prints.width, y: prints.minY + 0.53463 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.21266 * prints.width, y: prints.minY + 0.57362 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.02543 * prints.width, y: prints.minY + 0.63211 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.06662 * prints.width, y: prints.minY + 0.66210 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.03011 * prints.width, y: prints.minY + 0.66660 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.05819 * prints.width, y: prints.minY + 0.59162 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.02262 * prints.width, y: prints.minY + 0.61636 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.03011 * prints.width, y: prints.minY + 0.60812 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.22576 * prints.width, y: prints.minY + 0.44465 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.13027 * prints.width, y: prints.minY + 0.54963 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.19393 * prints.width, y: prints.minY + 0.49414 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.38678 * prints.width, y: prints.minY + 0.30968 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.26602 * prints.width, y: prints.minY + 0.38467 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.32687 * prints.width, y: prints.minY + 0.33368 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.60490 * prints.width, y: prints.minY + 0.30893 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.44576 * prints.width, y: prints.minY + 0.28644 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54312 * prints.width, y: prints.minY + 0.28569 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.74065 * prints.width, y: prints.minY + 0.40941 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.65452 * prints.width, y: prints.minY + 0.32693 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.71724 * prints.width, y: prints.minY + 0.37342 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.74907 * prints.width, y: prints.minY + 0.60287 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.76499 * prints.width, y: prints.minY + 0.44765 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76780 * prints.width, y: prints.minY + 0.51289 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.74346 * prints.width, y: prints.minY + 0.72809 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.73409 * prints.width, y: prints.minY + 0.67410 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.73316 * prints.width, y: prints.minY + 0.69060 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.84550 * prints.width, y: prints.minY + 0.83007 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.75656 * prints.width, y: prints.minY + 0.77458 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.78745 * prints.width, y: prints.minY + 0.80532 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.86047 * prints.width, y: prints.minY + 0.87731 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.87920 * prints.width, y: prints.minY + 0.84431 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.88294 * prints.width, y: prints.minY + 0.85856 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.69384 * prints.width, y: prints.minY + 0.79857 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.82677 * prints.width, y: prints.minY + 0.90430 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.73877 * prints.width, y: prints.minY + 0.86231 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.66950 * prints.width, y: prints.minY + 0.55863 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.66295 * prints.width, y: prints.minY + 0.75433 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.66201 * prints.width, y: prints.minY + 0.74609 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.61520 * prints.width, y: prints.minY + 0.42141 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.67231 * prints.width, y: prints.minY + 0.49564 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.65733 * prints.width, y: prints.minY + 0.45665 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.49631 * prints.width, y: prints.minY + 0.37867 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.57869 * prints.width, y: prints.minY + 0.39066 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54593 * prints.width, y: prints.minY + 0.37867 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.31376 * prints.width, y: prints.minY + 0.49714 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.42142 * prints.width, y: prints.minY + 0.37867 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.36806 * prints.width, y: prints.minY + 0.41316 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.11249 * prints.width, y: prints.minY + 0.66960 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.27070 * prints.width, y: prints.minY + 0.56313 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.22108 * prints.width, y: prints.minY + 0.60512 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.01232 * prints.width, y: prints.minY + 0.73859 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.06100 * prints.width, y: prints.minY + 0.69960 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.01606 * prints.width, y: prints.minY + 0.73109 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.05538 * prints.width, y: prints.minY + 0.78358 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.00389 * prints.width, y: prints.minY + 0.75658 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.02917 * prints.width, y: prints.minY + 0.78358 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.31470 * prints.width, y: prints.minY + 0.62761 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.08534 * prints.width, y: prints.minY + 0.78358 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.25104 * prints.width, y: prints.minY + 0.68385 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.39801 * prints.width, y: prints.minY + 0.53163 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.34372 * prints.width, y: prints.minY + 0.60212 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.38116 * prints.width, y: prints.minY + 0.55863 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.54312 * prints.width, y: prints.minY + 0.47240 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.44763 * prints.width, y: prints.minY + 0.45440 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.49631 * prints.width, y: prints.minY + 0.43415 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.56652 * prints.width, y: prints.minY + 0.52638 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.56184 * prints.width, y: prints.minY + 0.48664 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.56652 * prints.width, y: prints.minY + 0.49789 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.43827 * prints.width, y: prints.minY + 0.70185 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.56652 * prints.width, y: prints.minY + 0.57437 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.52908 * prints.width, y: prints.minY + 0.62536 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.18270 * prints.width, y: prints.minY + 0.86981 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.35121 * prints.width, y: prints.minY + 0.77458 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.19674 * prints.width, y: prints.minY + 0.87656 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.15274 * prints.width, y: prints.minY + 0.87656 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17802 * prints.width, y: prints.minY + 0.86756 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.16398 * prints.width, y: prints.minY + 0.87056 * prints.height))
            bezier27Path.addCurve(to: CGPoint(x: prints.minX + 0.07691 * prints.width, y: prints.minY + 0.87506 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.12466 * prints.width, y: prints.minY + 0.89230 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.09564 * prints.width, y: prints.minY + 0.89155 * prints.height))
            bezier27Path.close()
            MightyMetUI.lime.setFill()
            bezier27Path.fill()


            //// Bezier 28 Drawing
            let bezier28Path = UIBezierPath()
            bezier28Path.move(to: CGPoint(x: prints.minX + 0.09096 * prints.width, y: prints.minY + 0.86456 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.13121 * prints.width, y: prints.minY + 0.79782 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.06942 * prints.width, y: prints.minY + 0.84731 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.08066 * prints.width, y: prints.minY + 0.82857 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.17989 * prints.width, y: prints.minY + 0.76183 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.15930 * prints.width, y: prints.minY + 0.78133 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.18083 * prints.width, y: prints.minY + 0.76483 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.26508 * prints.width, y: prints.minY + 0.69060 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17895 * prints.width, y: prints.minY + 0.75883 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.21734 * prints.width, y: prints.minY + 0.72659 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.39801 * prints.width, y: prints.minY + 0.56688 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.31376 * prints.width, y: prints.minY + 0.65311 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.37180 * prints.width, y: prints.minY + 0.59987 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.49537 * prints.width, y: prints.minY + 0.47615 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.47103 * prints.width, y: prints.minY + 0.47764 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.47291 * prints.width, y: prints.minY + 0.47615 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.53469 * prints.width, y: prints.minY + 0.49264 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.50754 * prints.width, y: prints.minY + 0.47615 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.52440 * prints.width, y: prints.minY + 0.48364 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.53937 * prints.width, y: prints.minY + 0.50239 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.54405 * prints.width, y: prints.minY + 0.50164 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54686 * prints.width, y: prints.minY + 0.50614 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.54499 * prints.width, y: prints.minY + 0.53988 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.52720 * prints.width, y: prints.minY + 0.49714 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.52908 * prints.width, y: prints.minY + 0.50614 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.29597 * prints.width, y: prints.minY + 0.78058 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.55529 * prints.width, y: prints.minY + 0.56388 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.31938 * prints.width, y: prints.minY + 0.79183 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.24168 * prints.width, y: prints.minY + 0.81582 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.28474 * prints.width, y: prints.minY + 0.77458 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.23887 * prints.width, y: prints.minY + 0.80457 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.23138 * prints.width, y: prints.minY + 0.82257 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.24261 * prints.width, y: prints.minY + 0.82107 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.23793 * prints.width, y: prints.minY + 0.82407 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.17615 * prints.width, y: prints.minY + 0.84731 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.22483 * prints.width, y: prints.minY + 0.82182 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.19955 * prints.width, y: prints.minY + 0.83307 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.09096 * prints.width, y: prints.minY + 0.86456 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.13121 * prints.width, y: prints.minY + 0.87506 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.10968 * prints.width, y: prints.minY + 0.87956 * prints.height))
            bezier28Path.close()
            bezier28Path.move(to: CGPoint(x: prints.minX + 0.49444 * prints.width, y: prints.minY + 0.60212 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.53469 * prints.width, y: prints.minY + 0.54588 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.51316 * prints.width, y: prints.minY + 0.57887 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.53188 * prints.width, y: prints.minY + 0.55338 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.51410 * prints.width, y: prints.minY + 0.56613 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.53750 * prints.width, y: prints.minY + 0.53838 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.52908 * prints.width, y: prints.minY + 0.54738 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.36525 * prints.width, y: prints.minY + 0.71684 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.47665 * prints.width, y: prints.minY + 0.61561 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.43921 * prints.width, y: prints.minY + 0.65311 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.37929 * prints.width, y: prints.minY + 0.70934 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.30346 * prints.width, y: prints.minY + 0.77008 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.30440 * prints.width, y: prints.minY + 0.76933 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.49444 * prints.width, y: prints.minY + 0.60212 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.42329 * prints.width, y: prints.minY + 0.67410 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.47478 * prints.width, y: prints.minY + 0.62536 * prints.height))
            bezier28Path.close()
            bezier28Path.move(to: CGPoint(x: prints.minX + 0.25478 * prints.width, y: prints.minY + 0.71834 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.45044 * prints.width, y: prints.minY + 0.52713 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.32780 * prints.width, y: prints.minY + 0.66585 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.41767 * prints.width, y: prints.minY + 0.57887 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.50193 * prints.width, y: prints.minY + 0.49264 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.47197 * prints.width, y: prints.minY + 0.49264 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.47665 * prints.width, y: prints.minY + 0.48964 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.52065 * prints.width, y: prints.minY + 0.48889 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.51878 * prints.width, y: prints.minY + 0.49489 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.52627 * prints.width, y: prints.minY + 0.49339 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.49069 * prints.width, y: prints.minY + 0.48514 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.51597 * prints.width, y: prints.minY + 0.48514 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.50286 * prints.width, y: prints.minY + 0.48364 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.43546 * prints.width, y: prints.minY + 0.53613 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.47478 * prints.width, y: prints.minY + 0.48664 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.45980 * prints.width, y: prints.minY + 0.50014 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.29410 * prints.width, y: prints.minY + 0.67335 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.41299 * prints.width, y: prints.minY + 0.56912 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.36806 * prints.width, y: prints.minY + 0.61336 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.19019 * prints.width, y: prints.minY + 0.76108 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.23512 * prints.width, y: prints.minY + 0.72134 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.18832 * prints.width, y: prints.minY + 0.76108 * prints.height))
            bezier28Path.addCurve(to: CGPoint(x: prints.minX + 0.25478 * prints.width, y: prints.minY + 0.71834 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.19206 * prints.width, y: prints.minY + 0.76108 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.22108 * prints.width, y: prints.minY + 0.74159 * prints.height))
            bezier28Path.close()
            MightyMetUI.lime.setFill()
            bezier28Path.fill()


            //// Bezier 29 Drawing
            let bezier29Path = UIBezierPath()
            bezier29Path.move(to: CGPoint(x: prints.minX + 0.83333 * prints.width, y: prints.minY + 0.81657 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.75282 * prints.width, y: prints.minY + 0.72659 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.78277 * prints.width, y: prints.minY + 0.79333 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76592 * prints.width, y: prints.minY + 0.77533 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.75656 * prints.width, y: prints.minY + 0.61262 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.74346 * prints.width, y: prints.minY + 0.69210 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.74346 * prints.width, y: prints.minY + 0.67410 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.68822 * prints.width, y: prints.minY + 0.34567 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.78745 * prints.width, y: prints.minY + 0.47090 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.77060 * prints.width, y: prints.minY + 0.40566 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.21734 * prints.width, y: prints.minY + 0.44315 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.53188 * prints.width, y: prints.minY + 0.23245 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.32312 * prints.width, y: prints.minY + 0.27594 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.05445 * prints.width, y: prints.minY + 0.58412 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18364 * prints.width, y: prints.minY + 0.49639 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.12653 * prints.width, y: prints.minY + 0.54588 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.02075 * prints.width, y: prints.minY + 0.64786 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.01045 * prints.width, y: prints.minY + 0.60737 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.00109 * prints.width, y: prints.minY + 0.62611 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.09189 * prints.width, y: prints.minY + 0.65536 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.03572 * prints.width, y: prints.minY + 0.66510 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.06100 * prints.width, y: prints.minY + 0.66810 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.09376 * prints.width, y: prints.minY + 0.65985 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.11249 * prints.width, y: prints.minY + 0.64786 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.11249 * prints.width, y: prints.minY + 0.64786 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.01232 * prints.width, y: prints.minY + 0.64861 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.06849 * prints.width, y: prints.minY + 0.67635 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.03385 * prints.width, y: prints.minY + 0.67110 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.05070 * prints.width, y: prints.minY + 0.57887 * prints.height), controlPoint1: CGPoint(x: prints.minX + -0.01108 * prints.width, y: prints.minY + 0.62311 * prints.height), controlPoint2: CGPoint(x: prints.minX + -0.00266 * prints.width, y: prints.minY + 0.60887 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.17334 * prints.width, y: prints.minY + 0.48889 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.10500 * prints.width, y: prints.minY + 0.54888 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17334 * prints.width, y: prints.minY + 0.49939 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.15461 * prints.width, y: prints.minY + 0.49489 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17334 * prints.width, y: prints.minY + 0.48514 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.16491 * prints.width, y: prints.minY + 0.48739 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.14993 * prints.width, y: prints.minY + 0.48364 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.12653 * prints.width, y: prints.minY + 0.51514 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.12279 * prints.width, y: prints.minY + 0.50389 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.17334 * prints.width, y: prints.minY + 0.47540 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.16304 * prints.width, y: prints.minY + 0.47390 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17334 * prints.width, y: prints.minY + 0.47015 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.18364 * prints.width, y: prints.minY + 0.47989 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17334 * prints.width, y: prints.minY + 0.48064 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17802 * prints.width, y: prints.minY + 0.48214 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.18832 * prints.width, y: prints.minY + 0.46340 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18925 * prints.width, y: prints.minY + 0.47690 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.19112 * prints.width, y: prints.minY + 0.46940 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.19487 * prints.width, y: prints.minY + 0.45815 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18457 * prints.width, y: prints.minY + 0.45665 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.18644 * prints.width, y: prints.minY + 0.45440 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.19955 * prints.width, y: prints.minY + 0.45740 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.20049 * prints.width, y: prints.minY + 0.46115 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.20329 * prints.width, y: prints.minY + 0.46115 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.31938 * prints.width, y: prints.minY + 0.32168 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18457 * prints.width, y: prints.minY + 0.44390 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.29878 * prints.width, y: prints.minY + 0.31568 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.32687 * prints.width, y: prints.minY + 0.31718 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.32874 * prints.width, y: prints.minY + 0.32468 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.33061 * prints.width, y: prints.minY + 0.32318 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.33248 * prints.width, y: prints.minY + 0.31493 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.32219 * prints.width, y: prints.minY + 0.31193 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.32406 * prints.width, y: prints.minY + 0.31118 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.33716 * prints.width, y: prints.minY + 0.31118 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.34091 * prints.width, y: prints.minY + 0.31943 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.34278 * prints.width, y: prints.minY + 0.31793 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.34185 * prints.width, y: prints.minY + 0.30743 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.33155 * prints.width, y: prints.minY + 0.30443 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.33342 * prints.width, y: prints.minY + 0.30293 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.34653 * prints.width, y: prints.minY + 0.30368 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.35027 * prints.width, y: prints.minY + 0.31193 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.35214 * prints.width, y: prints.minY + 0.31043 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.35495 * prints.width, y: prints.minY + 0.29843 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.34091 * prints.width, y: prints.minY + 0.29618 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.34278 * prints.width, y: prints.minY + 0.29469 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.36431 * prints.width, y: prints.minY + 0.29469 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.36525 * prints.width, y: prints.minY + 0.30218 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.36899 * prints.width, y: prints.minY + 0.30068 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.37367 * prints.width, y: prints.minY + 0.29094 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.35963 * prints.width, y: prints.minY + 0.28869 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.36244 * prints.width, y: prints.minY + 0.28794 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.38397 * prints.width, y: prints.minY + 0.28869 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.38304 * prints.width, y: prints.minY + 0.29394 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.38772 * prints.width, y: prints.minY + 0.29319 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.49631 * prints.width, y: prints.minY + 0.27069 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.37742 * prints.width, y: prints.minY + 0.27969 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.43546 * prints.width, y: prints.minY + 0.27069 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.60865 * prints.width, y: prints.minY + 0.28869 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.55529 * prints.width, y: prints.minY + 0.27069 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.61520 * prints.width, y: prints.minY + 0.27969 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.62456 * prints.width, y: prints.minY + 0.29094 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60584 * prints.width, y: prints.minY + 0.29169 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.61333 * prints.width, y: prints.minY + 0.29319 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.63205 * prints.width, y: prints.minY + 0.29618 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.64235 * prints.width, y: prints.minY + 0.28794 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64329 * prints.width, y: prints.minY + 0.28869 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.64141 * prints.width, y: prints.minY + 0.29993 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.62082 * prints.width, y: prints.minY + 0.30293 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.62269 * prints.width, y: prints.minY + 0.30368 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.65171 * prints.width, y: prints.minY + 0.30218 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.65733 * prints.width, y: prints.minY + 0.29693 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.66107 * prints.width, y: prints.minY + 0.29768 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.67231 * prints.width, y: prints.minY + 0.31418 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.63673 * prints.width, y: prints.minY + 0.31118 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.65265 * prints.width, y: prints.minY + 0.32093 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.69290 * prints.width, y: prints.minY + 0.31793 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.67980 * prints.width, y: prints.minY + 0.31193 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.68916 * prints.width, y: prints.minY + 0.31343 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.68729 * prints.width, y: prints.minY + 0.32618 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.69571 * prints.width, y: prints.minY + 0.32243 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.69384 * prints.width, y: prints.minY + 0.32618 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.69758 * prints.width, y: prints.minY + 0.34492 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.68073 * prints.width, y: prints.minY + 0.32618 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.68541 * prints.width, y: prints.minY + 0.33443 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.72754 * prints.width, y: prints.minY + 0.35467 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.71443 * prints.width, y: prints.minY + 0.35917 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.72192 * prints.width, y: prints.minY + 0.36142 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.73597 * prints.width, y: prints.minY + 0.37867 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.73503 * prints.width, y: prints.minY + 0.34417 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.73877 * prints.width, y: prints.minY + 0.35542 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.74533 * prints.width, y: prints.minY + 0.37867 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.73409 * prints.width, y: prints.minY + 0.38841 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.73503 * prints.width, y: prints.minY + 0.38841 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.75001 * prints.width, y: prints.minY + 0.38092 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.75375 * prints.width, y: prints.minY + 0.36892 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.75469 * prints.width, y: prints.minY + 0.36967 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.75563 * prints.width, y: prints.minY + 0.38916 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.74626 * prints.width, y: prints.minY + 0.38991 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.74814 * prints.width, y: prints.minY + 0.39291 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.76031 * prints.width, y: prints.minY + 0.39666 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.76311 * prints.width, y: prints.minY + 0.38542 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76405 * prints.width, y: prints.minY + 0.38766 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.76499 * prints.width, y: prints.minY + 0.40416 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.75563 * prints.width, y: prints.minY + 0.40491 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.75750 * prints.width, y: prints.minY + 0.40791 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.76967 * prints.width, y: prints.minY + 0.41166 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.77248 * prints.width, y: prints.minY + 0.40041 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.77341 * prints.width, y: prints.minY + 0.40266 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.77435 * prints.width, y: prints.minY + 0.41916 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.76499 * prints.width, y: prints.minY + 0.41991 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76686 * prints.width, y: prints.minY + 0.42291 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.77997 * prints.width, y: prints.minY + 0.42966 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.78090 * prints.width, y: prints.minY + 0.41541 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.78277 * prints.width, y: prints.minY + 0.41916 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.78277 * prints.width, y: prints.minY + 0.44165 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.77622 * prints.width, y: prints.minY + 0.43865 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.77809 * prints.width, y: prints.minY + 0.44465 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.77809 * prints.width, y: prints.minY + 0.56163 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.79494 * prints.width, y: prints.minY + 0.43565 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.79307 * prints.width, y: prints.minY + 0.47390 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.76405 * prints.width, y: prints.minY + 0.70484 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.75843 * prints.width, y: prints.minY + 0.67335 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.75375 * prints.width, y: prints.minY + 0.72284 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.76686 * prints.width, y: prints.minY + 0.71384 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.77060 * prints.width, y: prints.minY + 0.69360 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.77154 * prints.width, y: prints.minY + 0.69585 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.83801 * prints.width, y: prints.minY + 0.79857 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.75750 * prints.width, y: prints.minY + 0.75583 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.81648 * prints.width, y: prints.minY + 0.82632 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.85111 * prints.width, y: prints.minY + 0.79707 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.84269 * prints.width, y: prints.minY + 0.79258 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.84737 * prints.width, y: prints.minY + 0.79183 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.85018 * prints.width, y: prints.minY + 0.80832 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.85392 * prints.width, y: prints.minY + 0.80157 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.85392 * prints.width, y: prints.minY + 0.80607 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.85486 * prints.width, y: prints.minY + 0.80832 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.84550 * prints.width, y: prints.minY + 0.80982 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.84830 * prints.width, y: prints.minY + 0.80982 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.86047 * prints.width, y: prints.minY + 0.81582 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.86235 * prints.width, y: prints.minY + 0.80757 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.86422 * prints.width, y: prints.minY + 0.80982 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.86141 * prints.width, y: prints.minY + 0.81957 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.85673 * prints.width, y: prints.minY + 0.82032 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.85673 * prints.width, y: prints.minY + 0.82257 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.88481 * prints.width, y: prints.minY + 0.82107 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.86515 * prints.width, y: prints.minY + 0.81657 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.87639 * prints.width, y: prints.minY + 0.81732 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.92600 * prints.width, y: prints.minY + 0.81282 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.89698 * prints.width, y: prints.minY + 0.82632 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.90822 * prints.width, y: prints.minY + 0.82407 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.92694 * prints.width, y: prints.minY + 0.75508 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.95596 * prints.width, y: prints.minY + 0.79333 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.95690 * prints.width, y: prints.minY + 0.78283 * prints.height))
            bezier29Path.addLine(to: CGPoint(x: prints.minX + 0.90354 * prints.width, y: prints.minY + 0.73259 * prints.height))
            bezier29Path.addLine(to: CGPoint(x: prints.minX + 0.93537 * prints.width, y: prints.minY + 0.71759 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.97843 * prints.width, y: prints.minY + 0.65161 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.96345 * prints.width, y: prints.minY + 0.70410 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.96813 * prints.width, y: prints.minY + 0.69735 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.90635 * prints.width, y: prints.minY + 0.35767 * prints.height), controlPoint1: CGPoint(x: prints.minX + 1.01307 * prints.width, y: prints.minY + 0.50764 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.97375 * prints.width, y: prints.minY + 0.34717 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.87077 * prints.width, y: prints.minY + 0.34642 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.89698 * prints.width, y: prints.minY + 0.35917 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.88107 * prints.width, y: prints.minY + 0.35392 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.84924 * prints.width, y: prints.minY + 0.34117 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.86047 * prints.width, y: prints.minY + 0.33893 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.85111 * prints.width, y: prints.minY + 0.33668 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.82864 * prints.width, y: prints.minY + 0.33293 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.84550 * prints.width, y: prints.minY + 0.35017 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.82864 * prints.width, y: prints.minY + 0.34342 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.83801 * prints.width, y: prints.minY + 0.32993 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.82864 * prints.width, y: prints.minY + 0.32843 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.83333 * prints.width, y: prints.minY + 0.32768 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.84737 * prints.width, y: prints.minY + 0.32693 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.84362 * prints.width, y: prints.minY + 0.33218 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.84737 * prints.width, y: prints.minY + 0.33068 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.86609 * prints.width, y: prints.minY + 0.33368 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.84737 * prints.width, y: prints.minY + 0.32243 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.85579 * prints.width, y: prints.minY + 0.32543 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.93162 * prints.width, y: prints.minY + 0.33368 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.88949 * prints.width, y: prints.minY + 0.35242 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.90822 * prints.width, y: prints.minY + 0.35242 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.90260 * prints.width, y: prints.minY + 0.25569 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.95877 * prints.width, y: prints.minY + 0.31193 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.95503 * prints.width, y: prints.minY + 0.30218 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.86328 * prints.width, y: prints.minY + 0.21370 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.87639 * prints.width, y: prints.minY + 0.23245 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.85860 * prints.width, y: prints.minY + 0.21370 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.95034 * prints.width, y: prints.minY + 0.29394 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.87171 * prints.width, y: prints.minY + 0.21370 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.92881 * prints.width, y: prints.minY + 0.26619 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.94660 * prints.width, y: prints.minY + 0.32918 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.96158 * prints.width, y: prints.minY + 0.30743 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.96064 * prints.width, y: prints.minY + 0.31268 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.95315 * prints.width, y: prints.minY + 0.37117 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.93069 * prints.width, y: prints.minY + 0.34867 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.93162 * prints.width, y: prints.minY + 0.35017 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.99996 * prints.width, y: prints.minY + 0.53988 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.98498 * prints.width, y: prints.minY + 0.40041 * prints.height), controlPoint2: CGPoint(x: prints.minX + 1.00090 * prints.width, y: prints.minY + 0.45965 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.92413 * prints.width, y: prints.minY + 0.73109 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.99902 * prints.width, y: prints.minY + 0.65686 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.97000 * prints.width, y: prints.minY + 0.73109 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.93537 * prints.width, y: prints.minY + 0.75433 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.91571 * prints.width, y: prints.minY + 0.73109 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.91852 * prints.width, y: prints.minY + 0.73859 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.93724 * prints.width, y: prints.minY + 0.81282 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.96532 * prints.width, y: prints.minY + 0.78283 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.96532 * prints.width, y: prints.minY + 0.79108 * prints.height))
            bezier29Path.addCurve(to: CGPoint(x: prints.minX + 0.83333 * prints.width, y: prints.minY + 0.81657 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.90728 * prints.width, y: prints.minY + 0.83532 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.87826 * prints.width, y: prints.minY + 0.83682 * prints.height))
            bezier29Path.close()
            MightyMetUI.lime.setFill()
            bezier29Path.fill()


            //// Bezier 30 Drawing
            let bezier30Path = UIBezierPath()
            bezier30Path.move(to: CGPoint(x: prints.minX + 0.46823 * prints.width, y: prints.minY + 0.78358 * prints.height))
            bezier30Path.addCurve(to: CGPoint(x: prints.minX + 0.51878 * prints.width, y: prints.minY + 0.74609 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.49350 * prints.width, y: prints.minY + 0.76333 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.51597 * prints.width, y: prints.minY + 0.74609 * prints.height))
            bezier30Path.addCurve(to: CGPoint(x: prints.minX + 0.47759 * prints.width, y: prints.minY + 0.78358 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.52159 * prints.width, y: prints.minY + 0.74609 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.50286 * prints.width, y: prints.minY + 0.76333 * prints.height))
            bezier30Path.addCurve(to: CGPoint(x: prints.minX + 0.42704 * prints.width, y: prints.minY + 0.82107 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.45231 * prints.width, y: prints.minY + 0.80457 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.42984 * prints.width, y: prints.minY + 0.82107 * prints.height))
            bezier30Path.addCurve(to: CGPoint(x: prints.minX + 0.46823 * prints.width, y: prints.minY + 0.78358 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.42423 * prints.width, y: prints.minY + 0.82107 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.44295 * prints.width, y: prints.minY + 0.80457 * prints.height))
            bezier30Path.close()
            MightyMetUI.lime.setFill()
            bezier30Path.fill()


            //// Bezier 31 Drawing
            let bezier31Path = UIBezierPath()
            bezier31Path.move(to: CGPoint(x: prints.minX + 0.86796 * prints.width, y: prints.minY + 0.80232 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.83520 * prints.width, y: prints.minY + 0.78808 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.85298 * prints.width, y: prints.minY + 0.79258 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.83801 * prints.width, y: prints.minY + 0.78583 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.80524 * prints.width, y: prints.minY + 0.76558 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.83239 * prints.width, y: prints.minY + 0.79033 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.81928 * prints.width, y: prints.minY + 0.77983 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.78745 * prints.width, y: prints.minY + 0.56388 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.77154 * prints.width, y: prints.minY + 0.72959 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76686 * prints.width, y: prints.minY + 0.67935 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.77248 * prints.width, y: prints.minY + 0.39066 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.80431 * prints.width, y: prints.minY + 0.46565 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.80150 * prints.width, y: prints.minY + 0.43715 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.67231 * prints.width, y: prints.minY + 0.30668 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.74720 * prints.width, y: prints.minY + 0.35167 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.68822 * prints.width, y: prints.minY + 0.30218 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.66295 * prints.width, y: prints.minY + 0.30218 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.66575 * prints.width, y: prints.minY + 0.30893 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.66107 * prints.width, y: prints.minY + 0.30668 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.49631 * prints.width, y: prints.minY + 0.26319 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.66669 * prints.width, y: prints.minY + 0.28494 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.57495 * prints.width, y: prints.minY + 0.26394 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.31470 * prints.width, y: prints.minY + 0.31118 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.41393 * prints.width, y: prints.minY + 0.26319 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.37274 * prints.width, y: prints.minY + 0.27369 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.17989 * prints.width, y: prints.minY + 0.45890 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.27725 * prints.width, y: prints.minY + 0.33443 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17989 * prints.width, y: prints.minY + 0.44165 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.17521 * prints.width, y: prints.minY + 0.46490 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17989 * prints.width, y: prints.minY + 0.46415 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17708 * prints.width, y: prints.minY + 0.46715 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.12185 * prints.width, y: prints.minY + 0.50689 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.16772 * prints.width, y: prints.minY + 0.45890 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.11717 * prints.width, y: prints.minY + 0.50014 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.05913 * prints.width, y: prints.minY + 0.54363 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.12747 * prints.width, y: prints.minY + 0.51364 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.07691 * prints.width, y: prints.minY + 0.54363 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.00483 * prints.width, y: prints.minY + 0.49414 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.03947 * prints.width, y: prints.minY + 0.54363 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.00483 * prints.width, y: prints.minY + 0.51139 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.05913 * prints.width, y: prints.minY + 0.44315 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.00483 * prints.width, y: prints.minY + 0.48514 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.02636 * prints.width, y: prints.minY + 0.46490 * prints.height))
            bezier31Path.addLine(to: CGPoint(x: prints.minX + 0.11249 * prints.width, y: prints.minY + 0.40716 * prints.height))
            bezier31Path.addLine(to: CGPoint(x: prints.minX + 0.06287 * prints.width, y: prints.minY + 0.44465 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.03104 * prints.width, y: prints.minY + 0.52338 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.01138 * prints.width, y: prints.minY + 0.48364 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.00296 * prints.width, y: prints.minY + 0.50314 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.09845 * prints.width, y: prints.minY + 0.52039 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.05351 * prints.width, y: prints.minY + 0.53988 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.07036 * prints.width, y: prints.minY + 0.53913 * prints.height))
            bezier31Path.addLine(to: CGPoint(x: prints.minX + 0.12185 * prints.width, y: prints.minY + 0.50464 * prints.height))
            bezier31Path.addLine(to: CGPoint(x: prints.minX + 0.09096 * prints.width, y: prints.minY + 0.51814 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.02543 * prints.width, y: prints.minY + 0.49714 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.05445 * prints.width, y: prints.minY + 0.53463 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.03011 * prints.width, y: prints.minY + 0.52638 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.05913 * prints.width, y: prints.minY + 0.45965 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.02355 * prints.width, y: prints.minY + 0.48289 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.03104 * prints.width, y: prints.minY + 0.47465 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.14900 * prints.width, y: prints.minY + 0.37567 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.08066 * prints.width, y: prints.minY + 0.44765 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.11810 * prints.width, y: prints.minY + 0.41316 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.34933 * prints.width, y: prints.minY + 0.22270 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.21453 * prints.width, y: prints.minY + 0.29768 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.27819 * prints.width, y: prints.minY + 0.24895 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.50099 * prints.width, y: prints.minY + 0.20246 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.39614 * prints.width, y: prints.minY + 0.20470 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.41393 * prints.width, y: prints.minY + 0.20246 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.66295 * prints.width, y: prints.minY + 0.22645 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.59180 * prints.width, y: prints.minY + 0.20246 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.60397 * prints.width, y: prints.minY + 0.20396 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.77435 * prints.width, y: prints.minY + 0.29019 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.70226 * prints.width, y: prints.minY + 0.24145 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.74439 * prints.width, y: prints.minY + 0.26544 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.81179 * prints.width, y: prints.minY + 0.31418 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.80056 * prints.width, y: prints.minY + 0.31193 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.81741 * prints.width, y: prints.minY + 0.32243 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.80805 * prints.width, y: prints.minY + 0.29244 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.80618 * prints.width, y: prints.minY + 0.30518 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.80431 * prints.width, y: prints.minY + 0.29543 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.80150 * prints.width, y: prints.minY + 0.29244 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.81179 * prints.width, y: prints.minY + 0.28869 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.80899 * prints.width, y: prints.minY + 0.28869 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.79588 * prints.width, y: prints.minY + 0.28869 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.79214 * prints.width, y: prints.minY + 0.29693 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.79026 * prints.width, y: prints.minY + 0.29543 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.79120 * prints.width, y: prints.minY + 0.28494 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.80150 * prints.width, y: prints.minY + 0.28194 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.79962 * prints.width, y: prints.minY + 0.28044 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.78558 * prints.width, y: prints.minY + 0.28194 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.78277 * prints.width, y: prints.minY + 0.28944 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.78090 * prints.width, y: prints.minY + 0.28794 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.82396 * prints.width, y: prints.minY + 0.31418 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.79682 * prints.width, y: prints.minY + 0.26769 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.82677 * prints.width, y: prints.minY + 0.29319 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.84830 * prints.width, y: prints.minY + 0.37492 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.82209 * prints.width, y: prints.minY + 0.32393 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.83333 * prints.width, y: prints.minY + 0.35167 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.86141 * prints.width, y: prints.minY + 0.59237 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.88013 * prints.width, y: prints.minY + 0.42591 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.88388 * prints.width, y: prints.minY + 0.47615 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.86515 * prints.width, y: prints.minY + 0.69735 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.84830 * prints.width, y: prints.minY + 0.66135 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.84924 * prints.width, y: prints.minY + 0.66810 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.91290 * prints.width, y: prints.minY + 0.75583 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.87452 * prints.width, y: prints.minY + 0.71384 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.89605 * prints.width, y: prints.minY + 0.74084 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.91383 * prints.width, y: prints.minY + 0.81282 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.94473 * prints.width, y: prints.minY + 0.78508 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.94473 * prints.width, y: prints.minY + 0.80007 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.86796 * prints.width, y: prints.minY + 0.80232 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.89886 * prints.width, y: prints.minY + 0.81957 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.89043 * prints.width, y: prints.minY + 0.81732 * prints.height))
            bezier31Path.close()
            bezier31Path.move(to: CGPoint(x: prints.minX + 0.81179 * prints.width, y: prints.minY + 0.75058 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.78277 * prints.width, y: prints.minY + 0.72059 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.79775 * prints.width, y: prints.minY + 0.73259 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.78465 * prints.width, y: prints.minY + 0.71909 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.83333 * prints.width, y: prints.minY + 0.78358 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.77903 * prints.width, y: prints.minY + 0.72359 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.82677 * prints.width, y: prints.minY + 0.78358 * prints.height))
            bezier31Path.addCurve(to: CGPoint(x: prints.minX + 0.81179 * prints.width, y: prints.minY + 0.75058 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.83520 * prints.width, y: prints.minY + 0.78358 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.82584 * prints.width, y: prints.minY + 0.76858 * prints.height))
            bezier31Path.close()
            MightyMetUI.lime.setFill()
            bezier31Path.fill()


            //// Bezier 32 Drawing
            let bezier32Path = UIBezierPath()
            bezier32Path.move(to: CGPoint(x: prints.minX + 0.88669 * prints.width, y: prints.minY + 0.71984 * prints.height))
            bezier32Path.addCurve(to: CGPoint(x: prints.minX + 0.89043 * prints.width, y: prints.minY + 0.64636 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.88107 * prints.width, y: prints.minY + 0.71159 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.88294 * prints.width, y: prints.minY + 0.68535 * prints.height))
            bezier32Path.addCurve(to: CGPoint(x: prints.minX + 0.90166 * prints.width, y: prints.minY + 0.52863 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.89792 * prints.width, y: prints.minY + 0.61262 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.90260 * prints.width, y: prints.minY + 0.55938 * prints.height))
            bezier32Path.addCurve(to: CGPoint(x: prints.minX + 0.89324 * prints.width, y: prints.minY + 0.55113 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.90073 * prints.width, y: prints.minY + 0.47390 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.90073 * prints.width, y: prints.minY + 0.47390 * prints.height))
            bezier32Path.addCurve(to: CGPoint(x: prints.minX + 0.87732 * prints.width, y: prints.minY + 0.66360 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.88949 * prints.width, y: prints.minY + 0.59462 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.88201 * prints.width, y: prints.minY + 0.64486 * prints.height))
            bezier32Path.addLine(to: CGPoint(x: prints.minX + 0.86796 * prints.width, y: prints.minY + 0.69735 * prints.height))
            bezier32Path.addLine(to: CGPoint(x: prints.minX + 0.86703 * prints.width, y: prints.minY + 0.65985 * prints.height))
            bezier32Path.addCurve(to: CGPoint(x: prints.minX + 0.88013 * prints.width, y: prints.minY + 0.53688 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.86703 * prints.width, y: prints.minY + 0.63961 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.87264 * prints.width, y: prints.minY + 0.58412 * prints.height))
            bezier32Path.addCurve(to: CGPoint(x: prints.minX + 0.88388 * prints.width, y: prints.minY + 0.42591 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.89137 * prints.width, y: prints.minY + 0.47090 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.89230 * prints.width, y: prints.minY + 0.44465 * prints.height))
            bezier32Path.addCurve(to: CGPoint(x: prints.minX + 0.87826 * prints.width, y: prints.minY + 0.38542 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.87826 * prints.width, y: prints.minY + 0.41166 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.87545 * prints.width, y: prints.minY + 0.39366 * prints.height))
            bezier32Path.addCurve(to: CGPoint(x: prints.minX + 0.87358 * prints.width, y: prints.minY + 0.37567 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.88107 * prints.width, y: prints.minY + 0.37717 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.87920 * prints.width, y: prints.minY + 0.37267 * prints.height))
            bezier32Path.addCurve(to: CGPoint(x: prints.minX + 0.84737 * prints.width, y: prints.minY + 0.35242 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.86422 * prints.width, y: prints.minY + 0.38092 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.84737 * prints.width, y: prints.minY + 0.36592 * prints.height))
            bezier32Path.addCurve(to: CGPoint(x: prints.minX + 0.85673 * prints.width, y: prints.minY + 0.35617 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.84737 * prints.width, y: prints.minY + 0.34867 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.85205 * prints.width, y: prints.minY + 0.35017 * prints.height))
            bezier32Path.addCurve(to: CGPoint(x: prints.minX + 0.90073 * prints.width, y: prints.minY + 0.36742 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.86141 * prints.width, y: prints.minY + 0.36292 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.87920 * prints.width, y: prints.minY + 0.36742 * prints.height))
            bezier32Path.addCurve(to: CGPoint(x: prints.minX + 0.95409 * prints.width, y: prints.minY + 0.39741 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.93256 * prints.width, y: prints.minY + 0.36742 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.93817 * prints.width, y: prints.minY + 0.37042 * prints.height))
            bezier32Path.addCurve(to: CGPoint(x: prints.minX + 0.94005 * prints.width, y: prints.minY + 0.70859 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.99247 * prints.width, y: prints.minY + 0.46040 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.98217 * prints.width, y: prints.minY + 0.69060 * prints.height))
            bezier32Path.addCurve(to: CGPoint(x: prints.minX + 0.90166 * prints.width, y: prints.minY + 0.70784 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.92788 * prints.width, y: prints.minY + 0.71459 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.91571 * prints.width, y: prints.minY + 0.71384 * prints.height))
            bezier32Path.addCurve(to: CGPoint(x: prints.minX + 0.89324 * prints.width, y: prints.minY + 0.71159 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.88201 * prints.width, y: prints.minY + 0.69960 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.88107 * prints.width, y: prints.minY + 0.69960 * prints.height))
            bezier32Path.addCurve(to: CGPoint(x: prints.minX + 0.90073 * prints.width, y: prints.minY + 0.72809 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.90073 * prints.width, y: prints.minY + 0.71834 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.90354 * prints.width, y: prints.minY + 0.72584 * prints.height))
            bezier32Path.addCurve(to: CGPoint(x: prints.minX + 0.88669 * prints.width, y: prints.minY + 0.71984 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.89792 * prints.width, y: prints.minY + 0.73034 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.89230 * prints.width, y: prints.minY + 0.72659 * prints.height))
            bezier32Path.close()
            MightyMetUI.lime.setFill()
            bezier32Path.fill()


            //// Bezier 33 Drawing
            let bezier33Path = UIBezierPath()
            bezier33Path.move(to: CGPoint(x: prints.minX + 0.63580 * prints.width, y: prints.minY + 0.71009 * prints.height))
            bezier33Path.addCurve(to: CGPoint(x: prints.minX + 0.63393 * prints.width, y: prints.minY + 0.67935 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.62924 * prints.width, y: prints.minY + 0.70185 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.62831 * prints.width, y: prints.minY + 0.69060 * prints.height))
            bezier33Path.addCurve(to: CGPoint(x: prints.minX + 0.64048 * prints.width, y: prints.minY + 0.63811 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.63767 * prints.width, y: prints.minY + 0.66960 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64141 * prints.width, y: prints.minY + 0.65086 * prints.height))
            bezier33Path.addCurve(to: CGPoint(x: prints.minX + 0.64984 * prints.width, y: prints.minY + 0.59612 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.63954 * prints.width, y: prints.minY + 0.62536 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64329 * prints.width, y: prints.minY + 0.60662 * prints.height))
            bezier33Path.addCurve(to: CGPoint(x: prints.minX + 0.65358 * prints.width, y: prints.minY + 0.62236 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.65827 * prints.width, y: prints.minY + 0.58112 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.65827 * prints.width, y: prints.minY + 0.58637 * prints.height))
            bezier33Path.addCurve(to: CGPoint(x: prints.minX + 0.64890 * prints.width, y: prints.minY + 0.69585 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.64984 * prints.width, y: prints.minY + 0.64711 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64703 * prints.width, y: prints.minY + 0.68010 * prints.height))
            bezier33Path.addCurve(to: CGPoint(x: prints.minX + 0.63580 * prints.width, y: prints.minY + 0.71009 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.65078 * prints.width, y: prints.minY + 0.72734 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64984 * prints.width, y: prints.minY + 0.72884 * prints.height))
            bezier33Path.close()
            MightyMetUI.lime.setFill()
            bezier33Path.fill()


            //// Bezier 34 Drawing
            let bezier34Path = UIBezierPath()
            bezier34Path.move(to: CGPoint(x: prints.minX + 0.20610 * prints.width, y: prints.minY + 0.58112 * prints.height))
            bezier34Path.addCurve(to: CGPoint(x: prints.minX + 0.24729 * prints.width, y: prints.minY + 0.55113 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.22576 * prints.width, y: prints.minY + 0.56463 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.24449 * prints.width, y: prints.minY + 0.55113 * prints.height))
            bezier34Path.addCurve(to: CGPoint(x: prints.minX + 0.21546 * prints.width, y: prints.minY + 0.58112 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.25010 * prints.width, y: prints.minY + 0.55113 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.23512 * prints.width, y: prints.minY + 0.56463 * prints.height))
            bezier34Path.addCurve(to: CGPoint(x: prints.minX + 0.17427 * prints.width, y: prints.minY + 0.61112 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.19581 * prints.width, y: prints.minY + 0.59762 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17708 * prints.width, y: prints.minY + 0.61112 * prints.height))
            bezier34Path.addCurve(to: CGPoint(x: prints.minX + 0.20610 * prints.width, y: prints.minY + 0.58112 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17147 * prints.width, y: prints.minY + 0.61112 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.18644 * prints.width, y: prints.minY + 0.59762 * prints.height))
            bezier34Path.close()
            MightyMetUI.lime.setFill()
            bezier34Path.fill()


            //// Bezier 35 Drawing
            let bezier35Path = UIBezierPath()
            bezier35Path.move(to: CGPoint(x: prints.minX + 0.62176 * prints.width, y: prints.minY + 0.40341 * prints.height))
            bezier35Path.addCurve(to: CGPoint(x: prints.minX + 0.62550 * prints.width, y: prints.minY + 0.40041 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60959 * prints.width, y: prints.minY + 0.39141 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.61052 * prints.width, y: prints.minY + 0.39066 * prints.height))
            bezier35Path.addCurve(to: CGPoint(x: prints.minX + 0.63767 * prints.width, y: prints.minY + 0.41616 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.64048 * prints.width, y: prints.minY + 0.41016 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64516 * prints.width, y: prints.minY + 0.41616 * prints.height))
            bezier35Path.addCurve(to: CGPoint(x: prints.minX + 0.62176 * prints.width, y: prints.minY + 0.40341 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.63580 * prints.width, y: prints.minY + 0.41616 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.62831 * prints.width, y: prints.minY + 0.41016 * prints.height))
            bezier35Path.close()
            MightyMetUI.lime.setFill()
            bezier35Path.fill()


            //// Bezier 36 Drawing
            let bezier36Path = UIBezierPath()
            bezier36Path.move(to: CGPoint(x: prints.minX + 0.11436 * prints.width, y: prints.minY + 0.39591 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.10687 * prints.width, y: prints.minY + 0.39216 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.11904 * prints.width, y: prints.minY + 0.38467 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.11717 * prints.width, y: prints.minY + 0.38392 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.07504 * prints.width, y: prints.minY + 0.40116 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.10032 * prints.width, y: prints.minY + 0.39666 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.08534 * prints.width, y: prints.minY + 0.40116 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.01419 * prints.width, y: prints.minY + 0.35467 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.05257 * prints.width, y: prints.minY + 0.40116 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.01419 * prints.width, y: prints.minY + 0.37192 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.11904 * prints.width, y: prints.minY + 0.23170 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.01419 * prints.width, y: prints.minY + 0.34192 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.10032 * prints.width, y: prints.minY + 0.24070 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.12091 * prints.width, y: prints.minY + 0.23695 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.12840 * prints.width, y: prints.minY + 0.22720 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.12840 * prints.width, y: prints.minY + 0.22870 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.02355 * prints.width, y: prints.minY + 0.35617 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.06474 * prints.width, y: prints.minY + 0.29543 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.02355 * prints.width, y: prints.minY + 0.34492 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.07317 * prints.width, y: prints.minY + 0.39366 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.02355 * prints.width, y: prints.minY + 0.37192 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.05257 * prints.width, y: prints.minY + 0.39366 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.10687 * prints.width, y: prints.minY + 0.37942 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.08159 * prints.width, y: prints.minY + 0.39366 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.09751 * prints.width, y: prints.minY + 0.38691 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.13121 * prints.width, y: prints.minY + 0.36967 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.11717 * prints.width, y: prints.minY + 0.37117 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.12747 * prints.width, y: prints.minY + 0.36742 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.13121 * prints.width, y: prints.minY + 0.35992 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.13402 * prints.width, y: prints.minY + 0.37267 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.13402 * prints.width, y: prints.minY + 0.36817 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.13589 * prints.width, y: prints.minY + 0.35617 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.12559 * prints.width, y: prints.minY + 0.34717 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.12653 * prints.width, y: prints.minY + 0.34642 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.14151 * prints.width, y: prints.minY + 0.35392 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.14525 * prints.width, y: prints.minY + 0.36592 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.14619 * prints.width, y: prints.minY + 0.36517 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.14525 * prints.width, y: prints.minY + 0.34492 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.13870 * prints.width, y: prints.minY + 0.34567 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.13964 * prints.width, y: prints.minY + 0.34192 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.15368 * prints.width, y: prints.minY + 0.34342 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.15087 * prints.width, y: prints.minY + 0.34792 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.15461 * prints.width, y: prints.minY + 0.34717 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.16585 * prints.width, y: prints.minY + 0.32318 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.14993 * prints.width, y: prints.minY + 0.32768 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.15555 * prints.width, y: prints.minY + 0.31793 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.16866 * prints.width, y: prints.minY + 0.31868 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17240 * prints.width, y: prints.minY + 0.32693 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17334 * prints.width, y: prints.minY + 0.32543 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.17147 * prints.width, y: prints.minY + 0.31418 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.16398 * prints.width, y: prints.minY + 0.31193 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.16491 * prints.width, y: prints.minY + 0.31043 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.17708 * prints.width, y: prints.minY + 0.30893 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17895 * prints.width, y: prints.minY + 0.31718 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.18083 * prints.width, y: prints.minY + 0.31568 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.18176 * prints.width, y: prints.minY + 0.29244 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17427 * prints.width, y: prints.minY + 0.30293 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.17615 * prints.width, y: prints.minY + 0.29543 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.19206 * prints.width, y: prints.minY + 0.29768 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.18738 * prints.width, y: prints.minY + 0.29019 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.19206 * prints.width, y: prints.minY + 0.29244 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.20049 * prints.width, y: prints.minY + 0.29618 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.19206 * prints.width, y: prints.minY + 0.30518 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.19487 * prints.width, y: prints.minY + 0.30443 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.20423 * prints.width, y: prints.minY + 0.27819 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.20610 * prints.width, y: prints.minY + 0.29019 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.20704 * prints.width, y: prints.minY + 0.28269 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.21078 * prints.width, y: prints.minY + 0.27744 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.20049 * prints.width, y: prints.minY + 0.27444 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.20329 * prints.width, y: prints.minY + 0.27369 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.21546 * prints.width, y: prints.minY + 0.27369 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.21921 * prints.width, y: prints.minY + 0.28194 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.22108 * prints.width, y: prints.minY + 0.28044 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.22015 * prints.width, y: prints.minY + 0.26994 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.20985 * prints.width, y: prints.minY + 0.26694 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.21172 * prints.width, y: prints.minY + 0.26544 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.22483 * prints.width, y: prints.minY + 0.26619 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.22857 * prints.width, y: prints.minY + 0.27444 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.23044 * prints.width, y: prints.minY + 0.27294 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.22951 * prints.width, y: prints.minY + 0.26244 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.21921 * prints.width, y: prints.minY + 0.25944 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.22108 * prints.width, y: prints.minY + 0.25794 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.23419 * prints.width, y: prints.minY + 0.25869 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.23793 * prints.width, y: prints.minY + 0.26694 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.23980 * prints.width, y: prints.minY + 0.26544 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.23512 * prints.width, y: prints.minY + 0.25344 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.22951 * prints.width, y: prints.minY + 0.25269 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.23044 * prints.width, y: prints.minY + 0.25044 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.25759 * prints.width, y: prints.minY + 0.25044 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.24074 * prints.width, y: prints.minY + 0.25569 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.25010 * prints.width, y: prints.minY + 0.25494 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.25946 * prints.width, y: prints.minY + 0.24370 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.26789 * prints.width, y: prints.minY + 0.24595 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.26883 * prints.width, y: prints.minY + 0.24370 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.25291 * prints.width, y: prints.minY + 0.23545 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.25291 * prints.width, y: prints.minY + 0.24370 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.25010 * prints.width, y: prints.minY + 0.23995 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.27257 * prints.width, y: prints.minY + 0.23170 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.25666 * prints.width, y: prints.minY + 0.23095 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.26508 * prints.width, y: prints.minY + 0.22945 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.28287 * prints.width, y: prints.minY + 0.22720 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.28006 * prints.width, y: prints.minY + 0.23395 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.28474 * prints.width, y: prints.minY + 0.23170 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.29410 * prints.width, y: prints.minY + 0.21520 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.28193 * prints.width, y: prints.minY + 0.22270 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.28661 * prints.width, y: prints.minY + 0.21745 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.30065 * prints.width, y: prints.minY + 0.22045 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.30159 * prints.width, y: prints.minY + 0.21295 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.30440 * prints.width, y: prints.minY + 0.21520 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.30908 * prints.width, y: prints.minY + 0.22345 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.29597 * prints.width, y: prints.minY + 0.22570 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.29972 * prints.width, y: prints.minY + 0.22720 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.31189 * prints.width, y: prints.minY + 0.21220 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.32219 * prints.width, y: prints.minY + 0.21970 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.32219 * prints.width, y: prints.minY + 0.21745 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.32312 * prints.width, y: prints.minY + 0.20995 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.30346 * prints.width, y: prints.minY + 0.20770 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.30721 * prints.width, y: prints.minY + 0.20695 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.33248 * prints.width, y: prints.minY + 0.20620 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.34185 * prints.width, y: prints.minY + 0.21370 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.34372 * prints.width, y: prints.minY + 0.21295 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.33997 * prints.width, y: prints.minY + 0.20096 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.32125 * prints.width, y: prints.minY + 0.19871 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.32219 * prints.width, y: prints.minY + 0.19796 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.35589 * prints.width, y: prints.minY + 0.19871 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.35121 * prints.width, y: prints.minY + 0.20321 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.35870 * prints.width, y: prints.minY + 0.20171 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.52908 * prints.width, y: prints.minY + 0.17846 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.34653 * prints.width, y: prints.minY + 0.18671 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.45699 * prints.width, y: prints.minY + 0.17396 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.68261 * prints.width, y: prints.minY + 0.21445 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60397 * prints.width, y: prints.minY + 0.18296 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.69197 * prints.width, y: prints.minY + 0.20321 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.69384 * prints.width, y: prints.minY + 0.21595 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.67980 * prints.width, y: prints.minY + 0.21820 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.68541 * prints.width, y: prints.minY + 0.21895 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.70320 * prints.width, y: prints.minY + 0.22045 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.70507 * prints.width, y: prints.minY + 0.21295 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.70788 * prints.width, y: prints.minY + 0.21370 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.70414 * prints.width, y: prints.minY + 0.22795 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.69946 * prints.width, y: prints.minY + 0.22495 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.69946 * prints.width, y: prints.minY + 0.22870 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.72941 * prints.width, y: prints.minY + 0.23770 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.72380 * prints.width, y: prints.minY + 0.22495 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.73597 * prints.width, y: prints.minY + 0.22945 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.73503 * prints.width, y: prints.minY + 0.23995 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.72473 * prints.width, y: prints.minY + 0.24295 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.72660 * prints.width, y: prints.minY + 0.24370 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.74065 * prints.width, y: prints.minY + 0.24220 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.74346 * prints.width, y: prints.minY + 0.23620 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.74533 * prints.width, y: prints.minY + 0.23695 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.75001 * prints.width, y: prints.minY + 0.24595 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.73597 * prints.width, y: prints.minY + 0.24820 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.73971 * prints.width, y: prints.minY + 0.24970 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.75843 * prints.width, y: prints.minY + 0.25119 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.76218 * prints.width, y: prints.minY + 0.24220 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76405 * prints.width, y: prints.minY + 0.24370 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.76311 * prints.width, y: prints.minY + 0.25494 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.75282 * prints.width, y: prints.minY + 0.25794 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.75469 * prints.width, y: prints.minY + 0.25944 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.76967 * prints.width, y: prints.minY + 0.25644 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.77060 * prints.width, y: prints.minY + 0.25119 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.77341 * prints.width, y: prints.minY + 0.25194 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.77716 * prints.width, y: prints.minY + 0.26394 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.76686 * prints.width, y: prints.minY + 0.26019 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76967 * prints.width, y: prints.minY + 0.26394 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.71256 * prints.width, y: prints.minY + 0.21445 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.79962 * prints.width, y: prints.minY + 0.26394 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76686 * prints.width, y: prints.minY + 0.23920 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.47384 * prints.width, y: prints.minY + 0.17096 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.63486 * prints.width, y: prints.minY + 0.17921 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.56559 * prints.width, y: prints.minY + 0.16646 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.13870 * prints.width, y: prints.minY + 0.33218 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.32687 * prints.width, y: prints.minY + 0.17771 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.24355 * prints.width, y: prints.minY + 0.21820 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.04415 * prints.width, y: prints.minY + 0.37717 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.08908 * prints.width, y: prints.minY + 0.38542 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.06755 * prints.width, y: prints.minY + 0.39591 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.07223 * prints.width, y: prints.minY + 0.30143 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.02636 * prints.width, y: prints.minY + 0.36292 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.03104 * prints.width, y: prints.minY + 0.35092 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.26695 * prints.width, y: prints.minY + 0.14997 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.12653 * prints.width, y: prints.minY + 0.23695 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.20704 * prints.width, y: prints.minY + 0.17396 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.71163 * prints.width, y: prints.minY + 0.14547 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.41112 * prints.width, y: prints.minY + 0.09148 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.57027 * prints.width, y: prints.minY + 0.08998 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.93630 * prints.width, y: prints.minY + 0.31793 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.82584 * prints.width, y: prints.minY + 0.19121 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.94941 * prints.width, y: prints.minY + 0.28569 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.86890 * prints.width, y: prints.minY + 0.32468 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.92694 * prints.width, y: prints.minY + 0.34192 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.89605 * prints.width, y: prints.minY + 0.34492 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.83988 * prints.width, y: prints.minY + 0.30893 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.85673 * prints.width, y: prints.minY + 0.31568 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.84269 * prints.width, y: prints.minY + 0.30818 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.83613 * prints.width, y: prints.minY + 0.30068 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.83613 * prints.width, y: prints.minY + 0.30968 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.83426 * prints.width, y: prints.minY + 0.30593 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.78933 * prints.width, y: prints.minY + 0.27219 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.83988 * prints.width, y: prints.minY + 0.28494 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.80243 * prints.width, y: prints.minY + 0.26169 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.74346 * prints.width, y: prints.minY + 0.25794 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.78184 * prints.width, y: prints.minY + 0.27819 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76967 * prints.width, y: prints.minY + 0.27519 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.65358 * prints.width, y: prints.minY + 0.21520 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.72473 * prints.width, y: prints.minY + 0.24595 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.68354 * prints.width, y: prints.minY + 0.22645 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.50099 * prints.width, y: prints.minY + 0.19496 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60490 * prints.width, y: prints.minY + 0.19721 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.58805 * prints.width, y: prints.minY + 0.19496 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.34091 * prints.width, y: prints.minY + 0.21820 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.41018 * prints.width, y: prints.minY + 0.19496 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.39801 * prints.width, y: prints.minY + 0.19646 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.14806 * prints.width, y: prints.minY + 0.36517 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.27070 * prints.width, y: prints.minY + 0.24520 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.19768 * prints.width, y: prints.minY + 0.29993 * prints.height))
            bezier36Path.addCurve(to: CGPoint(x: prints.minX + 0.11436 * prints.width, y: prints.minY + 0.39591 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.11342 * prints.width, y: prints.minY + 0.41016 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.10406 * prints.width, y: prints.minY + 0.41841 * prints.height))
            bezier36Path.close()
            MightyMetUI.lime.setFill()
            bezier36Path.fill()


            //// Bezier 37 Drawing
            let bezier37Path = UIBezierPath()
            bezier37Path.move(to: CGPoint(x: prints.minX + 0.70601 * prints.width, y: prints.minY + 0.33593 * prints.height))
            bezier37Path.addCurve(to: CGPoint(x: prints.minX + 0.70975 * prints.width, y: prints.minY + 0.33293 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.69384 * prints.width, y: prints.minY + 0.32393 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.69478 * prints.width, y: prints.minY + 0.32318 * prints.height))
            bezier37Path.addCurve(to: CGPoint(x: prints.minX + 0.72192 * prints.width, y: prints.minY + 0.34867 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.72473 * prints.width, y: prints.minY + 0.34267 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.72941 * prints.width, y: prints.minY + 0.34867 * prints.height))
            bezier37Path.addCurve(to: CGPoint(x: prints.minX + 0.70601 * prints.width, y: prints.minY + 0.33593 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.72005 * prints.width, y: prints.minY + 0.34867 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.71256 * prints.width, y: prints.minY + 0.34267 * prints.height))
            bezier37Path.close()
            MightyMetUI.lime.setFill()
            bezier37Path.fill()


            //// Bezier 38 Drawing
            let bezier38Path = UIBezierPath()
            bezier38Path.move(to: CGPoint(x: prints.minX + 0.11717 * prints.width, y: prints.minY + 0.22270 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.06100 * prints.width, y: prints.minY + 0.17246 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.09189 * prints.width, y: prints.minY + 0.21670 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.06100 * prints.width, y: prints.minY + 0.18896 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.20610 * prints.width, y: prints.minY + 0.05999 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.06100 * prints.width, y: prints.minY + 0.15147 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.13496 * prints.width, y: prints.minY + 0.09448 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.49163 * prints.width, y: prints.minY + 0.00000 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.29410 * prints.width, y: prints.minY + 0.01800 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.37648 * prints.width, y: prints.minY + 0.00075 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.74252 * prints.width, y: prints.minY + 0.03824 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.59648 * prints.width, y: prints.minY + 0.00000 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.66201 * prints.width, y: prints.minY + 0.01050 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.90915 * prints.width, y: prints.minY + 0.13572 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.81273 * prints.width, y: prints.minY + 0.06299 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.90260 * prints.width, y: prints.minY + 0.11547 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.86515 * prints.width, y: prints.minY + 0.18896 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.91664 * prints.width, y: prints.minY + 0.15971 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.89698 * prints.width, y: prints.minY + 0.18371 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.84924 * prints.width, y: prints.minY + 0.20470 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.84175 * prints.width, y: prints.minY + 0.19271 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.83988 * prints.width, y: prints.minY + 0.19496 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.81460 * prints.width, y: prints.minY + 0.18746 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.85579 * prints.width, y: prints.minY + 0.21070 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.84081 * prints.width, y: prints.minY + 0.20321 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.56933 * prints.width, y: prints.minY + 0.10123 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.74626 * prints.width, y: prints.minY + 0.14547 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.64610 * prints.width, y: prints.minY + 0.11023 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.17802 * prints.width, y: prints.minY + 0.19271 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.43172 * prints.width, y: prints.minY + 0.08398 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.27912 * prints.width, y: prints.minY + 0.11997 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.11717 * prints.width, y: prints.minY + 0.22270 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.15181 * prints.width, y: prints.minY + 0.21145 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.12466 * prints.width, y: prints.minY + 0.22495 * prints.height))
            bezier38Path.close()
            bezier38Path.move(to: CGPoint(x: prints.minX + 0.17521 * prints.width, y: prints.minY + 0.17996 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.52908 * prints.width, y: prints.minY + 0.08848 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.26508 * prints.width, y: prints.minY + 0.11173 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.38210 * prints.width, y: prints.minY + 0.08173 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.72941 * prints.width, y: prints.minY + 0.13197 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.61988 * prints.width, y: prints.minY + 0.09223 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.74065 * prints.width, y: prints.minY + 0.11847 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.74065 * prints.width, y: prints.minY + 0.13347 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.72660 * prints.width, y: prints.minY + 0.13572 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.73222 * prints.width, y: prints.minY + 0.13647 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.75001 * prints.width, y: prints.minY + 0.13722 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.75188 * prints.width, y: prints.minY + 0.13047 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.75469 * prints.width, y: prints.minY + 0.13122 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.75843 * prints.width, y: prints.minY + 0.14172 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.74533 * prints.width, y: prints.minY + 0.14322 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.74814 * prints.width, y: prints.minY + 0.14472 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.77060 * prints.width, y: prints.minY + 0.14697 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.76780 * prints.width, y: prints.minY + 0.13872 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.77248 * prints.width, y: prints.minY + 0.14022 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.78465 * prints.width, y: prints.minY + 0.15522 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.76873 * prints.width, y: prints.minY + 0.15372 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.77435 * prints.width, y: prints.minY + 0.15672 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.79869 * prints.width, y: prints.minY + 0.16271 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.79401 * prints.width, y: prints.minY + 0.15372 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.79962 * prints.width, y: prints.minY + 0.15672 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.80805 * prints.width, y: prints.minY + 0.17321 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.79682 * prints.width, y: prints.minY + 0.16721 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.80150 * prints.width, y: prints.minY + 0.17246 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.82958 * prints.width, y: prints.minY + 0.17546 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.81367 * prints.width, y: prints.minY + 0.17396 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.82396 * prints.width, y: prints.minY + 0.17471 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.83333 * prints.width, y: prints.minY + 0.18296 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.83426 * prints.width, y: prints.minY + 0.17546 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.83707 * prints.width, y: prints.minY + 0.17921 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.85860 * prints.width, y: prints.minY + 0.18371 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.83052 * prints.width, y: prints.minY + 0.18746 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.83988 * prints.width, y: prints.minY + 0.18746 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.87826 * prints.width, y: prints.minY + 0.11472 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.91009 * prints.width, y: prints.minY + 0.17171 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.91758 * prints.width, y: prints.minY + 0.14472 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.68354 * prints.width, y: prints.minY + 0.02849 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.83239 * prints.width, y: prints.minY + 0.08098 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.76031 * prints.width, y: prints.minY + 0.04874 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.32780 * prints.width, y: prints.minY + 0.02399 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.58056 * prints.width, y: prints.minY + 0.00150 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.42516 * prints.width, y: prints.minY + 0.00000 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.07036 * prints.width, y: prints.minY + 0.17171 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.21453 * prints.width, y: prints.minY + 0.05249 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.07036 * prints.width, y: prints.minY + 0.13497 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.11530 * prints.width, y: prints.minY + 0.21370 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.07036 * prints.width, y: prints.minY + 0.18971 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.09657 * prints.width, y: prints.minY + 0.21370 * prints.height))
            bezier38Path.addCurve(to: CGPoint(x: prints.minX + 0.17521 * prints.width, y: prints.minY + 0.17996 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.12279 * prints.width, y: prints.minY + 0.21370 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.14993 * prints.width, y: prints.minY + 0.19871 * prints.height))
            bezier38Path.close()
            MightyMetUI.lime.setFill()
            bezier38Path.fill()


            //// Bezier 39 Drawing
            let bezier39Path = UIBezierPath()
            bezier39Path.move(to: CGPoint(x: prints.minX + 0.09096 * prints.width, y: prints.minY + 0.19721 * prints.height))
            bezier39Path.addCurve(to: CGPoint(x: prints.minX + 0.12559 * prints.width, y: prints.minY + 0.12372 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.06942 * prints.width, y: prints.minY + 0.17996 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.07972 * prints.width, y: prints.minY + 0.15822 * prints.height))
            bezier39Path.addCurve(to: CGPoint(x: prints.minX + 0.33716 * prints.width, y: prints.minY + 0.02924 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.17989 * prints.width, y: prints.minY + 0.08323 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.25853 * prints.width, y: prints.minY + 0.04799 * prints.height))
            bezier39Path.addCurve(to: CGPoint(x: prints.minX + 0.64984 * prints.width, y: prints.minY + 0.02849 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.41299 * prints.width, y: prints.minY + 0.01125 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.56839 * prints.width, y: prints.minY + 0.01125 * prints.height))
            bezier39Path.addCurve(to: CGPoint(x: prints.minX + 0.89230 * prints.width, y: prints.minY + 0.14847 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.76967 * prints.width, y: prints.minY + 0.05474 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.89792 * prints.width, y: prints.minY + 0.11772 * prints.height))
            bezier39Path.addCurve(to: CGPoint(x: prints.minX + 0.83801 * prints.width, y: prints.minY + 0.17021 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.88762 * prints.width, y: prints.minY + 0.17096 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.86141 * prints.width, y: prints.minY + 0.18221 * prints.height))
            bezier39Path.addCurve(to: CGPoint(x: prints.minX + 0.80899 * prints.width, y: prints.minY + 0.16496 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.82677 * prints.width, y: prints.minY + 0.16496 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.81460 * prints.width, y: prints.minY + 0.16271 * prints.height))
            bezier39Path.addCurve(to: CGPoint(x: prints.minX + 0.80243 * prints.width, y: prints.minY + 0.15971 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.80431 * prints.width, y: prints.minY + 0.16796 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.80150 * prints.width, y: prints.minY + 0.16571 * prints.height))
            bezier39Path.addCurve(to: CGPoint(x: prints.minX + 0.78933 * prints.width, y: prints.minY + 0.15072 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.80431 * prints.width, y: prints.minY + 0.15447 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.79775 * prints.width, y: prints.minY + 0.15072 * prints.height))
            bezier39Path.addCurve(to: CGPoint(x: prints.minX + 0.77716 * prints.width, y: prints.minY + 0.14547 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.77997 * prints.width, y: prints.minY + 0.15147 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.77528 * prints.width, y: prints.minY + 0.14922 * prints.height))
            bezier39Path.addCurve(to: CGPoint(x: prints.minX + 0.63486 * prints.width, y: prints.minY + 0.09073 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.78465 * prints.width, y: prints.minY + 0.13647 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.70133 * prints.width, y: prints.minY + 0.10423 * prints.height))
            bezier39Path.addCurve(to: CGPoint(x: prints.minX + 0.49537 * prints.width, y: prints.minY + 0.07873 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.60303 * prints.width, y: prints.minY + 0.08398 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.54031 * prints.width, y: prints.minY + 0.07873 * prints.height))
            bezier39Path.addCurve(to: CGPoint(x: prints.minX + 0.17895 * prints.width, y: prints.minY + 0.16946 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.35963 * prints.width, y: prints.minY + 0.07873 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.26602 * prints.width, y: prints.minY + 0.10573 * prints.height))
            bezier39Path.addCurve(to: CGPoint(x: prints.minX + 0.09096 * prints.width, y: prints.minY + 0.19721 * prints.height), controlPoint1: CGPoint(x: prints.minX + 0.12653 * prints.width, y: prints.minY + 0.20770 * prints.height), controlPoint2: CGPoint(x: prints.minX + 0.11062 * prints.width, y: prints.minY + 0.21295 * prints.height))
            bezier39Path.close()
            MightyMetUI.lime.setFill()
            bezier39Path.fill()


        }




        //// Track
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: track.minX + 0.99993 * track.width, y: track.minY + 0.49157 * track.height))
        bezierPath.addLine(to: CGPoint(x: track.minX + 0.84265 * track.width, y: track.minY + 0.49157 * track.height))
        bezierPath.addCurve(to: CGPoint(x: track.minX + 0.50562 * track.width, y: track.minY + 0.15731 * track.height), controlPoint1: CGPoint(x: track.minX + 0.83967 * track.width, y: track.minY + 0.30738 * track.height), controlPoint2: CGPoint(x: track.minX + 0.69017 * track.width, y: track.minY + 0.15881 * track.height))
        bezierPath.addCurve(to: CGPoint(x: track.minX + 0.50562 * track.width, y: track.minY + 0.00003 * track.height), controlPoint1: CGPoint(x: track.minX + 0.50562 * track.width, y: track.minY + 0.08416 * track.height), controlPoint2: CGPoint(x: track.minX + 0.50562 * track.width, y: track.minY + 0.00191 * track.height))
        bezierPath.addCurve(to: CGPoint(x: track.minX + 0.99993 * track.width, y: track.minY + 0.49157 * track.height), controlPoint1: CGPoint(x: track.minX + 0.77636 * track.width, y: track.minY + 0.00301 * track.height), controlPoint2: CGPoint(x: track.minX + 0.99546 * track.width, y: track.minY + 0.22118 * track.height))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: track.minX + 0.50000 * track.width, y: track.minY + 0.00002 * track.height))
        bezierPath.addCurve(to: CGPoint(x: track.minX + 0.50000 * track.width, y: track.minY + 0.15731 * track.height), controlPoint1: CGPoint(x: track.minX + 0.50000 * track.width, y: track.minY + -0.00000 * track.height), controlPoint2: CGPoint(x: track.minX + 0.50000 * track.width, y: track.minY + 0.08330 * track.height))
        bezierPath.addCurve(to: CGPoint(x: track.minX + 0.35064 * track.width, y: track.minY + 0.19318 * track.height), controlPoint1: CGPoint(x: track.minX + 0.44634 * track.width, y: track.minY + 0.15775 * track.height), controlPoint2: CGPoint(x: track.minX + 0.39563 * track.width, y: track.minY + 0.17062 * track.height))
        bezierPath.addCurve(to: CGPoint(x: track.minX + 0.34113 * track.width, y: track.minY + 0.19814 * track.height), controlPoint1: CGPoint(x: track.minX + 0.34744 * track.width, y: track.minY + 0.19479 * track.height), controlPoint2: CGPoint(x: track.minX + 0.34427 * track.width, y: track.minY + 0.19644 * track.height))
        bezierPath.addCurve(to: CGPoint(x: track.minX + 0.16292 * track.width, y: track.minY + 0.49719 * track.height), controlPoint1: CGPoint(x: track.minX + 0.23500 * track.width, y: track.minY + 0.25564 * track.height), controlPoint2: CGPoint(x: track.minX + 0.16292 * track.width, y: track.minY + 0.36800 * track.height))
        bezierPath.addLine(to: CGPoint(x: track.minX + 0.00281 * track.width, y: track.minY + 0.49719 * track.height))
        bezierPath.addLine(to: CGPoint(x: track.minX + 0.00281 * track.width, y: track.minY + 0.50281 * track.height))
        bezierPath.addLine(to: CGPoint(x: track.minX + 0.16297 * track.width, y: track.minY + 0.50281 * track.height))
        bezierPath.addCurve(to: CGPoint(x: track.minX + 0.50281 * track.width, y: track.minY + 0.83708 * track.height), controlPoint1: CGPoint(x: track.minX + 0.16597 * track.width, y: track.minY + 0.68793 * track.height), controlPoint2: CGPoint(x: track.minX + 0.31697 * track.width, y: track.minY + 0.83708 * track.height))
        bezierPath.addCurve(to: CGPoint(x: track.minX + 0.50843 * track.width, y: track.minY + 0.83703 * track.height), controlPoint1: CGPoint(x: track.minX + 0.50469 * track.width, y: track.minY + 0.83708 * track.height), controlPoint2: CGPoint(x: track.minX + 0.50656 * track.width, y: track.minY + 0.83706 * track.height))
        bezierPath.addCurve(to: CGPoint(x: track.minX + 0.50843 * track.width, y: track.minY + 0.99719 * track.height), controlPoint1: CGPoint(x: track.minX + 0.50843 * track.width, y: track.minY + 0.91559 * track.height), controlPoint2: CGPoint(x: track.minX + 0.50843 * track.width, y: track.minY + 0.99719 * track.height))
        bezierPath.addLine(to: CGPoint(x: track.minX + 0.51404 * track.width, y: track.minY + 0.99719 * track.height))
        bezierPath.addCurve(to: CGPoint(x: track.minX + 0.51404 * track.width, y: track.minY + 0.83690 * track.height), controlPoint1: CGPoint(x: track.minX + 0.51404 * track.width, y: track.minY + 0.99719 * track.height), controlPoint2: CGPoint(x: track.minX + 0.51404 * track.width, y: track.minY + 0.91550 * track.height))
        bezierPath.addCurve(to: CGPoint(x: track.minX + 0.84270 * track.width, y: track.minY + 0.49719 * track.height), controlPoint1: CGPoint(x: track.minX + 0.69656 * track.width, y: track.minY + 0.83097 * track.height), controlPoint2: CGPoint(x: track.minX + 0.84270 * track.width, y: track.minY + 0.68114 * track.height))
        bezierPath.addLine(to: CGPoint(x: track.minX + 0.99999 * track.width, y: track.minY + 0.49719 * track.height))
        bezierPath.addLine(to: CGPoint(x: track.minX + 1.00000 * track.width, y: track.minY + 0.50000 * track.height))
        bezierPath.addCurve(to: CGPoint(x: track.minX + 0.50000 * track.width, y: track.minY + 1.00000 * track.height), controlPoint1: CGPoint(x: track.minX + 1.00000 * track.width, y: track.minY + 0.77614 * track.height), controlPoint2: CGPoint(x: track.minX + 0.77614 * track.width, y: track.minY + 1.00000 * track.height))
        bezierPath.addCurve(to: CGPoint(x: track.minX + 0.00000 * track.width, y: track.minY + 0.50000 * track.height), controlPoint1: CGPoint(x: track.minX + 0.22386 * track.width, y: track.minY + 1.00000 * track.height), controlPoint2: CGPoint(x: track.minX + 0.00000 * track.width, y: track.minY + 0.77614 * track.height))
        bezierPath.addCurve(to: CGPoint(x: track.minX + 0.18805 * track.width, y: track.minY + 0.10922 * track.height), controlPoint1: CGPoint(x: track.minX + 0.00000 * track.width, y: track.minY + 0.34185 * track.height), controlPoint2: CGPoint(x: track.minX + 0.07343 * track.width, y: track.minY + 0.20084 * track.height))
        bezierPath.addCurve(to: CGPoint(x: track.minX + 0.21909 * track.width, y: track.minY + 0.08631 * track.height), controlPoint1: CGPoint(x: track.minX + 0.19809 * track.width, y: track.minY + 0.10120 * track.height), controlPoint2: CGPoint(x: track.minX + 0.20844 * track.width, y: track.minY + 0.09355 * track.height))
        bezierPath.addCurve(to: CGPoint(x: track.minX + 0.23673 * track.width, y: track.minY + 0.07484 * track.height), controlPoint1: CGPoint(x: track.minX + 0.22489 * track.width, y: track.minY + 0.08236 * track.height), controlPoint2: CGPoint(x: track.minX + 0.23077 * track.width, y: track.minY + 0.07854 * track.height))
        bezierPath.addCurve(to: CGPoint(x: track.minX + 0.49143 * track.width, y: track.minY + 0.00007 * track.height), controlPoint1: CGPoint(x: track.minX + 0.31093 * track.width, y: track.minY + 0.02880 * track.height), controlPoint2: CGPoint(x: track.minX + 0.39806 * track.width, y: track.minY + 0.00164 * track.height))
        bezierPath.addCurve(to: CGPoint(x: track.minX + 0.50000 * track.width, y: track.minY + 0.00000 * track.height), controlPoint1: CGPoint(x: track.minX + 0.49456 * track.width, y: track.minY + 0.00002 * track.height), controlPoint2: CGPoint(x: track.minX + 0.49727 * track.width, y: track.minY + 0.00000 * track.height))
        bezierPath.addLine(to: CGPoint(x: track.minX + 0.50000 * track.width, y: track.minY + 0.00002 * track.height))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        let bezierBounds = bezierPath.cgPath.boundingBoxOfPath
        context.drawLinearGradient(bluePink,
            start: CGPoint(x: bezierBounds.midX, y: bezierBounds.maxY),
            end: CGPoint(x: bezierBounds.midX, y: bezierBounds.minY),
            options: [])
        context.restoreGState()
        MightyMetUI.darkRed.setStroke()
        bezierPath.lineWidth = 1
        bezierPath.stroke()
    }

}



private extension UIColor {
    func withHue(_ newHue: CGFloat) -> UIColor {
        var saturation: CGFloat = 1, brightness: CGFloat = 1, alpha: CGFloat = 1
        self.getHue(nil, saturation: &saturation, brightness: &brightness, alpha: &alpha)
        return UIColor(hue: newHue, saturation: saturation, brightness: brightness, alpha: alpha)
    }
    func withSaturation(_ newSaturation: CGFloat) -> UIColor {
        var hue: CGFloat = 1, brightness: CGFloat = 1, alpha: CGFloat = 1
        self.getHue(&hue, saturation: nil, brightness: &brightness, alpha: &alpha)
        return UIColor(hue: hue, saturation: newSaturation, brightness: brightness, alpha: alpha)
    }
    func withBrightness(_ newBrightness: CGFloat) -> UIColor {
        var hue: CGFloat = 1, saturation: CGFloat = 1, alpha: CGFloat = 1
        self.getHue(&hue, saturation: &saturation, brightness: nil, alpha: &alpha)
        return UIColor(hue: hue, saturation: saturation, brightness: newBrightness, alpha: alpha)
    }
    func withAlpha(_ newAlpha: CGFloat) -> UIColor {
        var hue: CGFloat = 1, saturation: CGFloat = 1, brightness: CGFloat = 1
        self.getHue(&hue, saturation: &saturation, brightness: &brightness, alpha: nil)
        return UIColor(hue: hue, saturation: saturation, brightness: brightness, alpha: newAlpha)
    }
    func highlight(withLevel highlight: CGFloat) -> UIColor {
        var red: CGFloat = 1, green: CGFloat = 1, blue: CGFloat = 1, alpha: CGFloat = 1
        self.getRed(&red, green: &green, blue: &blue, alpha: &alpha)
        return UIColor(red: red * (1-highlight) + highlight, green: green * (1-highlight) + highlight, blue: blue * (1-highlight) + highlight, alpha: alpha * (1-highlight) + highlight)
    }
    func shadow(withLevel shadow: CGFloat) -> UIColor {
        var red: CGFloat = 1, green: CGFloat = 1, blue: CGFloat = 1, alpha: CGFloat = 1
        self.getRed(&red, green: &green, blue: &blue, alpha: &alpha)
        return UIColor(red: red * (1-shadow), green: green * (1-shadow), blue: blue * (1-shadow), alpha: alpha * (1-shadow) + shadow)
    }
    func blended(withFraction fraction: CGFloat, of color: UIColor) -> UIColor {
        var r1: CGFloat = 1, g1: CGFloat = 1, b1: CGFloat = 1, a1: CGFloat = 1
        var r2: CGFloat = 1, g2: CGFloat = 1, b2: CGFloat = 1, a2: CGFloat = 1

        self.getRed(&r1, green: &g1, blue: &b1, alpha: &a1)
        color.getRed(&r2, green: &g2, blue: &b2, alpha: &a2)

        return UIColor(red: r1 * (1 - fraction) + r2 * fraction,
            green: g1 * (1 - fraction) + g2 * fraction,
            blue: b1 * (1 - fraction) + b2 * fraction,
            alpha: a1 * (1 - fraction) + a2 * fraction);
    }
}
